/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: com.tencent.mm.sdk.plugin.MMPluginAPIImpl
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_COM_TENCENT_MM_SDK_PLUGIN_MMPLUGINAPIIMPL_HPP_DECL
#define J2CPP_COM_TENCENT_MM_SDK_PLUGIN_MMPLUGINAPIIMPL_HPP_DECL


namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Class; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace com { namespace tencent { namespace mm { namespace sdk { namespace channel { namespace MMessage_ { class CallBack; } } } } } } }
namespace j2cpp { namespace com { namespace tencent { namespace mm { namespace sdk { namespace plugin { class IMMPluginAPI; } } } } } }
namespace j2cpp { namespace com { namespace tencent { namespace mm { namespace sdk { namespace plugin { class Profile; } } } } } }


#include <android/content/Context.hpp>
#include <com/tencent/mm/sdk/channel/MMessage.hpp>
#include <com/tencent/mm/sdk/plugin/IMMPluginAPI.hpp>
#include <com/tencent/mm/sdk/plugin/Profile.hpp>
#include <java/lang/Class.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace com { namespace tencent { namespace mm { namespace sdk { namespace plugin {

	class MMPluginAPIImpl;
	class MMPluginAPIImpl
		: public object<MMPluginAPIImpl>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)

		explicit MMPluginAPIImpl(jobject jobj)
		: object<MMPluginAPIImpl>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<com::tencent::mm::sdk::plugin::IMMPluginAPI>() const;


		MMPluginAPIImpl(local_ref< android::content::Context > const&);
		void release();
		jboolean registerAutoMsg(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		jboolean unregisterAutoMsg(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		jboolean sendMsgNotify(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, jint, local_ref< java::lang::String >  const&, local_ref< java::lang::Class >  const&);
		local_ref< java::lang::String > getPluginKey(local_ref< java::lang::String >  const&);
		jboolean isPluginInstalled(local_ref< java::lang::String >  const&);
		jboolean installPlugin(local_ref< java::lang::String >  const&);
		void createQRCodeController(local_ref< java::lang::String >  const&);
		void createQRCodeController(local_ref< java::lang::String >  const&, local_ref< com::tencent::mm::sdk::channel::MMessage_::CallBack >  const&);
		void createQRCodeController(local_ref< java::lang::String >  const&, local_ref< com::tencent::mm::sdk::channel::MMessage_::CallBack >  const&, local_ref< java::lang::String >  const&);
		jboolean registerQRCodePattern(local_ref< java::lang::String >  const&, local_ref< com::tencent::mm::sdk::channel::MMessage_::CallBack >  const&, local_ref< java::lang::String >  const&);
		void jumpToSettingView(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void jumpToChattingUI(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< com::tencent::mm::sdk::plugin::Profile > getCurrentProfile(local_ref< java::lang::String >  const&);
		void jumpToBindQQ(local_ref< java::lang::String >  const&);
		void jumpToBindMobile(local_ref< java::lang::String >  const&);
		void jumpToBindEmail(local_ref< java::lang::String >  const&);
		void createMsgController(local_ref< java::lang::String >  const&);
		jboolean registerPattern(local_ref< java::lang::String >  const&, local_ref< com::tencent::mm::sdk::channel::MMessage_::CallBack >  const&, local_ref< java::lang::String >  const&);
		jboolean appendNetStat(jint, jint, jint);

	}; //class MMPluginAPIImpl

} //namespace plugin
} //namespace sdk
} //namespace mm
} //namespace tencent
} //namespace com

} //namespace j2cpp

#endif //J2CPP_COM_TENCENT_MM_SDK_PLUGIN_MMPLUGINAPIIMPL_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_COM_TENCENT_MM_SDK_PLUGIN_MMPLUGINAPIIMPL_HPP_IMPL
#define J2CPP_COM_TENCENT_MM_SDK_PLUGIN_MMPLUGINAPIIMPL_HPP_IMPL

namespace j2cpp {



com::tencent::mm::sdk::plugin::MMPluginAPIImpl::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

com::tencent::mm::sdk::plugin::MMPluginAPIImpl::operator local_ref<com::tencent::mm::sdk::plugin::IMMPluginAPI>() const
{
	return local_ref<com::tencent::mm::sdk::plugin::IMMPluginAPI>(get_jobject());
}


com::tencent::mm::sdk::plugin::MMPluginAPIImpl::MMPluginAPIImpl(local_ref< android::content::Context > const &a0)
: object<com::tencent::mm::sdk::plugin::MMPluginAPIImpl>(
	call_new_object<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(0),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


void com::tencent::mm::sdk::plugin::MMPluginAPIImpl::release()
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(1),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject());
}


jboolean com::tencent::mm::sdk::plugin::MMPluginAPIImpl::registerAutoMsg(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(3),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(3), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean com::tencent::mm::sdk::plugin::MMPluginAPIImpl::unregisterAutoMsg(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(4),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean com::tencent::mm::sdk::plugin::MMPluginAPIImpl::sendMsgNotify(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, jint a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::Class > const &a4)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(5),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>(get_jobject(), a0, a1, a2, a3, a4);
}

local_ref< java::lang::String > com::tencent::mm::sdk::plugin::MMPluginAPIImpl::getPluginKey(local_ref< java::lang::String > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(6),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jboolean com::tencent::mm::sdk::plugin::MMPluginAPIImpl::isPluginInstalled(local_ref< java::lang::String > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(7),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject(), a0);
}

jboolean com::tencent::mm::sdk::plugin::MMPluginAPIImpl::installPlugin(local_ref< java::lang::String > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(8),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(8), 
		jboolean
	>(get_jobject(), a0);
}


void com::tencent::mm::sdk::plugin::MMPluginAPIImpl::createQRCodeController(local_ref< java::lang::String > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(10),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(get_jobject(), a0);
}

void com::tencent::mm::sdk::plugin::MMPluginAPIImpl::createQRCodeController(local_ref< java::lang::String > const &a0, local_ref< com::tencent::mm::sdk::channel::MMessage_::CallBack > const &a1)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(11),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0, a1);
}

void com::tencent::mm::sdk::plugin::MMPluginAPIImpl::createQRCodeController(local_ref< java::lang::String > const &a0, local_ref< com::tencent::mm::sdk::channel::MMessage_::CallBack > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(12),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(12), 
		void
	>(get_jobject(), a0, a1, a2);
}

jboolean com::tencent::mm::sdk::plugin::MMPluginAPIImpl::registerQRCodePattern(local_ref< java::lang::String > const &a0, local_ref< com::tencent::mm::sdk::channel::MMessage_::CallBack > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(13),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(get_jobject(), a0, a1, a2);
}

void com::tencent::mm::sdk::plugin::MMPluginAPIImpl::jumpToSettingView(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(14),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(14), 
		void
	>(get_jobject(), a0, a1);
}

void com::tencent::mm::sdk::plugin::MMPluginAPIImpl::jumpToChattingUI(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(15),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(15), 
		void
	>(get_jobject(), a0, a1);
}

local_ref< com::tencent::mm::sdk::plugin::Profile > com::tencent::mm::sdk::plugin::MMPluginAPIImpl::getCurrentProfile(local_ref< java::lang::String > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(16),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< com::tencent::mm::sdk::plugin::Profile >
	>(get_jobject(), a0);
}

void com::tencent::mm::sdk::plugin::MMPluginAPIImpl::jumpToBindQQ(local_ref< java::lang::String > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(17),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(17), 
		void
	>(get_jobject(), a0);
}

void com::tencent::mm::sdk::plugin::MMPluginAPIImpl::jumpToBindMobile(local_ref< java::lang::String > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(18),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(18), 
		void
	>(get_jobject(), a0);
}

void com::tencent::mm::sdk::plugin::MMPluginAPIImpl::jumpToBindEmail(local_ref< java::lang::String > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(19),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(19), 
		void
	>(get_jobject(), a0);
}

void com::tencent::mm::sdk::plugin::MMPluginAPIImpl::createMsgController(local_ref< java::lang::String > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(20),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(20), 
		void
	>(get_jobject(), a0);
}

jboolean com::tencent::mm::sdk::plugin::MMPluginAPIImpl::registerPattern(local_ref< java::lang::String > const &a0, local_ref< com::tencent::mm::sdk::channel::MMessage_::CallBack > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(21),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(21), 
		jboolean
	>(get_jobject(), a0, a1, a2);
}

jboolean com::tencent::mm::sdk::plugin::MMPluginAPIImpl::appendNetStat(jint a0, jint a1, jint a2)
{
	return call_method<
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_NAME(22),
		com::tencent::mm::sdk::plugin::MMPluginAPIImpl::J2CPP_METHOD_SIGNATURE(22), 
		jboolean
	>(get_jobject(), a0, a1, a2);
}




J2CPP_DEFINE_CLASS(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,"com/tencent/mm/sdk/plugin/MMPluginAPIImpl")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,1,"release","()V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,2,"c","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,3,"registerAutoMsg","(Ljava/lang/String;Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,4,"unregisterAutoMsg","(Ljava/lang/String;Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,5,"sendMsgNotify","(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/Class;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,6,"getPluginKey","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,7,"isPluginInstalled","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,8,"installPlugin","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,9,"a","(Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,10,"createQRCodeController","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,11,"createQRCodeController","(Ljava/lang/String;Lcom/tencent/mm/sdk/channel/MMessage$CallBack;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,12,"createQRCodeController","(Ljava/lang/String;Lcom/tencent/mm/sdk/channel/MMessage$CallBack;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,13,"registerQRCodePattern","(Ljava/lang/String;Lcom/tencent/mm/sdk/channel/MMessage$CallBack;Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,14,"jumpToSettingView","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,15,"jumpToChattingUI","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,16,"getCurrentProfile","(Ljava/lang/String;)Lcom/tencent/mm/sdk/plugin/Profile;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,17,"jumpToBindQQ","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,18,"jumpToBindMobile","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,19,"jumpToBindEmail","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,20,"createMsgController","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,21,"registerPattern","(Ljava/lang/String;Lcom/tencent/mm/sdk/channel/MMessage$CallBack;Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,22,"appendNetStat","(III)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,23,"<clinit>","()V")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,0,"R","Landroid/content/Context;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,1,"bz","Lcom/tencent/mm/sdk/channel/MMessage$Receiver;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,2,"aE","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::plugin::MMPluginAPIImpl,3,"columns","[java.lang.String")

} //namespace j2cpp

#endif //J2CPP_COM_TENCENT_MM_SDK_PLUGIN_MMPLUGINAPIIMPL_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
