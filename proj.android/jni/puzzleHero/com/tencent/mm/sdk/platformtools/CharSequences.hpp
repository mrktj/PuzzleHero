/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: com.tencent.mm.sdk.platformtools.CharSequences
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_CHARSEQUENCES_HPP_DECL
#define J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_CHARSEQUENCES_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace com { namespace tencent { namespace mm { namespace sdk { namespace platformtools {

	class CharSequences;
	namespace CharSequences_ {

		class 1;
		class 1
			: public object<1>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_FIELD(0)

			explicit 1(jobject jobj)
			: object<1>(jobj)
			{
			}

			operator local_ref<java::lang::CharSequence>() const;
			operator local_ref<java::lang::Object>() const;


			jchar charAt(jint);
			jint length();
			local_ref< java::lang::CharSequence > subSequence(jint, jint);
			local_ref< java::lang::String > toString();

		}; //class 1

		class 2;
		class 2
			: public object<2>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)

			explicit 2(jobject jobj)
			: object<2>(jobj)
			{
			}

			operator local_ref<java::lang::CharSequence>() const;
			operator local_ref<java::lang::Object>() const;


			jchar charAt(jint);
			jint length();
			local_ref< java::lang::CharSequence > subSequence(jint, jint);
			local_ref< java::lang::String > toString();

		}; //class 2

	} //namespace CharSequences_

	class CharSequences
		: public object<CharSequences>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		typedef CharSequences_::1 1;
		typedef CharSequences_::2 2;

		explicit CharSequences(jobject jobj)
		: object<CharSequences>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		CharSequences();
		static local_ref< java::lang::CharSequence > forAsciiBytes(local_ref< array<jbyte,1> >  const&);
		static local_ref< java::lang::CharSequence > forAsciiBytes(local_ref< array<jbyte,1> >  const&, jint, jint);
		static jboolean equals(local_ref< java::lang::CharSequence >  const&, local_ref< java::lang::CharSequence >  const&);
		static jint compareToIgnoreCase(local_ref< java::lang::CharSequence >  const&, local_ref< java::lang::CharSequence >  const&);
	}; //class CharSequences

} //namespace platformtools
} //namespace sdk
} //namespace mm
} //namespace tencent
} //namespace com

} //namespace j2cpp

#endif //J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_CHARSEQUENCES_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_CHARSEQUENCES_HPP_IMPL
#define J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_CHARSEQUENCES_HPP_IMPL

namespace j2cpp {




com::tencent::mm::sdk::platformtools::CharSequences_::1::operator local_ref<java::lang::CharSequence>() const
{
	return local_ref<java::lang::CharSequence>(get_jobject());
}

com::tencent::mm::sdk::platformtools::CharSequences_::1::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


jchar com::tencent::mm::sdk::platformtools::CharSequences_::1::charAt(jint a0)
{
	return call_method<
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_METHOD_NAME(1),
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_METHOD_SIGNATURE(1), 
		jchar
	>(get_jobject(), a0);
}

jint com::tencent::mm::sdk::platformtools::CharSequences_::1::length()
{
	return call_method<
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_METHOD_NAME(2),
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(get_jobject());
}

local_ref< java::lang::CharSequence > com::tencent::mm::sdk::platformtools::CharSequences_::1::subSequence(jint a0, jint a1)
{
	return call_method<
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_METHOD_NAME(3),
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::CharSequence >
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::CharSequences_::1::toString()
{
	return call_method<
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_METHOD_NAME(4),
		com::tencent::mm::sdk::platformtools::CharSequences_::1::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(get_jobject());
}



J2CPP_DEFINE_CLASS(com::tencent::mm::sdk::platformtools::CharSequences_::1,"com/tencent/mm/sdk/platformtools/CharSequences$1")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences_::1,0,"<init>","([B)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences_::1,1,"charAt","(I)C")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences_::1,2,"length","()I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences_::1,3,"subSequence","(II)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences_::1,4,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::CharSequences_::1,0,"U","[B")


com::tencent::mm::sdk::platformtools::CharSequences_::2::operator local_ref<java::lang::CharSequence>() const
{
	return local_ref<java::lang::CharSequence>(get_jobject());
}

com::tencent::mm::sdk::platformtools::CharSequences_::2::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


jchar com::tencent::mm::sdk::platformtools::CharSequences_::2::charAt(jint a0)
{
	return call_method<
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_METHOD_NAME(1),
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_METHOD_SIGNATURE(1), 
		jchar
	>(get_jobject(), a0);
}

jint com::tencent::mm::sdk::platformtools::CharSequences_::2::length()
{
	return call_method<
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_METHOD_NAME(2),
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(get_jobject());
}

local_ref< java::lang::CharSequence > com::tencent::mm::sdk::platformtools::CharSequences_::2::subSequence(jint a0, jint a1)
{
	return call_method<
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_METHOD_NAME(3),
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::CharSequence >
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::CharSequences_::2::toString()
{
	return call_method<
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_METHOD_NAME(4),
		com::tencent::mm::sdk::platformtools::CharSequences_::2::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(get_jobject());
}



J2CPP_DEFINE_CLASS(com::tencent::mm::sdk::platformtools::CharSequences_::2,"com/tencent/mm/sdk/platformtools/CharSequences$2")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences_::2,0,"<init>","([BII)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences_::2,1,"charAt","(I)C")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences_::2,2,"length","()I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences_::2,3,"subSequence","(II)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences_::2,4,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::CharSequences_::2,0,"U","[B")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::CharSequences_::2,1,"V","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::CharSequences_::2,2,"W","I")



com::tencent::mm::sdk::platformtools::CharSequences::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


com::tencent::mm::sdk::platformtools::CharSequences::CharSequences()
: object<com::tencent::mm::sdk::platformtools::CharSequences>(
	call_new_object<
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_METHOD_NAME(0),
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


local_ref< java::lang::CharSequence > com::tencent::mm::sdk::platformtools::CharSequences::forAsciiBytes(local_ref< array<jbyte,1> > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_METHOD_NAME(1),
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::CharSequence >
	>(a0);
}

local_ref< java::lang::CharSequence > com::tencent::mm::sdk::platformtools::CharSequences::forAsciiBytes(local_ref< array<jbyte,1> > const &a0, jint a1, jint a2)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_METHOD_NAME(2),
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::CharSequence >
	>(a0, a1, a2);
}


jboolean com::tencent::mm::sdk::platformtools::CharSequences::equals(local_ref< java::lang::CharSequence > const &a0, local_ref< java::lang::CharSequence > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_METHOD_NAME(4),
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(a0, a1);
}

jint com::tencent::mm::sdk::platformtools::CharSequences::compareToIgnoreCase(local_ref< java::lang::CharSequence > const &a0, local_ref< java::lang::CharSequence > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_METHOD_NAME(5),
		com::tencent::mm::sdk::platformtools::CharSequences::J2CPP_METHOD_SIGNATURE(5), 
		jint
	>(a0, a1);
}


J2CPP_DEFINE_CLASS(com::tencent::mm::sdk::platformtools::CharSequences,"com/tencent/mm/sdk/platformtools/CharSequences")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences,0,"<init>","()V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences,1,"forAsciiBytes","([B)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences,2,"forAsciiBytes","([BII)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences,3,"a","(III)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences,4,"equals","(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::CharSequences,5,"compareToIgnoreCase","(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I")

} //namespace j2cpp

#endif //J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_CHARSEQUENCES_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
