/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: com.tencent.mm.sdk.platformtools.MTimerHandler
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_MTIMERHANDLER_HPP_DECL
#define J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_MTIMERHANDLER_HPP_DECL


namespace j2cpp { namespace android { namespace os { class Looper; } } }
namespace j2cpp { namespace android { namespace os { class Message; } } }
namespace j2cpp { namespace android { namespace os { class Handler; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace com { namespace tencent { namespace mm { namespace sdk { namespace platformtools { namespace MTimerHandler_ { class CallBack; } } } } } } }


#include <android/os/Handler.hpp>
#include <android/os/Looper.hpp>
#include <android/os/Message.hpp>
#include <com/tencent/mm/sdk/platformtools/MTimerHandler.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace com { namespace tencent { namespace mm { namespace sdk { namespace platformtools {

	class MTimerHandler;
	namespace MTimerHandler_ {

		class CallBack;
		class CallBack
			: public object<CallBack>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit CallBack(jobject jobj)
			: object<CallBack>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			jboolean onTimerExpired();
		}; //class CallBack

	} //namespace MTimerHandler_

	class MTimerHandler
		: public object<MTimerHandler>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)

		typedef MTimerHandler_::CallBack CallBack;

		explicit MTimerHandler(jobject jobj)
		: object<MTimerHandler>(jobj)
		{
		}

		operator local_ref<android::os::Handler>() const;
		operator local_ref<java::lang::Object>() const;


		MTimerHandler(local_ref< com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack > const&, jboolean);
		MTimerHandler(local_ref< android::os::Looper > const&, local_ref< com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack > const&, jboolean);
		void handleMessage(local_ref< android::os::Message >  const&);
		void startTimer(jlong);
		void stopTimer();
		jboolean stopped();

	}; //class MTimerHandler

} //namespace platformtools
} //namespace sdk
} //namespace mm
} //namespace tencent
} //namespace com

} //namespace j2cpp

#endif //J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_MTIMERHANDLER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_MTIMERHANDLER_HPP_IMPL
#define J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_MTIMERHANDLER_HPP_IMPL

namespace j2cpp {




com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

jboolean com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack::onTimerExpired()
{
	return call_method<
		com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack::J2CPP_METHOD_NAME(0),
		com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack::J2CPP_METHOD_SIGNATURE(0), 
		jboolean
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack,"com/tencent/mm/sdk/platformtools/MTimerHandler$CallBack")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack,0,"onTimerExpired","()Z")



com::tencent::mm::sdk::platformtools::MTimerHandler::operator local_ref<android::os::Handler>() const
{
	return local_ref<android::os::Handler>(get_jobject());
}

com::tencent::mm::sdk::platformtools::MTimerHandler::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


com::tencent::mm::sdk::platformtools::MTimerHandler::MTimerHandler(local_ref< com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack > const &a0, jboolean a1)
: object<com::tencent::mm::sdk::platformtools::MTimerHandler>(
	call_new_object<
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_NAME(0),
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1)
)
{
}



com::tencent::mm::sdk::platformtools::MTimerHandler::MTimerHandler(local_ref< android::os::Looper > const &a0, local_ref< com::tencent::mm::sdk::platformtools::MTimerHandler_::CallBack > const &a1, jboolean a2)
: object<com::tencent::mm::sdk::platformtools::MTimerHandler>(
	call_new_object<
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_NAME(1),
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1, a2)
)
{
}




void com::tencent::mm::sdk::platformtools::MTimerHandler::handleMessage(local_ref< android::os::Message > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_NAME(4),
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

void com::tencent::mm::sdk::platformtools::MTimerHandler::startTimer(jlong a0)
{
	return call_method<
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_NAME(5),
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

void com::tencent::mm::sdk::platformtools::MTimerHandler::stopTimer()
{
	return call_method<
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_NAME(6),
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject());
}

jboolean com::tencent::mm::sdk::platformtools::MTimerHandler::stopped()
{
	return call_method<
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_NAME(7),
		com::tencent::mm::sdk::platformtools::MTimerHandler::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject());
}



J2CPP_DEFINE_CLASS(com::tencent::mm::sdk::platformtools::MTimerHandler,"com/tencent/mm/sdk/platformtools/MTimerHandler")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::MTimerHandler,0,"<init>","(Lcom/tencent/mm/sdk/platformtools/MTimerHandler$CallBack;Z)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::MTimerHandler,1,"<init>","(Landroid/os/Looper;Lcom/tencent/mm/sdk/platformtools/MTimerHandler$CallBack;Z)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::MTimerHandler,2,"d","()I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::MTimerHandler,3,"finalize","()V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::MTimerHandler,4,"handleMessage","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::MTimerHandler,5,"startTimer","(J)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::MTimerHandler,6,"stopTimer","()V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::MTimerHandler,7,"stopped","()Z")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::MTimerHandler,0,"av","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::MTimerHandler,1,"aw","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::MTimerHandler,2,"aG","Z")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::MTimerHandler,3,"aH","J")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::MTimerHandler,4,"aI","Lcom/tencent/mm/sdk/platformtools/MTimerHandler$CallBack;")

} //namespace j2cpp

#endif //J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_MTIMERHANDLER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
