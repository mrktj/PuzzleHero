/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: com.tencent.mm.sdk.platformtools.Util
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_UTIL_HPP_DECL
#define J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_UTIL_HPP_DECL


namespace j2cpp { namespace org { namespace w3c { namespace dom { class Element; } } } }
namespace j2cpp { namespace android { namespace media { class MediaPlayer; } } }
namespace j2cpp { namespace android { namespace media { namespace MediaPlayer_ { class OnCompletionListener; } } } }
namespace j2cpp { namespace android { namespace content { class Intent; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace view { namespace View_ { class OnTouchListener; } } } }
namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace view { class MotionEvent; } } }
namespace j2cpp { namespace android { namespace graphics { class Bitmap; } } }
namespace j2cpp { namespace android { namespace graphics { namespace BitmapFactory_ { class Options; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace Bitmap_ { class CompressFormat; } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Integer; } } }
namespace j2cpp { namespace java { namespace lang { class Long; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Boolean; } } }
namespace j2cpp { namespace java { namespace util { class List; } } }
namespace j2cpp { namespace java { namespace util { class Map; } } }
namespace j2cpp { namespace java { namespace util { class LinkedHashMap; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }


#include <android/content/Context.hpp>
#include <android/content/Intent.hpp>
#include <android/graphics/Bitmap.hpp>
#include <android/graphics/BitmapFactory.hpp>
#include <android/media/MediaPlayer.hpp>
#include <android/view/MotionEvent.hpp>
#include <android/view/View.hpp>
#include <java/io/InputStream.hpp>
#include <java/lang/Boolean.hpp>
#include <java/lang/Integer.hpp>
#include <java/lang/Long.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/LinkedHashMap.hpp>
#include <java/util/List.hpp>
#include <java/util/Map.hpp>
#include <org/w3c/dom/Element.hpp>


namespace j2cpp {

namespace com { namespace tencent { namespace mm { namespace sdk { namespace platformtools {

	class Util;
	namespace Util_ {

		class 1;
		class 1
			: public object<1>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)

			explicit 1(jobject jobj)
			: object<1>(jobj)
			{
			}

			operator local_ref<android::media::MediaPlayer_::OnCompletionListener>() const;
			operator local_ref<java::lang::Object>() const;


			void onCompletion(local_ref< android::media::MediaPlayer >  const&);
		}; //class 1

		class 2;
		class 2
			: public object<2>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)

			explicit 2(jobject jobj)
			: object<2>(jobj)
			{
			}

			operator local_ref<android::view::View_::OnTouchListener>() const;
			operator local_ref<java::lang::Object>() const;


			jboolean onTouch(local_ref< android::view::View >  const&, local_ref< android::view::MotionEvent >  const&);

		}; //class 2

	} //namespace Util_

	class Util
		: public object<Util>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)
		J2CPP_DECLARE_METHOD(77)
		J2CPP_DECLARE_METHOD(78)
		J2CPP_DECLARE_METHOD(79)
		J2CPP_DECLARE_METHOD(80)
		J2CPP_DECLARE_METHOD(81)
		J2CPP_DECLARE_METHOD(82)
		J2CPP_DECLARE_METHOD(83)
		J2CPP_DECLARE_METHOD(84)
		J2CPP_DECLARE_METHOD(85)
		J2CPP_DECLARE_METHOD(86)
		J2CPP_DECLARE_METHOD(87)
		J2CPP_DECLARE_METHOD(88)
		J2CPP_DECLARE_METHOD(89)
		J2CPP_DECLARE_METHOD(90)
		J2CPP_DECLARE_METHOD(91)
		J2CPP_DECLARE_METHOD(92)
		J2CPP_DECLARE_METHOD(93)
		J2CPP_DECLARE_METHOD(94)
		J2CPP_DECLARE_METHOD(95)
		J2CPP_DECLARE_METHOD(96)
		J2CPP_DECLARE_METHOD(97)
		J2CPP_DECLARE_METHOD(98)
		J2CPP_DECLARE_METHOD(99)
		J2CPP_DECLARE_METHOD(100)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)
		J2CPP_DECLARE_FIELD(8)
		J2CPP_DECLARE_FIELD(9)
		J2CPP_DECLARE_FIELD(10)
		J2CPP_DECLARE_FIELD(11)
		J2CPP_DECLARE_FIELD(12)
		J2CPP_DECLARE_FIELD(13)
		J2CPP_DECLARE_FIELD(14)
		J2CPP_DECLARE_FIELD(15)
		J2CPP_DECLARE_FIELD(16)
		J2CPP_DECLARE_FIELD(17)
		J2CPP_DECLARE_FIELD(18)
		J2CPP_DECLARE_FIELD(19)
		J2CPP_DECLARE_FIELD(20)
		J2CPP_DECLARE_FIELD(21)
		J2CPP_DECLARE_FIELD(22)
		J2CPP_DECLARE_FIELD(23)
		J2CPP_DECLARE_FIELD(24)
		J2CPP_DECLARE_FIELD(25)
		J2CPP_DECLARE_FIELD(26)
		J2CPP_DECLARE_FIELD(27)
		J2CPP_DECLARE_FIELD(28)
		J2CPP_DECLARE_FIELD(29)
		J2CPP_DECLARE_FIELD(30)
		J2CPP_DECLARE_FIELD(31)
		J2CPP_DECLARE_FIELD(32)
		J2CPP_DECLARE_FIELD(33)

		typedef Util_::1 1;
		typedef Util_::2 2;

		explicit Util(jobject jobj)
		: object<Util>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static local_ref< java::lang::String > escapeSqlValue(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > listToString(local_ref< java::util::List >  const&, local_ref< java::lang::String >  const&);
		static local_ref< java::util::List > stringsToList(local_ref< array< local_ref< java::lang::String >, 1> >  const&);
		static jint getIntRandom(jint, jint);
		static jboolean isDayTimeNow();
		static jboolean isNightTime(jint, jint, jint);
		static local_ref< java::lang::String > getTimeZoneOffset();
		static local_ref< java::lang::String > getTimeZone();
		static local_ref< java::lang::String > getTimeZoneDef();
		static local_ref< java::lang::String > formatUnixTime(jlong);
		static jboolean isChinese(jchar);
		static jboolean isAlpha(jchar);
		static jboolean isNum(jchar);
		static jboolean isValidQQNum(local_ref< java::lang::String >  const&);
		static jboolean isValidEmail(local_ref< java::lang::String >  const&);
		static local_ref< array<jbyte,1> > bmpToByteArray(local_ref< android::graphics::Bitmap >  const&, jboolean);
		static jboolean isValidAccount(local_ref< java::lang::String >  const&);
		static jboolean isValidPassword(local_ref< java::lang::String >  const&);
		static local_ref< android::graphics::BitmapFactory_::Options > getImageOptions(local_ref< java::lang::String >  const&);
		static void saveBitmapToImage(local_ref< android::graphics::Bitmap >  const&, jint, local_ref< android::graphics::Bitmap_::CompressFormat >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, jboolean);
		static void saveBitmapToImage(local_ref< android::graphics::Bitmap >  const&, jint, local_ref< android::graphics::Bitmap_::CompressFormat >  const&, local_ref< java::lang::String >  const&, jboolean);
		static local_ref< android::graphics::Bitmap > getRoundedCornerBitmap(local_ref< android::graphics::Bitmap >  const&, jboolean, jfloat);
		static local_ref< java::lang::String > getSizeKB(jlong);
		static local_ref< java::lang::String > getSizeMB(jlong);
		static local_ref< java::lang::String > dumpArray(local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		static local_ref< java::lang::String > dumpHex(local_ref< array<jbyte,1> >  const&);
		static local_ref< android::content::Intent > getInstallPackIntent(local_ref< java::lang::String >  const&, local_ref< android::content::Context >  const&);
		static void installPack(local_ref< java::lang::String >  const&, local_ref< android::content::Context >  const&);
		static void shake(local_ref< android::content::Context >  const&, jboolean);
		static local_ref< android::media::MediaPlayer > playSound(local_ref< android::content::Context >  const&, jint, local_ref< android::media::MediaPlayer_::OnCompletionListener >  const&);
		static void playSound(local_ref< android::content::Context >  const&, jint);
		static jlong nowSecond();
		static local_ref< java::lang::String > formatSecToMin(jint);
		static jlong nowMilliSecond();
		static jlong secondsToNow(jlong);
		static jlong milliSecondsToNow(jlong);
		static jlong ticksToNow(jlong);
		static jlong currentTicks();
		static jlong currentDayInMills();
		static jlong currentWeekInMills();
		static jlong currentMonthInMills();
		static jlong currentYearInMills();
		static jint getSystemVersion(local_ref< android::content::Context >  const&, jint);
		static local_ref< java::lang::String > getDeviceId(local_ref< android::content::Context >  const&);
		static local_ref< java::lang::String > getLine1Number(local_ref< android::content::Context >  const&);
		static jboolean isLockScreen(local_ref< android::content::Context >  const&);
		static jboolean isTopActivity(local_ref< android::content::Context >  const&);
		static jboolean isServiceRunning(local_ref< android::content::Context >  const&, local_ref< java::lang::String >  const&);
		static jboolean isProcessRunning(local_ref< android::content::Context >  const&, local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > getTopActivityName(local_ref< android::content::Context >  const&);
		static jboolean isTopApplication(local_ref< android::content::Context >  const&);
		static jboolean isIntentAvailable(local_ref< android::content::Context >  const&, local_ref< android::content::Intent >  const&);
		static void freeBitmapMap(local_ref< java::util::Map >  const&);
		static void selectPicture(local_ref< android::content::Context >  const&, jint);
		static jint nullAsNil(local_ref< java::lang::Integer >  const&);
		static jlong nullAsNil(local_ref< java::lang::Long >  const&);
		static local_ref< java::lang::String > nullAsNil(local_ref< java::lang::String >  const&);
		static jboolean nullAsTrue(local_ref< java::lang::Boolean >  const&);
		static jboolean nullAsFalse(local_ref< java::lang::Boolean >  const&);
		static jint nullAs(local_ref< java::lang::Integer >  const&, jint);
		static jlong nullAs(local_ref< java::lang::Long >  const&, jlong);
		static jboolean nullAs(local_ref< java::lang::Boolean >  const&, jboolean);
		static local_ref< java::lang::String > nullAs(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		static jint nullAsInt(local_ref< java::lang::Object >  const&, jint);
		static jboolean isNullOrNil(local_ref< java::lang::String >  const&);
		static jboolean isNullOrNil(local_ref< array<jbyte,1> >  const&);
		static jint getInt(local_ref< java::lang::String >  const&, jint);
		static jlong getLong(local_ref< java::lang::String >  const&, jlong);
		static jint getHex(local_ref< java::lang::String >  const&, jint);
		static local_ref< java::util::Map > parseXml(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		static void transClickToSelect(local_ref< android::view::View >  const&, local_ref< android::view::View >  const&);
		static local_ref< java::lang::String > getCutPasswordMD5(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > getFullPasswordMD5(local_ref< java::lang::String >  const&);
		static local_ref< org::w3c::dom::Element > getRootElementFromXML(local_ref< array<jbyte,1> >  const&);
		static local_ref< java::lang::String > convertStreamToString(local_ref< java::io::InputStream >  const&);
		static local_ref< java::lang::String > encodeHexString(local_ref< array<jbyte,1> >  const&);
		static local_ref< array<jbyte,1> > decodeHexString(local_ref< java::lang::String >  const&);
		static jint guessHttpSendLength(jint);
		static jint guessHttpRecvLength(jint);
		static jint guessHttpContinueRecvLength(jint);
		static jint guessTcpConnectLength();
		static jint guessTcpDisconnectLength();
		static jint guessTcpSendLength(jint);
		static jint guessTcpRecvLength(jint);
		static local_ref< array<jint,1> > splitToIntArray(local_ref< java::lang::String >  const&);
		static jint UnZipFolder(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > getStack();
		static jboolean checkSDCardFull();
		static local_ref< java::lang::String > GetHostIp();
		static jboolean checkPermission(local_ref< android::content::Context >  const&, local_ref< java::lang::String >  const&);
		static jboolean jump(local_ref< android::content::Context >  const&, local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > escapeStringForXml(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > processXml(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > expandEntities(local_ref< java::lang::String >  const&);
		static jboolean isImgFile(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > mapToXml(local_ref< java::lang::String >  const&, local_ref< java::util::LinkedHashMap >  const&);
		static local_ref< java::util::Map > parseIni(local_ref< java::lang::String >  const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > MAX_DECODE_PICTURE_SIZE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< java::lang::String > > PHOTO_DEFAULT_EXT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jlong > MILLSECONDS_OF_SECOND;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jlong > MILLSECONDS_OF_MINUTE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jlong > MILLSECONDS_OF_HOUR;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jlong > MILLSECONDS_OF_DAY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), jlong > SECOND_OF_MINUTE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), jlong > MINUTE_OF_HOUR;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), jlong > MAX_32BIT_VALUE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(9), J2CPP_FIELD_SIGNATURE(9), jint > MIN_ACCOUNT_LENGTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(10), J2CPP_FIELD_SIGNATURE(10), jint > MAX_ACCOUNT_LENGTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(11), J2CPP_FIELD_SIGNATURE(11), jint > MIN_PASSWORD_LENGTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(12), J2CPP_FIELD_SIGNATURE(12), jint > MAX_PASSWORD_LENGTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(13), J2CPP_FIELD_SIGNATURE(13), jint > BIT_OF_KB;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(14), J2CPP_FIELD_SIGNATURE(14), jint > BIT_OF_MB;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(15), J2CPP_FIELD_SIGNATURE(15), jint > BYTE_OF_KB;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(16), J2CPP_FIELD_SIGNATURE(16), jint > BYTE_OF_MB;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(17), J2CPP_FIELD_SIGNATURE(17), jint > MASK_4BIT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(18), J2CPP_FIELD_SIGNATURE(18), jint > MASK_8BIT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(19), J2CPP_FIELD_SIGNATURE(19), jint > MASK_16BIT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(20), J2CPP_FIELD_SIGNATURE(20), jint > MASK_32BIT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(21), J2CPP_FIELD_SIGNATURE(21), jint > BEGIN_TIME;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(22), J2CPP_FIELD_SIGNATURE(22), jint > END_TIME;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(23), J2CPP_FIELD_SIGNATURE(23), jint > DAY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(24), J2CPP_FIELD_SIGNATURE(24), local_ref< java::lang::String > > TAIWAN;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(25), J2CPP_FIELD_SIGNATURE(25), local_ref< java::lang::String > > HONGKONG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(26), J2CPP_FIELD_SIGNATURE(26), local_ref< java::lang::String > > CHINA;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(27), J2CPP_FIELD_SIGNATURE(27), local_ref< java::lang::String > > ENGLISH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(28), J2CPP_FIELD_SIGNATURE(28), local_ref< java::lang::String > > LANGUAGE_DEFAULT;
	}; //class Util

} //namespace platformtools
} //namespace sdk
} //namespace mm
} //namespace tencent
} //namespace com

} //namespace j2cpp

#endif //J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_UTIL_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_UTIL_HPP_IMPL
#define J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_UTIL_HPP_IMPL

namespace j2cpp {




com::tencent::mm::sdk::platformtools::Util_::1::operator local_ref<android::media::MediaPlayer_::OnCompletionListener>() const
{
	return local_ref<android::media::MediaPlayer_::OnCompletionListener>(get_jobject());
}

com::tencent::mm::sdk::platformtools::Util_::1::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


void com::tencent::mm::sdk::platformtools::Util_::1::onCompletion(local_ref< android::media::MediaPlayer > const &a0)
{
	return call_method<
		com::tencent::mm::sdk::platformtools::Util_::1::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util_::1::J2CPP_METHOD_NAME(1),
		com::tencent::mm::sdk::platformtools::Util_::1::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(com::tencent::mm::sdk::platformtools::Util_::1,"com/tencent/mm/sdk/platformtools/Util$1")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util_::1,0,"<init>","()V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util_::1,1,"onCompletion","(Landroid/media/MediaPlayer;)V")


com::tencent::mm::sdk::platformtools::Util_::2::operator local_ref<android::view::View_::OnTouchListener>() const
{
	return local_ref<android::view::View_::OnTouchListener>(get_jobject());
}

com::tencent::mm::sdk::platformtools::Util_::2::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


jboolean com::tencent::mm::sdk::platformtools::Util_::2::onTouch(local_ref< android::view::View > const &a0, local_ref< android::view::MotionEvent > const &a1)
{
	return call_method<
		com::tencent::mm::sdk::platformtools::Util_::2::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util_::2::J2CPP_METHOD_NAME(1),
		com::tencent::mm::sdk::platformtools::Util_::2::J2CPP_METHOD_SIGNATURE(1), 
		jboolean
	>(get_jobject(), a0, a1);
}



J2CPP_DEFINE_CLASS(com::tencent::mm::sdk::platformtools::Util_::2,"com/tencent/mm/sdk/platformtools/Util$2")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util_::2,0,"<init>","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util_::2,1,"onTouch","(Landroid/view/View;Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util_::2,0,"bx","Landroid/view/View;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util_::2,1,"by","Landroid/view/View;")



com::tencent::mm::sdk::platformtools::Util::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::escapeSqlValue(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(1),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::listToString(local_ref< java::util::List > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(2),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::String >
	>(a0, a1);
}

local_ref< java::util::List > com::tencent::mm::sdk::platformtools::Util::stringsToList(local_ref< array< local_ref< java::lang::String >, 1> > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(3),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::util::List >
	>(a0);
}

jint com::tencent::mm::sdk::platformtools::Util::getIntRandom(jint a0, jint a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(4),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(a0, a1);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isDayTimeNow()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(5),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>();
}

jboolean com::tencent::mm::sdk::platformtools::Util::isNightTime(jint a0, jint a1, jint a2)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(6),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(6), 
		jboolean
	>(a0, a1, a2);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getTimeZoneOffset()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(7),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::lang::String >
	>();
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getTimeZone()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(8),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::lang::String >
	>();
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getTimeZoneDef()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(9),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::lang::String >
	>();
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::formatUnixTime(jlong a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(10),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::lang::String >
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isChinese(jchar a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(11),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(11), 
		jboolean
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isAlpha(jchar a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(12),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(12), 
		jboolean
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isNum(jchar a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(13),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isValidQQNum(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(14),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(14), 
		jboolean
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isValidEmail(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(15),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(15), 
		jboolean
	>(a0);
}

local_ref< array<jbyte,1> > com::tencent::mm::sdk::platformtools::Util::bmpToByteArray(local_ref< android::graphics::Bitmap > const &a0, jboolean a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(16),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< array<jbyte,1> >
	>(a0, a1);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isValidAccount(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(17),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(17), 
		jboolean
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isValidPassword(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(18),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(18), 
		jboolean
	>(a0);
}

local_ref< android::graphics::BitmapFactory_::Options > com::tencent::mm::sdk::platformtools::Util::getImageOptions(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(19),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(19), 
		local_ref< android::graphics::BitmapFactory_::Options >
	>(a0);
}

void com::tencent::mm::sdk::platformtools::Util::saveBitmapToImage(local_ref< android::graphics::Bitmap > const &a0, jint a1, local_ref< android::graphics::Bitmap_::CompressFormat > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::String > const &a4, jboolean a5)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(20),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(20), 
		void
	>(a0, a1, a2, a3, a4, a5);
}

void com::tencent::mm::sdk::platformtools::Util::saveBitmapToImage(local_ref< android::graphics::Bitmap > const &a0, jint a1, local_ref< android::graphics::Bitmap_::CompressFormat > const &a2, local_ref< java::lang::String > const &a3, jboolean a4)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(21),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(21), 
		void
	>(a0, a1, a2, a3, a4);
}

local_ref< android::graphics::Bitmap > com::tencent::mm::sdk::platformtools::Util::getRoundedCornerBitmap(local_ref< android::graphics::Bitmap > const &a0, jboolean a1, jfloat a2)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(22),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(22), 
		local_ref< android::graphics::Bitmap >
	>(a0, a1, a2);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getSizeKB(jlong a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(23),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(23), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getSizeMB(jlong a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(24),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(24), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::dumpArray(local_ref< array< local_ref< java::lang::Object >, 1> > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(25),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(25), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::dumpHex(local_ref< array<jbyte,1> > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(26),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(26), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< android::content::Intent > com::tencent::mm::sdk::platformtools::Util::getInstallPackIntent(local_ref< java::lang::String > const &a0, local_ref< android::content::Context > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(27),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(27), 
		local_ref< android::content::Intent >
	>(a0, a1);
}

void com::tencent::mm::sdk::platformtools::Util::installPack(local_ref< java::lang::String > const &a0, local_ref< android::content::Context > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(28),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(28), 
		void
	>(a0, a1);
}

void com::tencent::mm::sdk::platformtools::Util::shake(local_ref< android::content::Context > const &a0, jboolean a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(29),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(29), 
		void
	>(a0, a1);
}

local_ref< android::media::MediaPlayer > com::tencent::mm::sdk::platformtools::Util::playSound(local_ref< android::content::Context > const &a0, jint a1, local_ref< android::media::MediaPlayer_::OnCompletionListener > const &a2)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(30),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(30), 
		local_ref< android::media::MediaPlayer >
	>(a0, a1, a2);
}

void com::tencent::mm::sdk::platformtools::Util::playSound(local_ref< android::content::Context > const &a0, jint a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(31),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(31), 
		void
	>(a0, a1);
}

jlong com::tencent::mm::sdk::platformtools::Util::nowSecond()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(32),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(32), 
		jlong
	>();
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::formatSecToMin(jint a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(33),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(33), 
		local_ref< java::lang::String >
	>(a0);
}

jlong com::tencent::mm::sdk::platformtools::Util::nowMilliSecond()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(34),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(34), 
		jlong
	>();
}

jlong com::tencent::mm::sdk::platformtools::Util::secondsToNow(jlong a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(35),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(35), 
		jlong
	>(a0);
}

jlong com::tencent::mm::sdk::platformtools::Util::milliSecondsToNow(jlong a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(36),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(36), 
		jlong
	>(a0);
}

jlong com::tencent::mm::sdk::platformtools::Util::ticksToNow(jlong a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(37),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(37), 
		jlong
	>(a0);
}

jlong com::tencent::mm::sdk::platformtools::Util::currentTicks()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(38),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(38), 
		jlong
	>();
}

jlong com::tencent::mm::sdk::platformtools::Util::currentDayInMills()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(39),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(39), 
		jlong
	>();
}

jlong com::tencent::mm::sdk::platformtools::Util::currentWeekInMills()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(40),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(40), 
		jlong
	>();
}

jlong com::tencent::mm::sdk::platformtools::Util::currentMonthInMills()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(41),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(41), 
		jlong
	>();
}

jlong com::tencent::mm::sdk::platformtools::Util::currentYearInMills()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(42),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(42), 
		jlong
	>();
}

jint com::tencent::mm::sdk::platformtools::Util::getSystemVersion(local_ref< android::content::Context > const &a0, jint a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(43),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(43), 
		jint
	>(a0, a1);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getDeviceId(local_ref< android::content::Context > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(44),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(44), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getLine1Number(local_ref< android::content::Context > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(45),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(45), 
		local_ref< java::lang::String >
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isLockScreen(local_ref< android::content::Context > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(46),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(46), 
		jboolean
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isTopActivity(local_ref< android::content::Context > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(47),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(47), 
		jboolean
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isServiceRunning(local_ref< android::content::Context > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(48),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(48), 
		jboolean
	>(a0, a1);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isProcessRunning(local_ref< android::content::Context > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(49),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(49), 
		jboolean
	>(a0, a1);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getTopActivityName(local_ref< android::content::Context > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(50),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(50), 
		local_ref< java::lang::String >
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isTopApplication(local_ref< android::content::Context > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(51),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(51), 
		jboolean
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isIntentAvailable(local_ref< android::content::Context > const &a0, local_ref< android::content::Intent > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(52),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(52), 
		jboolean
	>(a0, a1);
}

void com::tencent::mm::sdk::platformtools::Util::freeBitmapMap(local_ref< java::util::Map > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(53),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(53), 
		void
	>(a0);
}

void com::tencent::mm::sdk::platformtools::Util::selectPicture(local_ref< android::content::Context > const &a0, jint a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(54),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(54), 
		void
	>(a0, a1);
}

jint com::tencent::mm::sdk::platformtools::Util::nullAsNil(local_ref< java::lang::Integer > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(55),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(55), 
		jint
	>(a0);
}

jlong com::tencent::mm::sdk::platformtools::Util::nullAsNil(local_ref< java::lang::Long > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(56),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(56), 
		jlong
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::nullAsNil(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(57),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(57), 
		local_ref< java::lang::String >
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::nullAsTrue(local_ref< java::lang::Boolean > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(58),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(58), 
		jboolean
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::nullAsFalse(local_ref< java::lang::Boolean > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(59),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(59), 
		jboolean
	>(a0);
}

jint com::tencent::mm::sdk::platformtools::Util::nullAs(local_ref< java::lang::Integer > const &a0, jint a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(60),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(60), 
		jint
	>(a0, a1);
}

jlong com::tencent::mm::sdk::platformtools::Util::nullAs(local_ref< java::lang::Long > const &a0, jlong a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(61),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(61), 
		jlong
	>(a0, a1);
}

jboolean com::tencent::mm::sdk::platformtools::Util::nullAs(local_ref< java::lang::Boolean > const &a0, jboolean a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(62),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(62), 
		jboolean
	>(a0, a1);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::nullAs(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(63),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(63), 
		local_ref< java::lang::String >
	>(a0, a1);
}

jint com::tencent::mm::sdk::platformtools::Util::nullAsInt(local_ref< java::lang::Object > const &a0, jint a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(64),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(64), 
		jint
	>(a0, a1);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isNullOrNil(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(65),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(65), 
		jboolean
	>(a0);
}

jboolean com::tencent::mm::sdk::platformtools::Util::isNullOrNil(local_ref< array<jbyte,1> > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(66),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(66), 
		jboolean
	>(a0);
}

jint com::tencent::mm::sdk::platformtools::Util::getInt(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(67),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(67), 
		jint
	>(a0, a1);
}

jlong com::tencent::mm::sdk::platformtools::Util::getLong(local_ref< java::lang::String > const &a0, jlong a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(68),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(68), 
		jlong
	>(a0, a1);
}

jint com::tencent::mm::sdk::platformtools::Util::getHex(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(69),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(69), 
		jint
	>(a0, a1);
}

local_ref< java::util::Map > com::tencent::mm::sdk::platformtools::Util::parseXml(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(70),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(70), 
		local_ref< java::util::Map >
	>(a0, a1, a2);
}


void com::tencent::mm::sdk::platformtools::Util::transClickToSelect(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(72),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(72), 
		void
	>(a0, a1);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getCutPasswordMD5(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(73),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(73), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getFullPasswordMD5(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(74),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(74), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< org::w3c::dom::Element > com::tencent::mm::sdk::platformtools::Util::getRootElementFromXML(local_ref< array<jbyte,1> > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(75),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(75), 
		local_ref< org::w3c::dom::Element >
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::convertStreamToString(local_ref< java::io::InputStream > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(76),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(76), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::encodeHexString(local_ref< array<jbyte,1> > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(77),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(77), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< array<jbyte,1> > com::tencent::mm::sdk::platformtools::Util::decodeHexString(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(78),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(78), 
		local_ref< array<jbyte,1> >
	>(a0);
}

jint com::tencent::mm::sdk::platformtools::Util::guessHttpSendLength(jint a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(79),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(79), 
		jint
	>(a0);
}

jint com::tencent::mm::sdk::platformtools::Util::guessHttpRecvLength(jint a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(80),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(80), 
		jint
	>(a0);
}

jint com::tencent::mm::sdk::platformtools::Util::guessHttpContinueRecvLength(jint a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(81),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(81), 
		jint
	>(a0);
}

jint com::tencent::mm::sdk::platformtools::Util::guessTcpConnectLength()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(82),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(82), 
		jint
	>();
}

jint com::tencent::mm::sdk::platformtools::Util::guessTcpDisconnectLength()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(83),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(83), 
		jint
	>();
}

jint com::tencent::mm::sdk::platformtools::Util::guessTcpSendLength(jint a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(84),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(84), 
		jint
	>(a0);
}

jint com::tencent::mm::sdk::platformtools::Util::guessTcpRecvLength(jint a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(85),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(85), 
		jint
	>(a0);
}

local_ref< array<jint,1> > com::tencent::mm::sdk::platformtools::Util::splitToIntArray(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(86),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(86), 
		local_ref< array<jint,1> >
	>(a0);
}

jint com::tencent::mm::sdk::platformtools::Util::UnZipFolder(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(87),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(87), 
		jint
	>(a0, a1);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::getStack()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(88),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(88), 
		local_ref< java::lang::String >
	>();
}

jboolean com::tencent::mm::sdk::platformtools::Util::checkSDCardFull()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(89),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(89), 
		jboolean
	>();
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::GetHostIp()
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(90),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(90), 
		local_ref< java::lang::String >
	>();
}

jboolean com::tencent::mm::sdk::platformtools::Util::checkPermission(local_ref< android::content::Context > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(91),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(91), 
		jboolean
	>(a0, a1);
}

jboolean com::tencent::mm::sdk::platformtools::Util::jump(local_ref< android::content::Context > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(92),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(92), 
		jboolean
	>(a0, a1);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::escapeStringForXml(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(93),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(93), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::processXml(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(94),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(94), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::expandEntities(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(95),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(95), 
		local_ref< java::lang::String >
	>(a0);
}


jboolean com::tencent::mm::sdk::platformtools::Util::isImgFile(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(97),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(97), 
		jboolean
	>(a0);
}

local_ref< java::lang::String > com::tencent::mm::sdk::platformtools::Util::mapToXml(local_ref< java::lang::String > const &a0, local_ref< java::util::LinkedHashMap > const &a1)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(98),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(98), 
		local_ref< java::lang::String >
	>(a0, a1);
}

local_ref< java::util::Map > com::tencent::mm::sdk::platformtools::Util::parseIni(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_NAME(99),
		com::tencent::mm::sdk::platformtools::Util::J2CPP_METHOD_SIGNATURE(99), 
		local_ref< java::util::Map >
	>(a0);
}



static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(0),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(0),
	jint
> com::tencent::mm::sdk::platformtools::Util::MAX_DECODE_PICTURE_SIZE;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(1),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(1),
	local_ref< java::lang::String >
> com::tencent::mm::sdk::platformtools::Util::PHOTO_DEFAULT_EXT;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(2),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(2),
	jlong
> com::tencent::mm::sdk::platformtools::Util::MILLSECONDS_OF_SECOND;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(3),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(3),
	jlong
> com::tencent::mm::sdk::platformtools::Util::MILLSECONDS_OF_MINUTE;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(4),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(4),
	jlong
> com::tencent::mm::sdk::platformtools::Util::MILLSECONDS_OF_HOUR;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(5),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(5),
	jlong
> com::tencent::mm::sdk::platformtools::Util::MILLSECONDS_OF_DAY;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(6),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(6),
	jlong
> com::tencent::mm::sdk::platformtools::Util::SECOND_OF_MINUTE;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(7),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(7),
	jlong
> com::tencent::mm::sdk::platformtools::Util::MINUTE_OF_HOUR;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(8),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(8),
	jlong
> com::tencent::mm::sdk::platformtools::Util::MAX_32BIT_VALUE;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(9),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(9),
	jint
> com::tencent::mm::sdk::platformtools::Util::MIN_ACCOUNT_LENGTH;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(10),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(10),
	jint
> com::tencent::mm::sdk::platformtools::Util::MAX_ACCOUNT_LENGTH;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(11),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(11),
	jint
> com::tencent::mm::sdk::platformtools::Util::MIN_PASSWORD_LENGTH;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(12),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(12),
	jint
> com::tencent::mm::sdk::platformtools::Util::MAX_PASSWORD_LENGTH;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(13),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(13),
	jint
> com::tencent::mm::sdk::platformtools::Util::BIT_OF_KB;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(14),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(14),
	jint
> com::tencent::mm::sdk::platformtools::Util::BIT_OF_MB;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(15),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(15),
	jint
> com::tencent::mm::sdk::platformtools::Util::BYTE_OF_KB;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(16),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(16),
	jint
> com::tencent::mm::sdk::platformtools::Util::BYTE_OF_MB;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(17),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(17),
	jint
> com::tencent::mm::sdk::platformtools::Util::MASK_4BIT;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(18),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(18),
	jint
> com::tencent::mm::sdk::platformtools::Util::MASK_8BIT;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(19),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(19),
	jint
> com::tencent::mm::sdk::platformtools::Util::MASK_16BIT;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(20),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(20),
	jint
> com::tencent::mm::sdk::platformtools::Util::MASK_32BIT;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(21),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(21),
	jint
> com::tencent::mm::sdk::platformtools::Util::BEGIN_TIME;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(22),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(22),
	jint
> com::tencent::mm::sdk::platformtools::Util::END_TIME;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(23),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(23),
	jint
> com::tencent::mm::sdk::platformtools::Util::DAY;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(24),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(24),
	local_ref< java::lang::String >
> com::tencent::mm::sdk::platformtools::Util::TAIWAN;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(25),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(25),
	local_ref< java::lang::String >
> com::tencent::mm::sdk::platformtools::Util::HONGKONG;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(26),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(26),
	local_ref< java::lang::String >
> com::tencent::mm::sdk::platformtools::Util::CHINA;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(27),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(27),
	local_ref< java::lang::String >
> com::tencent::mm::sdk::platformtools::Util::ENGLISH;

static_field<
	com::tencent::mm::sdk::platformtools::Util::J2CPP_CLASS_NAME,
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_NAME(28),
	com::tencent::mm::sdk::platformtools::Util::J2CPP_FIELD_SIGNATURE(28),
	local_ref< java::lang::String >
> com::tencent::mm::sdk::platformtools::Util::LANGUAGE_DEFAULT;


J2CPP_DEFINE_CLASS(com::tencent::mm::sdk::platformtools::Util,"com/tencent/mm/sdk/platformtools/Util")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,0,"<init>","()V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,1,"escapeSqlValue","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,2,"listToString","(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,3,"stringsToList","([java.lang.String)Ljava/util/List;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,4,"getIntRandom","(II)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,5,"isDayTimeNow","()Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,6,"isNightTime","(III)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,7,"getTimeZoneOffset","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,8,"getTimeZone","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,9,"getTimeZoneDef","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,10,"formatUnixTime","(J)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,11,"isChinese","(C)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,12,"isAlpha","(C)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,13,"isNum","(C)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,14,"isValidQQNum","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,15,"isValidEmail","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,16,"bmpToByteArray","(Landroid/graphics/Bitmap;Z)[B")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,17,"isValidAccount","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,18,"isValidPassword","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,19,"getImageOptions","(Ljava/lang/String;)Landroid/graphics/BitmapFactory$Options;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,20,"saveBitmapToImage","(Landroid/graphics/Bitmap;ILandroid/graphics/Bitmap$CompressFormat;Ljava/lang/String;Ljava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,21,"saveBitmapToImage","(Landroid/graphics/Bitmap;ILandroid/graphics/Bitmap$CompressFormat;Ljava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,22,"getRoundedCornerBitmap","(Landroid/graphics/Bitmap;ZF)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,23,"getSizeKB","(J)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,24,"getSizeMB","(J)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,25,"dumpArray","([java.lang.Object)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,26,"dumpHex","([B)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,27,"getInstallPackIntent","(Ljava/lang/String;Landroid/content/Context;)Landroid/content/Intent;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,28,"installPack","(Ljava/lang/String;Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,29,"shake","(Landroid/content/Context;Z)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,30,"playSound","(Landroid/content/Context;ILandroid/media/MediaPlayer$OnCompletionListener;)Landroid/media/MediaPlayer;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,31,"playSound","(Landroid/content/Context;I)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,32,"nowSecond","()J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,33,"formatSecToMin","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,34,"nowMilliSecond","()J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,35,"secondsToNow","(J)J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,36,"milliSecondsToNow","(J)J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,37,"ticksToNow","(J)J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,38,"currentTicks","()J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,39,"currentDayInMills","()J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,40,"currentWeekInMills","()J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,41,"currentMonthInMills","()J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,42,"currentYearInMills","()J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,43,"getSystemVersion","(Landroid/content/Context;I)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,44,"getDeviceId","(Landroid/content/Context;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,45,"getLine1Number","(Landroid/content/Context;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,46,"isLockScreen","(Landroid/content/Context;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,47,"isTopActivity","(Landroid/content/Context;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,48,"isServiceRunning","(Landroid/content/Context;Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,49,"isProcessRunning","(Landroid/content/Context;Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,50,"getTopActivityName","(Landroid/content/Context;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,51,"isTopApplication","(Landroid/content/Context;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,52,"isIntentAvailable","(Landroid/content/Context;Landroid/content/Intent;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,53,"freeBitmapMap","(Ljava/util/Map;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,54,"selectPicture","(Landroid/content/Context;I)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,55,"nullAsNil","(Ljava/lang/Integer;)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,56,"nullAsNil","(Ljava/lang/Long;)J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,57,"nullAsNil","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,58,"nullAsTrue","(Ljava/lang/Boolean;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,59,"nullAsFalse","(Ljava/lang/Boolean;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,60,"nullAs","(Ljava/lang/Integer;I)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,61,"nullAs","(Ljava/lang/Long;J)J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,62,"nullAs","(Ljava/lang/Boolean;Z)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,63,"nullAs","(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,64,"nullAsInt","(Ljava/lang/Object;I)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,65,"isNullOrNil","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,66,"isNullOrNil","([B)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,67,"getInt","(Ljava/lang/String;I)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,68,"getLong","(Ljava/lang/String;J)J")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,69,"getHex","(Ljava/lang/String;I)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,70,"parseXml","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,71,"a","(Ljava/util/Map;Ljava/lang/String;Lorg/w3c/dom/Node;I)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,72,"transClickToSelect","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,73,"getCutPasswordMD5","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,74,"getFullPasswordMD5","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,75,"getRootElementFromXML","([B)Lorg/w3c/dom/Element;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,76,"convertStreamToString","(Ljava/io/InputStream;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,77,"encodeHexString","([B)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,78,"decodeHexString","(Ljava/lang/String;)[B")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,79,"guessHttpSendLength","(I)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,80,"guessHttpRecvLength","(I)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,81,"guessHttpContinueRecvLength","(I)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,82,"guessTcpConnectLength","()I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,83,"guessTcpDisconnectLength","()I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,84,"guessTcpSendLength","(I)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,85,"guessTcpRecvLength","(I)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,86,"splitToIntArray","(Ljava/lang/String;)[I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,87,"UnZipFolder","(Ljava/lang/String;Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,88,"getStack","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,89,"checkSDCardFull","()Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,90,"GetHostIp","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,91,"checkPermission","(Landroid/content/Context;Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,92,"jump","(Landroid/content/Context;Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,93,"escapeStringForXml","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,94,"processXml","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,95,"expandEntities","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,96,"a","([CII)I")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,97,"isImgFile","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,98,"mapToXml","(Ljava/lang/String;Ljava/util/LinkedHashMap;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,99,"parseIni","(Ljava/lang/String;)Ljava/util/Map;")
J2CPP_DEFINE_METHOD(com::tencent::mm::sdk::platformtools::Util,100,"<clinit>","()V")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,0,"MAX_DECODE_PICTURE_SIZE","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,1,"PHOTO_DEFAULT_EXT","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,2,"MILLSECONDS_OF_SECOND","J")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,3,"MILLSECONDS_OF_MINUTE","J")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,4,"MILLSECONDS_OF_HOUR","J")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,5,"MILLSECONDS_OF_DAY","J")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,6,"SECOND_OF_MINUTE","J")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,7,"MINUTE_OF_HOUR","J")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,8,"MAX_32BIT_VALUE","J")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,9,"MIN_ACCOUNT_LENGTH","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,10,"MAX_ACCOUNT_LENGTH","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,11,"MIN_PASSWORD_LENGTH","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,12,"MAX_PASSWORD_LENGTH","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,13,"BIT_OF_KB","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,14,"BIT_OF_MB","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,15,"BYTE_OF_KB","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,16,"BYTE_OF_MB","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,17,"MASK_4BIT","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,18,"MASK_8BIT","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,19,"MASK_16BIT","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,20,"MASK_32BIT","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,21,"BEGIN_TIME","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,22,"END_TIME","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,23,"DAY","I")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,24,"TAIWAN","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,25,"HONGKONG","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,26,"CHINA","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,27,"ENGLISH","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,28,"LANGUAGE_DEFAULT","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,29,"bt","[J")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,30,"GMT","Ljava/util/TimeZone;")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,31,"bu","[C")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,32,"bv","[C")
J2CPP_DEFINE_FIELD(com::tencent::mm::sdk::platformtools::Util,33,"bw","[java.lang.String")

} //namespace j2cpp

#endif //J2CPP_COM_TENCENT_MM_SDK_PLATFORMTOOLS_UTIL_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
