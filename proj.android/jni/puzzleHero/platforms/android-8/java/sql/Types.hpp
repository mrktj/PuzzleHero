/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.sql.Types
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_TYPES_HPP_DECL
#define J2CPP_JAVA_SQL_TYPES_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace java { namespace sql {

	class Types;
	class Types
		: public object<Types>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)
		J2CPP_DECLARE_FIELD(8)
		J2CPP_DECLARE_FIELD(9)
		J2CPP_DECLARE_FIELD(10)
		J2CPP_DECLARE_FIELD(11)
		J2CPP_DECLARE_FIELD(12)
		J2CPP_DECLARE_FIELD(13)
		J2CPP_DECLARE_FIELD(14)
		J2CPP_DECLARE_FIELD(15)
		J2CPP_DECLARE_FIELD(16)
		J2CPP_DECLARE_FIELD(17)
		J2CPP_DECLARE_FIELD(18)
		J2CPP_DECLARE_FIELD(19)
		J2CPP_DECLARE_FIELD(20)
		J2CPP_DECLARE_FIELD(21)
		J2CPP_DECLARE_FIELD(22)
		J2CPP_DECLARE_FIELD(23)
		J2CPP_DECLARE_FIELD(24)
		J2CPP_DECLARE_FIELD(25)
		J2CPP_DECLARE_FIELD(26)
		J2CPP_DECLARE_FIELD(27)
		J2CPP_DECLARE_FIELD(28)
		J2CPP_DECLARE_FIELD(29)

		explicit Types(jobject jobj)
		: object<Types>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;



		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > ARRAY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > BIGINT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > BINARY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > BIT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > BLOB;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jint > BOOLEAN;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), jint > CHAR;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), jint > CLOB;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), jint > DATALINK;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(9), J2CPP_FIELD_SIGNATURE(9), jint > DATE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(10), J2CPP_FIELD_SIGNATURE(10), jint > DECIMAL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(11), J2CPP_FIELD_SIGNATURE(11), jint > DISTINCT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(12), J2CPP_FIELD_SIGNATURE(12), jint > DOUBLE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(13), J2CPP_FIELD_SIGNATURE(13), jint > FLOAT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(14), J2CPP_FIELD_SIGNATURE(14), jint > INTEGER;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(15), J2CPP_FIELD_SIGNATURE(15), jint > JAVA_OBJECT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(16), J2CPP_FIELD_SIGNATURE(16), jint > LONGVARBINARY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(17), J2CPP_FIELD_SIGNATURE(17), jint > LONGVARCHAR;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(18), J2CPP_FIELD_SIGNATURE(18), jint > NULL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(19), J2CPP_FIELD_SIGNATURE(19), jint > NUMERIC;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(20), J2CPP_FIELD_SIGNATURE(20), jint > OTHER;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(21), J2CPP_FIELD_SIGNATURE(21), jint > REAL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(22), J2CPP_FIELD_SIGNATURE(22), jint > REF;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(23), J2CPP_FIELD_SIGNATURE(23), jint > SMALLINT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(24), J2CPP_FIELD_SIGNATURE(24), jint > STRUCT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(25), J2CPP_FIELD_SIGNATURE(25), jint > TIME;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(26), J2CPP_FIELD_SIGNATURE(26), jint > TIMESTAMP;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(27), J2CPP_FIELD_SIGNATURE(27), jint > TINYINT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(28), J2CPP_FIELD_SIGNATURE(28), jint > VARBINARY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(29), J2CPP_FIELD_SIGNATURE(29), jint > VARCHAR;
	}; //class Types

} //namespace sql
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_TYPES_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_TYPES_HPP_IMPL
#define J2CPP_JAVA_SQL_TYPES_HPP_IMPL

namespace j2cpp {



java::sql::Types::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}



static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(0),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(0),
	jint
> java::sql::Types::ARRAY;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(1),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(1),
	jint
> java::sql::Types::BIGINT;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(2),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(2),
	jint
> java::sql::Types::BINARY;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(3),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(3),
	jint
> java::sql::Types::BIT;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(4),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(4),
	jint
> java::sql::Types::BLOB;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(5),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(5),
	jint
> java::sql::Types::BOOLEAN;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(6),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(6),
	jint
> java::sql::Types::CHAR;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(7),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(7),
	jint
> java::sql::Types::CLOB;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(8),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(8),
	jint
> java::sql::Types::DATALINK;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(9),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(9),
	jint
> java::sql::Types::DATE;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(10),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(10),
	jint
> java::sql::Types::DECIMAL;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(11),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(11),
	jint
> java::sql::Types::DISTINCT;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(12),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(12),
	jint
> java::sql::Types::DOUBLE;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(13),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(13),
	jint
> java::sql::Types::FLOAT;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(14),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(14),
	jint
> java::sql::Types::INTEGER;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(15),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(15),
	jint
> java::sql::Types::JAVA_OBJECT;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(16),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(16),
	jint
> java::sql::Types::LONGVARBINARY;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(17),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(17),
	jint
> java::sql::Types::LONGVARCHAR;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(18),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(18),
	jint
> java::sql::Types::NULL;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(19),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(19),
	jint
> java::sql::Types::NUMERIC;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(20),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(20),
	jint
> java::sql::Types::OTHER;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(21),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(21),
	jint
> java::sql::Types::REAL;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(22),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(22),
	jint
> java::sql::Types::REF;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(23),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(23),
	jint
> java::sql::Types::SMALLINT;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(24),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(24),
	jint
> java::sql::Types::STRUCT;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(25),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(25),
	jint
> java::sql::Types::TIME;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(26),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(26),
	jint
> java::sql::Types::TIMESTAMP;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(27),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(27),
	jint
> java::sql::Types::TINYINT;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(28),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(28),
	jint
> java::sql::Types::VARBINARY;

static_field<
	java::sql::Types::J2CPP_CLASS_NAME,
	java::sql::Types::J2CPP_FIELD_NAME(29),
	java::sql::Types::J2CPP_FIELD_SIGNATURE(29),
	jint
> java::sql::Types::VARCHAR;


J2CPP_DEFINE_CLASS(java::sql::Types,"java/sql/Types")
J2CPP_DEFINE_METHOD(java::sql::Types,0,"<init>","()V")
J2CPP_DEFINE_FIELD(java::sql::Types,0,"ARRAY","I")
J2CPP_DEFINE_FIELD(java::sql::Types,1,"BIGINT","I")
J2CPP_DEFINE_FIELD(java::sql::Types,2,"BINARY","I")
J2CPP_DEFINE_FIELD(java::sql::Types,3,"BIT","I")
J2CPP_DEFINE_FIELD(java::sql::Types,4,"BLOB","I")
J2CPP_DEFINE_FIELD(java::sql::Types,5,"BOOLEAN","I")
J2CPP_DEFINE_FIELD(java::sql::Types,6,"CHAR","I")
J2CPP_DEFINE_FIELD(java::sql::Types,7,"CLOB","I")
J2CPP_DEFINE_FIELD(java::sql::Types,8,"DATALINK","I")
J2CPP_DEFINE_FIELD(java::sql::Types,9,"DATE","I")
J2CPP_DEFINE_FIELD(java::sql::Types,10,"DECIMAL","I")
J2CPP_DEFINE_FIELD(java::sql::Types,11,"DISTINCT","I")
J2CPP_DEFINE_FIELD(java::sql::Types,12,"DOUBLE","I")
J2CPP_DEFINE_FIELD(java::sql::Types,13,"FLOAT","I")
J2CPP_DEFINE_FIELD(java::sql::Types,14,"INTEGER","I")
J2CPP_DEFINE_FIELD(java::sql::Types,15,"JAVA_OBJECT","I")
J2CPP_DEFINE_FIELD(java::sql::Types,16,"LONGVARBINARY","I")
J2CPP_DEFINE_FIELD(java::sql::Types,17,"LONGVARCHAR","I")
J2CPP_DEFINE_FIELD(java::sql::Types,18,"NULL","I")
J2CPP_DEFINE_FIELD(java::sql::Types,19,"NUMERIC","I")
J2CPP_DEFINE_FIELD(java::sql::Types,20,"OTHER","I")
J2CPP_DEFINE_FIELD(java::sql::Types,21,"REAL","I")
J2CPP_DEFINE_FIELD(java::sql::Types,22,"REF","I")
J2CPP_DEFINE_FIELD(java::sql::Types,23,"SMALLINT","I")
J2CPP_DEFINE_FIELD(java::sql::Types,24,"STRUCT","I")
J2CPP_DEFINE_FIELD(java::sql::Types,25,"TIME","I")
J2CPP_DEFINE_FIELD(java::sql::Types,26,"TIMESTAMP","I")
J2CPP_DEFINE_FIELD(java::sql::Types,27,"TINYINT","I")
J2CPP_DEFINE_FIELD(java::sql::Types,28,"VARBINARY","I")
J2CPP_DEFINE_FIELD(java::sql::Types,29,"VARCHAR","I")

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_TYPES_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
