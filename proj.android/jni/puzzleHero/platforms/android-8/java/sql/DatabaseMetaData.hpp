/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.sql.DatabaseMetaData
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_DATABASEMETADATA_HPP_DECL
#define J2CPP_JAVA_SQL_DATABASEMETADATA_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace sql { class Connection; } } }
namespace j2cpp { namespace java { namespace sql { class ResultSet; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/sql/Connection.hpp>
#include <java/sql/ResultSet.hpp>


namespace j2cpp {

namespace java { namespace sql {

	class DatabaseMetaData;
	class DatabaseMetaData
		: public object<DatabaseMetaData>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)
		J2CPP_DECLARE_METHOD(77)
		J2CPP_DECLARE_METHOD(78)
		J2CPP_DECLARE_METHOD(79)
		J2CPP_DECLARE_METHOD(80)
		J2CPP_DECLARE_METHOD(81)
		J2CPP_DECLARE_METHOD(82)
		J2CPP_DECLARE_METHOD(83)
		J2CPP_DECLARE_METHOD(84)
		J2CPP_DECLARE_METHOD(85)
		J2CPP_DECLARE_METHOD(86)
		J2CPP_DECLARE_METHOD(87)
		J2CPP_DECLARE_METHOD(88)
		J2CPP_DECLARE_METHOD(89)
		J2CPP_DECLARE_METHOD(90)
		J2CPP_DECLARE_METHOD(91)
		J2CPP_DECLARE_METHOD(92)
		J2CPP_DECLARE_METHOD(93)
		J2CPP_DECLARE_METHOD(94)
		J2CPP_DECLARE_METHOD(95)
		J2CPP_DECLARE_METHOD(96)
		J2CPP_DECLARE_METHOD(97)
		J2CPP_DECLARE_METHOD(98)
		J2CPP_DECLARE_METHOD(99)
		J2CPP_DECLARE_METHOD(100)
		J2CPP_DECLARE_METHOD(101)
		J2CPP_DECLARE_METHOD(102)
		J2CPP_DECLARE_METHOD(103)
		J2CPP_DECLARE_METHOD(104)
		J2CPP_DECLARE_METHOD(105)
		J2CPP_DECLARE_METHOD(106)
		J2CPP_DECLARE_METHOD(107)
		J2CPP_DECLARE_METHOD(108)
		J2CPP_DECLARE_METHOD(109)
		J2CPP_DECLARE_METHOD(110)
		J2CPP_DECLARE_METHOD(111)
		J2CPP_DECLARE_METHOD(112)
		J2CPP_DECLARE_METHOD(113)
		J2CPP_DECLARE_METHOD(114)
		J2CPP_DECLARE_METHOD(115)
		J2CPP_DECLARE_METHOD(116)
		J2CPP_DECLARE_METHOD(117)
		J2CPP_DECLARE_METHOD(118)
		J2CPP_DECLARE_METHOD(119)
		J2CPP_DECLARE_METHOD(120)
		J2CPP_DECLARE_METHOD(121)
		J2CPP_DECLARE_METHOD(122)
		J2CPP_DECLARE_METHOD(123)
		J2CPP_DECLARE_METHOD(124)
		J2CPP_DECLARE_METHOD(125)
		J2CPP_DECLARE_METHOD(126)
		J2CPP_DECLARE_METHOD(127)
		J2CPP_DECLARE_METHOD(128)
		J2CPP_DECLARE_METHOD(129)
		J2CPP_DECLARE_METHOD(130)
		J2CPP_DECLARE_METHOD(131)
		J2CPP_DECLARE_METHOD(132)
		J2CPP_DECLARE_METHOD(133)
		J2CPP_DECLARE_METHOD(134)
		J2CPP_DECLARE_METHOD(135)
		J2CPP_DECLARE_METHOD(136)
		J2CPP_DECLARE_METHOD(137)
		J2CPP_DECLARE_METHOD(138)
		J2CPP_DECLARE_METHOD(139)
		J2CPP_DECLARE_METHOD(140)
		J2CPP_DECLARE_METHOD(141)
		J2CPP_DECLARE_METHOD(142)
		J2CPP_DECLARE_METHOD(143)
		J2CPP_DECLARE_METHOD(144)
		J2CPP_DECLARE_METHOD(145)
		J2CPP_DECLARE_METHOD(146)
		J2CPP_DECLARE_METHOD(147)
		J2CPP_DECLARE_METHOD(148)
		J2CPP_DECLARE_METHOD(149)
		J2CPP_DECLARE_METHOD(150)
		J2CPP_DECLARE_METHOD(151)
		J2CPP_DECLARE_METHOD(152)
		J2CPP_DECLARE_METHOD(153)
		J2CPP_DECLARE_METHOD(154)
		J2CPP_DECLARE_METHOD(155)
		J2CPP_DECLARE_METHOD(156)
		J2CPP_DECLARE_METHOD(157)
		J2CPP_DECLARE_METHOD(158)
		J2CPP_DECLARE_METHOD(159)
		J2CPP_DECLARE_METHOD(160)
		J2CPP_DECLARE_METHOD(161)
		J2CPP_DECLARE_METHOD(162)
		J2CPP_DECLARE_METHOD(163)
		J2CPP_DECLARE_METHOD(164)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)
		J2CPP_DECLARE_FIELD(8)
		J2CPP_DECLARE_FIELD(9)
		J2CPP_DECLARE_FIELD(10)
		J2CPP_DECLARE_FIELD(11)
		J2CPP_DECLARE_FIELD(12)
		J2CPP_DECLARE_FIELD(13)
		J2CPP_DECLARE_FIELD(14)
		J2CPP_DECLARE_FIELD(15)
		J2CPP_DECLARE_FIELD(16)
		J2CPP_DECLARE_FIELD(17)
		J2CPP_DECLARE_FIELD(18)
		J2CPP_DECLARE_FIELD(19)
		J2CPP_DECLARE_FIELD(20)
		J2CPP_DECLARE_FIELD(21)
		J2CPP_DECLARE_FIELD(22)
		J2CPP_DECLARE_FIELD(23)
		J2CPP_DECLARE_FIELD(24)
		J2CPP_DECLARE_FIELD(25)
		J2CPP_DECLARE_FIELD(26)
		J2CPP_DECLARE_FIELD(27)
		J2CPP_DECLARE_FIELD(28)
		J2CPP_DECLARE_FIELD(29)
		J2CPP_DECLARE_FIELD(30)
		J2CPP_DECLARE_FIELD(31)
		J2CPP_DECLARE_FIELD(32)
		J2CPP_DECLARE_FIELD(33)
		J2CPP_DECLARE_FIELD(34)
		J2CPP_DECLARE_FIELD(35)
		J2CPP_DECLARE_FIELD(36)
		J2CPP_DECLARE_FIELD(37)
		J2CPP_DECLARE_FIELD(38)
		J2CPP_DECLARE_FIELD(39)
		J2CPP_DECLARE_FIELD(40)
		J2CPP_DECLARE_FIELD(41)
		J2CPP_DECLARE_FIELD(42)
		J2CPP_DECLARE_FIELD(43)
		J2CPP_DECLARE_FIELD(44)
		J2CPP_DECLARE_FIELD(45)
		J2CPP_DECLARE_FIELD(46)
		J2CPP_DECLARE_FIELD(47)

		explicit DatabaseMetaData(jobject jobj)
		: object<DatabaseMetaData>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		jboolean allProceduresAreCallable();
		jboolean allTablesAreSelectable();
		jboolean dataDefinitionCausesTransactionCommit();
		jboolean dataDefinitionIgnoredInTransactions();
		jboolean deletesAreDetected(jint);
		jboolean doesMaxRowSizeIncludeBlobs();
		local_ref< java::sql::ResultSet > getAttributes(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::sql::ResultSet > getBestRowIdentifier(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, jint, jboolean);
		local_ref< java::sql::ResultSet > getCatalogs();
		local_ref< java::lang::String > getCatalogSeparator();
		local_ref< java::lang::String > getCatalogTerm();
		local_ref< java::sql::ResultSet > getColumnPrivileges(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::sql::ResultSet > getColumns(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::sql::Connection > getConnection();
		local_ref< java::sql::ResultSet > getCrossReference(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		jint getDatabaseMajorVersion();
		jint getDatabaseMinorVersion();
		local_ref< java::lang::String > getDatabaseProductName();
		local_ref< java::lang::String > getDatabaseProductVersion();
		jint getDefaultTransactionIsolation();
		jint getDriverMajorVersion();
		jint getDriverMinorVersion();
		local_ref< java::lang::String > getDriverName();
		local_ref< java::lang::String > getDriverVersion();
		local_ref< java::sql::ResultSet > getExportedKeys(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getExtraNameCharacters();
		local_ref< java::lang::String > getIdentifierQuoteString();
		local_ref< java::sql::ResultSet > getImportedKeys(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::sql::ResultSet > getIndexInfo(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, jboolean, jboolean);
		jint getJDBCMajorVersion();
		jint getJDBCMinorVersion();
		jint getMaxBinaryLiteralLength();
		jint getMaxCatalogNameLength();
		jint getMaxCharLiteralLength();
		jint getMaxColumnNameLength();
		jint getMaxColumnsInGroupBy();
		jint getMaxColumnsInIndex();
		jint getMaxColumnsInOrderBy();
		jint getMaxColumnsInSelect();
		jint getMaxColumnsInTable();
		jint getMaxConnections();
		jint getMaxCursorNameLength();
		jint getMaxIndexLength();
		jint getMaxProcedureNameLength();
		jint getMaxRowSize();
		jint getMaxSchemaNameLength();
		jint getMaxStatementLength();
		jint getMaxStatements();
		jint getMaxTableNameLength();
		jint getMaxTablesInSelect();
		jint getMaxUserNameLength();
		local_ref< java::lang::String > getNumericFunctions();
		local_ref< java::sql::ResultSet > getPrimaryKeys(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::sql::ResultSet > getProcedureColumns(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::sql::ResultSet > getProcedures(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getProcedureTerm();
		jint getResultSetHoldability();
		local_ref< java::sql::ResultSet > getSchemas();
		local_ref< java::lang::String > getSchemaTerm();
		local_ref< java::lang::String > getSearchStringEscape();
		local_ref< java::lang::String > getSQLKeywords();
		jint getSQLStateType();
		local_ref< java::lang::String > getStringFunctions();
		local_ref< java::sql::ResultSet > getSuperTables(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::sql::ResultSet > getSuperTypes(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getSystemFunctions();
		local_ref< java::sql::ResultSet > getTablePrivileges(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::sql::ResultSet > getTables(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::lang::String >, 1> >  const&);
		local_ref< java::sql::ResultSet > getTableTypes();
		local_ref< java::lang::String > getTimeDateFunctions();
		local_ref< java::sql::ResultSet > getTypeInfo();
		local_ref< java::sql::ResultSet > getUDTs(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< array<jint,1> >  const&);
		local_ref< java::lang::String > getURL();
		local_ref< java::lang::String > getUserName();
		local_ref< java::sql::ResultSet > getVersionColumns(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		jboolean insertsAreDetected(jint);
		jboolean isCatalogAtStart();
		jboolean isReadOnly();
		jboolean locatorsUpdateCopy();
		jboolean nullPlusNonNullIsNull();
		jboolean nullsAreSortedAtEnd();
		jboolean nullsAreSortedAtStart();
		jboolean nullsAreSortedHigh();
		jboolean nullsAreSortedLow();
		jboolean othersDeletesAreVisible(jint);
		jboolean othersInsertsAreVisible(jint);
		jboolean othersUpdatesAreVisible(jint);
		jboolean ownDeletesAreVisible(jint);
		jboolean ownInsertsAreVisible(jint);
		jboolean ownUpdatesAreVisible(jint);
		jboolean storesLowerCaseIdentifiers();
		jboolean storesLowerCaseQuotedIdentifiers();
		jboolean storesMixedCaseIdentifiers();
		jboolean storesMixedCaseQuotedIdentifiers();
		jboolean storesUpperCaseIdentifiers();
		jboolean storesUpperCaseQuotedIdentifiers();
		jboolean supportsAlterTableWithAddColumn();
		jboolean supportsAlterTableWithDropColumn();
		jboolean supportsANSI92EntryLevelSQL();
		jboolean supportsANSI92FullSQL();
		jboolean supportsANSI92IntermediateSQL();
		jboolean supportsBatchUpdates();
		jboolean supportsCatalogsInDataManipulation();
		jboolean supportsCatalogsInIndexDefinitions();
		jboolean supportsCatalogsInPrivilegeDefinitions();
		jboolean supportsCatalogsInProcedureCalls();
		jboolean supportsCatalogsInTableDefinitions();
		jboolean supportsColumnAliasing();
		jboolean supportsConvert();
		jboolean supportsConvert(jint, jint);
		jboolean supportsCoreSQLGrammar();
		jboolean supportsCorrelatedSubqueries();
		jboolean supportsDataDefinitionAndDataManipulationTransactions();
		jboolean supportsDataManipulationTransactionsOnly();
		jboolean supportsDifferentTableCorrelationNames();
		jboolean supportsExpressionsInOrderBy();
		jboolean supportsExtendedSQLGrammar();
		jboolean supportsFullOuterJoins();
		jboolean supportsGetGeneratedKeys();
		jboolean supportsGroupBy();
		jboolean supportsGroupByBeyondSelect();
		jboolean supportsGroupByUnrelated();
		jboolean supportsIntegrityEnhancementFacility();
		jboolean supportsLikeEscapeClause();
		jboolean supportsLimitedOuterJoins();
		jboolean supportsMinimumSQLGrammar();
		jboolean supportsMixedCaseIdentifiers();
		jboolean supportsMixedCaseQuotedIdentifiers();
		jboolean supportsMultipleOpenResults();
		jboolean supportsMultipleResultSets();
		jboolean supportsMultipleTransactions();
		jboolean supportsNamedParameters();
		jboolean supportsNonNullableColumns();
		jboolean supportsOpenCursorsAcrossCommit();
		jboolean supportsOpenCursorsAcrossRollback();
		jboolean supportsOpenStatementsAcrossCommit();
		jboolean supportsOpenStatementsAcrossRollback();
		jboolean supportsOrderByUnrelated();
		jboolean supportsOuterJoins();
		jboolean supportsPositionedDelete();
		jboolean supportsPositionedUpdate();
		jboolean supportsResultSetConcurrency(jint, jint);
		jboolean supportsResultSetHoldability(jint);
		jboolean supportsResultSetType(jint);
		jboolean supportsSavepoints();
		jboolean supportsSchemasInDataManipulation();
		jboolean supportsSchemasInIndexDefinitions();
		jboolean supportsSchemasInPrivilegeDefinitions();
		jboolean supportsSchemasInProcedureCalls();
		jboolean supportsSchemasInTableDefinitions();
		jboolean supportsSelectForUpdate();
		jboolean supportsStatementPooling();
		jboolean supportsStoredProcedures();
		jboolean supportsSubqueriesInComparisons();
		jboolean supportsSubqueriesInExists();
		jboolean supportsSubqueriesInIns();
		jboolean supportsSubqueriesInQuantifieds();
		jboolean supportsTableCorrelationNames();
		jboolean supportsTransactionIsolationLevel(jint);
		jboolean supportsTransactions();
		jboolean supportsUnion();
		jboolean supportsUnionAll();
		jboolean updatesAreDetected(jint);
		jboolean usesLocalFilePerTable();
		jboolean usesLocalFiles();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jshort > attributeNoNulls;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jshort > attributeNullable;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jshort > attributeNullableUnknown;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > bestRowNotPseudo;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > bestRowPseudo;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jint > bestRowSession;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), jint > bestRowTemporary;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), jint > bestRowTransaction;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), jint > bestRowUnknown;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(9), J2CPP_FIELD_SIGNATURE(9), jint > columnNoNulls;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(10), J2CPP_FIELD_SIGNATURE(10), jint > columnNullable;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(11), J2CPP_FIELD_SIGNATURE(11), jint > columnNullableUnknown;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(12), J2CPP_FIELD_SIGNATURE(12), jint > importedKeyCascade;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(13), J2CPP_FIELD_SIGNATURE(13), jint > importedKeyInitiallyDeferred;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(14), J2CPP_FIELD_SIGNATURE(14), jint > importedKeyInitiallyImmediate;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(15), J2CPP_FIELD_SIGNATURE(15), jint > importedKeyNoAction;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(16), J2CPP_FIELD_SIGNATURE(16), jint > importedKeyNotDeferrable;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(17), J2CPP_FIELD_SIGNATURE(17), jint > importedKeyRestrict;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(18), J2CPP_FIELD_SIGNATURE(18), jint > importedKeySetDefault;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(19), J2CPP_FIELD_SIGNATURE(19), jint > importedKeySetNull;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(20), J2CPP_FIELD_SIGNATURE(20), jint > procedureColumnIn;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(21), J2CPP_FIELD_SIGNATURE(21), jint > procedureColumnInOut;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(22), J2CPP_FIELD_SIGNATURE(22), jint > procedureColumnOut;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(23), J2CPP_FIELD_SIGNATURE(23), jint > procedureColumnResult;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(24), J2CPP_FIELD_SIGNATURE(24), jint > procedureColumnReturn;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(25), J2CPP_FIELD_SIGNATURE(25), jint > procedureColumnUnknown;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(26), J2CPP_FIELD_SIGNATURE(26), jint > procedureNoNulls;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(27), J2CPP_FIELD_SIGNATURE(27), jint > procedureNoResult;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(28), J2CPP_FIELD_SIGNATURE(28), jint > procedureNullable;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(29), J2CPP_FIELD_SIGNATURE(29), jint > procedureNullableUnknown;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(30), J2CPP_FIELD_SIGNATURE(30), jint > procedureResultUnknown;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(31), J2CPP_FIELD_SIGNATURE(31), jint > procedureReturnsResult;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(32), J2CPP_FIELD_SIGNATURE(32), jint > sqlStateSQL99;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(33), J2CPP_FIELD_SIGNATURE(33), jint > sqlStateXOpen;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(34), J2CPP_FIELD_SIGNATURE(34), jshort > tableIndexClustered;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(35), J2CPP_FIELD_SIGNATURE(35), jshort > tableIndexHashed;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(36), J2CPP_FIELD_SIGNATURE(36), jshort > tableIndexOther;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(37), J2CPP_FIELD_SIGNATURE(37), jshort > tableIndexStatistic;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(38), J2CPP_FIELD_SIGNATURE(38), jint > typeNoNulls;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(39), J2CPP_FIELD_SIGNATURE(39), jint > typeNullable;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(40), J2CPP_FIELD_SIGNATURE(40), jint > typeNullableUnknown;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(41), J2CPP_FIELD_SIGNATURE(41), jint > typePredBasic;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(42), J2CPP_FIELD_SIGNATURE(42), jint > typePredChar;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(43), J2CPP_FIELD_SIGNATURE(43), jint > typePredNone;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(44), J2CPP_FIELD_SIGNATURE(44), jint > typeSearchable;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(45), J2CPP_FIELD_SIGNATURE(45), jint > versionColumnNotPseudo;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(46), J2CPP_FIELD_SIGNATURE(46), jint > versionColumnPseudo;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(47), J2CPP_FIELD_SIGNATURE(47), jint > versionColumnUnknown;
	}; //class DatabaseMetaData

} //namespace sql
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_DATABASEMETADATA_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_DATABASEMETADATA_HPP_IMPL
#define J2CPP_JAVA_SQL_DATABASEMETADATA_HPP_IMPL

namespace j2cpp {



java::sql::DatabaseMetaData::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::allProceduresAreCallable()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(0),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(0), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::allTablesAreSelectable()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(1),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(1), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::dataDefinitionCausesTransactionCommit()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(2),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(2), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::dataDefinitionIgnoredInTransactions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(3),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(3), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::deletesAreDetected(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(4),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::doesMaxRowSizeIncludeBlobs()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(5),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getAttributes(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(6),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getBestRowIdentifier(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, jint a3, jboolean a4)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(7),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2, a3, a4);
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getCatalogs()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(8),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::sql::ResultSet >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getCatalogSeparator()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(9),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getCatalogTerm()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(10),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getColumnPrivileges(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(11),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getColumns(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(12),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::sql::Connection > java::sql::DatabaseMetaData::getConnection()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(13),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(13), 
		local_ref< java::sql::Connection >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getCrossReference(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::String > const &a4, local_ref< java::lang::String > const &a5)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(14),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(14), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2, a3, a4, a5);
}

jint java::sql::DatabaseMetaData::getDatabaseMajorVersion()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(15),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(15), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getDatabaseMinorVersion()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(16),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(16), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getDatabaseProductName()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(17),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(17), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getDatabaseProductVersion()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(18),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(18), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getDefaultTransactionIsolation()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(19),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(19), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getDriverMajorVersion()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(20),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(20), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getDriverMinorVersion()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(21),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(21), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getDriverName()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(22),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(22), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getDriverVersion()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(23),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(23), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getExportedKeys(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(24),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(24), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getExtraNameCharacters()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(25),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(25), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getIdentifierQuoteString()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(26),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(26), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getImportedKeys(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(27),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(27), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getIndexInfo(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, jboolean a3, jboolean a4)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(28),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(28), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2, a3, a4);
}

jint java::sql::DatabaseMetaData::getJDBCMajorVersion()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(29),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(29), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getJDBCMinorVersion()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(30),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(30), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxBinaryLiteralLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(31),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(31), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxCatalogNameLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(32),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(32), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxCharLiteralLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(33),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(33), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxColumnNameLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(34),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(34), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxColumnsInGroupBy()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(35),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(35), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxColumnsInIndex()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(36),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(36), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxColumnsInOrderBy()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(37),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(37), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxColumnsInSelect()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(38),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(38), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxColumnsInTable()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(39),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(39), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxConnections()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(40),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(40), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxCursorNameLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(41),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(41), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxIndexLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(42),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(42), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxProcedureNameLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(43),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(43), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxRowSize()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(44),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(44), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxSchemaNameLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(45),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(45), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxStatementLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(46),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(46), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxStatements()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(47),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(47), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxTableNameLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(48),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(48), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxTablesInSelect()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(49),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(49), 
		jint
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getMaxUserNameLength()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(50),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(50), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getNumericFunctions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(51),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(51), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getPrimaryKeys(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(52),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(52), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getProcedureColumns(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(53),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(53), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getProcedures(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(54),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(54), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getProcedureTerm()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(55),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(55), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getResultSetHoldability()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(56),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(56), 
		jint
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getSchemas()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(57),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(57), 
		local_ref< java::sql::ResultSet >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getSchemaTerm()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(58),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(58), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getSearchStringEscape()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(59),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(59), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getSQLKeywords()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(60),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(60), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint java::sql::DatabaseMetaData::getSQLStateType()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(61),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(61), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getStringFunctions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(62),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(62), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getSuperTables(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(63),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(63), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getSuperTypes(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(64),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(64), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getSystemFunctions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(65),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(65), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getTablePrivileges(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(66),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(66), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getTables(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< array< local_ref< java::lang::String >, 1> > const &a3)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(67),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(67), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getTableTypes()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(68),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(68), 
		local_ref< java::sql::ResultSet >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getTimeDateFunctions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(69),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(69), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getTypeInfo()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(70),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(70), 
		local_ref< java::sql::ResultSet >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getUDTs(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< array<jint,1> > const &a3)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(71),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(71), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getURL()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(72),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(72), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::DatabaseMetaData::getUserName()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(73),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(73), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::DatabaseMetaData::getVersionColumns(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(74),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(74), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2);
}

jboolean java::sql::DatabaseMetaData::insertsAreDetected(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(75),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(75), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::isCatalogAtStart()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(76),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(76), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::isReadOnly()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(77),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(77), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::locatorsUpdateCopy()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(78),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(78), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::nullPlusNonNullIsNull()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(79),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(79), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::nullsAreSortedAtEnd()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(80),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(80), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::nullsAreSortedAtStart()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(81),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(81), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::nullsAreSortedHigh()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(82),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(82), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::nullsAreSortedLow()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(83),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(83), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::othersDeletesAreVisible(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(84),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(84), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::othersInsertsAreVisible(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(85),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(85), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::othersUpdatesAreVisible(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(86),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(86), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::ownDeletesAreVisible(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(87),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(87), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::ownInsertsAreVisible(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(88),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(88), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::ownUpdatesAreVisible(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(89),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(89), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::storesLowerCaseIdentifiers()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(90),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(90), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::storesLowerCaseQuotedIdentifiers()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(91),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(91), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::storesMixedCaseIdentifiers()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(92),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(92), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::storesMixedCaseQuotedIdentifiers()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(93),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(93), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::storesUpperCaseIdentifiers()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(94),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(94), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::storesUpperCaseQuotedIdentifiers()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(95),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(95), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsAlterTableWithAddColumn()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(96),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(96), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsAlterTableWithDropColumn()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(97),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(97), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsANSI92EntryLevelSQL()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(98),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(98), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsANSI92FullSQL()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(99),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(99), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsANSI92IntermediateSQL()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(100),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(100), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsBatchUpdates()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(101),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(101), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsCatalogsInDataManipulation()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(102),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(102), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsCatalogsInIndexDefinitions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(103),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(103), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsCatalogsInPrivilegeDefinitions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(104),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(104), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsCatalogsInProcedureCalls()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(105),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(105), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsCatalogsInTableDefinitions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(106),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(106), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsColumnAliasing()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(107),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(107), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsConvert()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(108),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(108), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsConvert(jint a0, jint a1)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(109),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(109), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean java::sql::DatabaseMetaData::supportsCoreSQLGrammar()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(110),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(110), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsCorrelatedSubqueries()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(111),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(111), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsDataDefinitionAndDataManipulationTransactions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(112),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(112), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsDataManipulationTransactionsOnly()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(113),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(113), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsDifferentTableCorrelationNames()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(114),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(114), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsExpressionsInOrderBy()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(115),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(115), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsExtendedSQLGrammar()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(116),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(116), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsFullOuterJoins()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(117),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(117), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsGetGeneratedKeys()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(118),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(118), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsGroupBy()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(119),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(119), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsGroupByBeyondSelect()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(120),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(120), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsGroupByUnrelated()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(121),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(121), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsIntegrityEnhancementFacility()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(122),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(122), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsLikeEscapeClause()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(123),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(123), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsLimitedOuterJoins()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(124),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(124), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsMinimumSQLGrammar()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(125),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(125), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsMixedCaseIdentifiers()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(126),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(126), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsMixedCaseQuotedIdentifiers()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(127),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(127), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsMultipleOpenResults()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(128),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(128), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsMultipleResultSets()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(129),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(129), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsMultipleTransactions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(130),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(130), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsNamedParameters()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(131),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(131), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsNonNullableColumns()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(132),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(132), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsOpenCursorsAcrossCommit()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(133),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(133), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsOpenCursorsAcrossRollback()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(134),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(134), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsOpenStatementsAcrossCommit()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(135),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(135), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsOpenStatementsAcrossRollback()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(136),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(136), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsOrderByUnrelated()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(137),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(137), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsOuterJoins()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(138),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(138), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsPositionedDelete()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(139),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(139), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsPositionedUpdate()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(140),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(140), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsResultSetConcurrency(jint a0, jint a1)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(141),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(141), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean java::sql::DatabaseMetaData::supportsResultSetHoldability(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(142),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(142), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::supportsResultSetType(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(143),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(143), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::supportsSavepoints()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(144),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(144), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsSchemasInDataManipulation()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(145),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(145), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsSchemasInIndexDefinitions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(146),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(146), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsSchemasInPrivilegeDefinitions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(147),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(147), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsSchemasInProcedureCalls()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(148),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(148), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsSchemasInTableDefinitions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(149),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(149), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsSelectForUpdate()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(150),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(150), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsStatementPooling()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(151),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(151), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsStoredProcedures()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(152),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(152), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsSubqueriesInComparisons()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(153),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(153), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsSubqueriesInExists()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(154),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(154), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsSubqueriesInIns()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(155),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(155), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsSubqueriesInQuantifieds()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(156),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(156), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsTableCorrelationNames()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(157),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(157), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsTransactionIsolationLevel(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(158),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(158), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::supportsTransactions()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(159),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(159), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsUnion()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(160),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(160), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::supportsUnionAll()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(161),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(161), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::updatesAreDetected(jint a0)
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(162),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(162), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::DatabaseMetaData::usesLocalFilePerTable()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(163),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(163), 
		jboolean
	>(get_jobject());
}

jboolean java::sql::DatabaseMetaData::usesLocalFiles()
{
	return call_method<
		java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
		java::sql::DatabaseMetaData::J2CPP_METHOD_NAME(164),
		java::sql::DatabaseMetaData::J2CPP_METHOD_SIGNATURE(164), 
		jboolean
	>(get_jobject());
}


static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(0),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(0),
	jshort
> java::sql::DatabaseMetaData::attributeNoNulls;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(1),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(1),
	jshort
> java::sql::DatabaseMetaData::attributeNullable;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(2),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(2),
	jshort
> java::sql::DatabaseMetaData::attributeNullableUnknown;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(3),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(3),
	jint
> java::sql::DatabaseMetaData::bestRowNotPseudo;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(4),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(4),
	jint
> java::sql::DatabaseMetaData::bestRowPseudo;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(5),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(5),
	jint
> java::sql::DatabaseMetaData::bestRowSession;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(6),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(6),
	jint
> java::sql::DatabaseMetaData::bestRowTemporary;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(7),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(7),
	jint
> java::sql::DatabaseMetaData::bestRowTransaction;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(8),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(8),
	jint
> java::sql::DatabaseMetaData::bestRowUnknown;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(9),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(9),
	jint
> java::sql::DatabaseMetaData::columnNoNulls;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(10),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(10),
	jint
> java::sql::DatabaseMetaData::columnNullable;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(11),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(11),
	jint
> java::sql::DatabaseMetaData::columnNullableUnknown;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(12),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(12),
	jint
> java::sql::DatabaseMetaData::importedKeyCascade;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(13),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(13),
	jint
> java::sql::DatabaseMetaData::importedKeyInitiallyDeferred;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(14),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(14),
	jint
> java::sql::DatabaseMetaData::importedKeyInitiallyImmediate;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(15),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(15),
	jint
> java::sql::DatabaseMetaData::importedKeyNoAction;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(16),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(16),
	jint
> java::sql::DatabaseMetaData::importedKeyNotDeferrable;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(17),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(17),
	jint
> java::sql::DatabaseMetaData::importedKeyRestrict;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(18),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(18),
	jint
> java::sql::DatabaseMetaData::importedKeySetDefault;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(19),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(19),
	jint
> java::sql::DatabaseMetaData::importedKeySetNull;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(20),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(20),
	jint
> java::sql::DatabaseMetaData::procedureColumnIn;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(21),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(21),
	jint
> java::sql::DatabaseMetaData::procedureColumnInOut;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(22),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(22),
	jint
> java::sql::DatabaseMetaData::procedureColumnOut;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(23),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(23),
	jint
> java::sql::DatabaseMetaData::procedureColumnResult;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(24),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(24),
	jint
> java::sql::DatabaseMetaData::procedureColumnReturn;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(25),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(25),
	jint
> java::sql::DatabaseMetaData::procedureColumnUnknown;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(26),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(26),
	jint
> java::sql::DatabaseMetaData::procedureNoNulls;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(27),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(27),
	jint
> java::sql::DatabaseMetaData::procedureNoResult;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(28),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(28),
	jint
> java::sql::DatabaseMetaData::procedureNullable;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(29),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(29),
	jint
> java::sql::DatabaseMetaData::procedureNullableUnknown;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(30),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(30),
	jint
> java::sql::DatabaseMetaData::procedureResultUnknown;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(31),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(31),
	jint
> java::sql::DatabaseMetaData::procedureReturnsResult;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(32),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(32),
	jint
> java::sql::DatabaseMetaData::sqlStateSQL99;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(33),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(33),
	jint
> java::sql::DatabaseMetaData::sqlStateXOpen;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(34),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(34),
	jshort
> java::sql::DatabaseMetaData::tableIndexClustered;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(35),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(35),
	jshort
> java::sql::DatabaseMetaData::tableIndexHashed;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(36),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(36),
	jshort
> java::sql::DatabaseMetaData::tableIndexOther;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(37),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(37),
	jshort
> java::sql::DatabaseMetaData::tableIndexStatistic;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(38),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(38),
	jint
> java::sql::DatabaseMetaData::typeNoNulls;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(39),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(39),
	jint
> java::sql::DatabaseMetaData::typeNullable;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(40),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(40),
	jint
> java::sql::DatabaseMetaData::typeNullableUnknown;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(41),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(41),
	jint
> java::sql::DatabaseMetaData::typePredBasic;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(42),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(42),
	jint
> java::sql::DatabaseMetaData::typePredChar;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(43),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(43),
	jint
> java::sql::DatabaseMetaData::typePredNone;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(44),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(44),
	jint
> java::sql::DatabaseMetaData::typeSearchable;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(45),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(45),
	jint
> java::sql::DatabaseMetaData::versionColumnNotPseudo;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(46),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(46),
	jint
> java::sql::DatabaseMetaData::versionColumnPseudo;

static_field<
	java::sql::DatabaseMetaData::J2CPP_CLASS_NAME,
	java::sql::DatabaseMetaData::J2CPP_FIELD_NAME(47),
	java::sql::DatabaseMetaData::J2CPP_FIELD_SIGNATURE(47),
	jint
> java::sql::DatabaseMetaData::versionColumnUnknown;


J2CPP_DEFINE_CLASS(java::sql::DatabaseMetaData,"java/sql/DatabaseMetaData")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,0,"allProceduresAreCallable","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,1,"allTablesAreSelectable","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,2,"dataDefinitionCausesTransactionCommit","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,3,"dataDefinitionIgnoredInTransactions","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,4,"deletesAreDetected","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,5,"doesMaxRowSizeIncludeBlobs","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,6,"getAttributes","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,7,"getBestRowIdentifier","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,8,"getCatalogs","()Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,9,"getCatalogSeparator","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,10,"getCatalogTerm","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,11,"getColumnPrivileges","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,12,"getColumns","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,13,"getConnection","()Ljava/sql/Connection;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,14,"getCrossReference","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,15,"getDatabaseMajorVersion","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,16,"getDatabaseMinorVersion","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,17,"getDatabaseProductName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,18,"getDatabaseProductVersion","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,19,"getDefaultTransactionIsolation","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,20,"getDriverMajorVersion","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,21,"getDriverMinorVersion","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,22,"getDriverName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,23,"getDriverVersion","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,24,"getExportedKeys","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,25,"getExtraNameCharacters","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,26,"getIdentifierQuoteString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,27,"getImportedKeys","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,28,"getIndexInfo","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,29,"getJDBCMajorVersion","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,30,"getJDBCMinorVersion","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,31,"getMaxBinaryLiteralLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,32,"getMaxCatalogNameLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,33,"getMaxCharLiteralLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,34,"getMaxColumnNameLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,35,"getMaxColumnsInGroupBy","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,36,"getMaxColumnsInIndex","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,37,"getMaxColumnsInOrderBy","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,38,"getMaxColumnsInSelect","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,39,"getMaxColumnsInTable","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,40,"getMaxConnections","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,41,"getMaxCursorNameLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,42,"getMaxIndexLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,43,"getMaxProcedureNameLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,44,"getMaxRowSize","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,45,"getMaxSchemaNameLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,46,"getMaxStatementLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,47,"getMaxStatements","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,48,"getMaxTableNameLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,49,"getMaxTablesInSelect","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,50,"getMaxUserNameLength","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,51,"getNumericFunctions","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,52,"getPrimaryKeys","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,53,"getProcedureColumns","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,54,"getProcedures","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,55,"getProcedureTerm","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,56,"getResultSetHoldability","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,57,"getSchemas","()Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,58,"getSchemaTerm","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,59,"getSearchStringEscape","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,60,"getSQLKeywords","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,61,"getSQLStateType","()I")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,62,"getStringFunctions","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,63,"getSuperTables","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,64,"getSuperTypes","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,65,"getSystemFunctions","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,66,"getTablePrivileges","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,67,"getTables","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[java.lang.String)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,68,"getTableTypes","()Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,69,"getTimeDateFunctions","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,70,"getTypeInfo","()Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,71,"getUDTs","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[I)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,72,"getURL","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,73,"getUserName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,74,"getVersionColumns","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,75,"insertsAreDetected","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,76,"isCatalogAtStart","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,77,"isReadOnly","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,78,"locatorsUpdateCopy","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,79,"nullPlusNonNullIsNull","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,80,"nullsAreSortedAtEnd","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,81,"nullsAreSortedAtStart","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,82,"nullsAreSortedHigh","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,83,"nullsAreSortedLow","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,84,"othersDeletesAreVisible","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,85,"othersInsertsAreVisible","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,86,"othersUpdatesAreVisible","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,87,"ownDeletesAreVisible","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,88,"ownInsertsAreVisible","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,89,"ownUpdatesAreVisible","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,90,"storesLowerCaseIdentifiers","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,91,"storesLowerCaseQuotedIdentifiers","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,92,"storesMixedCaseIdentifiers","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,93,"storesMixedCaseQuotedIdentifiers","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,94,"storesUpperCaseIdentifiers","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,95,"storesUpperCaseQuotedIdentifiers","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,96,"supportsAlterTableWithAddColumn","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,97,"supportsAlterTableWithDropColumn","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,98,"supportsANSI92EntryLevelSQL","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,99,"supportsANSI92FullSQL","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,100,"supportsANSI92IntermediateSQL","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,101,"supportsBatchUpdates","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,102,"supportsCatalogsInDataManipulation","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,103,"supportsCatalogsInIndexDefinitions","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,104,"supportsCatalogsInPrivilegeDefinitions","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,105,"supportsCatalogsInProcedureCalls","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,106,"supportsCatalogsInTableDefinitions","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,107,"supportsColumnAliasing","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,108,"supportsConvert","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,109,"supportsConvert","(II)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,110,"supportsCoreSQLGrammar","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,111,"supportsCorrelatedSubqueries","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,112,"supportsDataDefinitionAndDataManipulationTransactions","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,113,"supportsDataManipulationTransactionsOnly","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,114,"supportsDifferentTableCorrelationNames","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,115,"supportsExpressionsInOrderBy","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,116,"supportsExtendedSQLGrammar","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,117,"supportsFullOuterJoins","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,118,"supportsGetGeneratedKeys","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,119,"supportsGroupBy","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,120,"supportsGroupByBeyondSelect","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,121,"supportsGroupByUnrelated","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,122,"supportsIntegrityEnhancementFacility","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,123,"supportsLikeEscapeClause","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,124,"supportsLimitedOuterJoins","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,125,"supportsMinimumSQLGrammar","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,126,"supportsMixedCaseIdentifiers","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,127,"supportsMixedCaseQuotedIdentifiers","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,128,"supportsMultipleOpenResults","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,129,"supportsMultipleResultSets","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,130,"supportsMultipleTransactions","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,131,"supportsNamedParameters","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,132,"supportsNonNullableColumns","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,133,"supportsOpenCursorsAcrossCommit","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,134,"supportsOpenCursorsAcrossRollback","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,135,"supportsOpenStatementsAcrossCommit","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,136,"supportsOpenStatementsAcrossRollback","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,137,"supportsOrderByUnrelated","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,138,"supportsOuterJoins","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,139,"supportsPositionedDelete","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,140,"supportsPositionedUpdate","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,141,"supportsResultSetConcurrency","(II)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,142,"supportsResultSetHoldability","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,143,"supportsResultSetType","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,144,"supportsSavepoints","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,145,"supportsSchemasInDataManipulation","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,146,"supportsSchemasInIndexDefinitions","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,147,"supportsSchemasInPrivilegeDefinitions","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,148,"supportsSchemasInProcedureCalls","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,149,"supportsSchemasInTableDefinitions","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,150,"supportsSelectForUpdate","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,151,"supportsStatementPooling","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,152,"supportsStoredProcedures","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,153,"supportsSubqueriesInComparisons","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,154,"supportsSubqueriesInExists","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,155,"supportsSubqueriesInIns","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,156,"supportsSubqueriesInQuantifieds","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,157,"supportsTableCorrelationNames","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,158,"supportsTransactionIsolationLevel","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,159,"supportsTransactions","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,160,"supportsUnion","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,161,"supportsUnionAll","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,162,"updatesAreDetected","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,163,"usesLocalFilePerTable","()Z")
J2CPP_DEFINE_METHOD(java::sql::DatabaseMetaData,164,"usesLocalFiles","()Z")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,0,"attributeNoNulls","S")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,1,"attributeNullable","S")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,2,"attributeNullableUnknown","S")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,3,"bestRowNotPseudo","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,4,"bestRowPseudo","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,5,"bestRowSession","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,6,"bestRowTemporary","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,7,"bestRowTransaction","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,8,"bestRowUnknown","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,9,"columnNoNulls","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,10,"columnNullable","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,11,"columnNullableUnknown","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,12,"importedKeyCascade","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,13,"importedKeyInitiallyDeferred","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,14,"importedKeyInitiallyImmediate","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,15,"importedKeyNoAction","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,16,"importedKeyNotDeferrable","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,17,"importedKeyRestrict","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,18,"importedKeySetDefault","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,19,"importedKeySetNull","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,20,"procedureColumnIn","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,21,"procedureColumnInOut","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,22,"procedureColumnOut","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,23,"procedureColumnResult","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,24,"procedureColumnReturn","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,25,"procedureColumnUnknown","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,26,"procedureNoNulls","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,27,"procedureNoResult","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,28,"procedureNullable","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,29,"procedureNullableUnknown","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,30,"procedureResultUnknown","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,31,"procedureReturnsResult","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,32,"sqlStateSQL99","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,33,"sqlStateXOpen","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,34,"tableIndexClustered","S")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,35,"tableIndexHashed","S")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,36,"tableIndexOther","S")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,37,"tableIndexStatistic","S")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,38,"typeNoNulls","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,39,"typeNullable","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,40,"typeNullableUnknown","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,41,"typePredBasic","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,42,"typePredChar","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,43,"typePredNone","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,44,"typeSearchable","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,45,"versionColumnNotPseudo","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,46,"versionColumnPseudo","I")
J2CPP_DEFINE_FIELD(java::sql::DatabaseMetaData,47,"versionColumnUnknown","I")

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_DATABASEMETADATA_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
