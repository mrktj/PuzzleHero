/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.sql.Date
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_DATE_HPP_DECL
#define J2CPP_JAVA_SQL_DATE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Cloneable; } } }
namespace j2cpp { namespace java { namespace lang { class Comparable; } } }
namespace j2cpp { namespace java { namespace util { class Date; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Cloneable.hpp>
#include <java/lang/Comparable.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/Date.hpp>


namespace j2cpp {

namespace java { namespace sql {

	class Date;
	class Date
		: public object<Date>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)

		explicit Date(jobject jobj)
		: object<Date>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::lang::Cloneable>() const;
		operator local_ref<java::lang::Comparable>() const;
		operator local_ref<java::util::Date>() const;
		operator local_ref<java::io::Serializable>() const;


		Date(jint, jint, jint);
		Date(jlong);
		jint getHours();
		jint getMinutes();
		jint getSeconds();
		void setHours(jint);
		void setMinutes(jint);
		void setSeconds(jint);
		void setTime(jlong);
		local_ref< java::lang::String > toString();
		static local_ref< java::sql::Date > valueOf(local_ref< java::lang::String >  const&);
	}; //class Date

} //namespace sql
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_DATE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_DATE_HPP_IMPL
#define J2CPP_JAVA_SQL_DATE_HPP_IMPL

namespace j2cpp {



java::sql::Date::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::sql::Date::operator local_ref<java::lang::Cloneable>() const
{
	return local_ref<java::lang::Cloneable>(get_jobject());
}

java::sql::Date::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

java::sql::Date::operator local_ref<java::util::Date>() const
{
	return local_ref<java::util::Date>(get_jobject());
}

java::sql::Date::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


java::sql::Date::Date(jint a0, jint a1, jint a2)
: object<java::sql::Date>(
	call_new_object<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(0),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1, a2)
)
{
}



java::sql::Date::Date(jlong a0)
: object<java::sql::Date>(
	call_new_object<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(1),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}


jint java::sql::Date::getHours()
{
	return call_method<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(2),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(get_jobject());
}

jint java::sql::Date::getMinutes()
{
	return call_method<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(3),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(get_jobject());
}

jint java::sql::Date::getSeconds()
{
	return call_method<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(4),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

void java::sql::Date::setHours(jint a0)
{
	return call_method<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(5),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

void java::sql::Date::setMinutes(jint a0)
{
	return call_method<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(6),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0);
}

void java::sql::Date::setSeconds(jint a0)
{
	return call_method<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(7),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0);
}

void java::sql::Date::setTime(jlong a0)
{
	return call_method<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(8),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::sql::Date::toString()
{
	return call_method<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(9),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::sql::Date > java::sql::Date::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::sql::Date::J2CPP_CLASS_NAME,
		java::sql::Date::J2CPP_METHOD_NAME(10),
		java::sql::Date::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::sql::Date >
	>(a0);
}


J2CPP_DEFINE_CLASS(java::sql::Date,"java/sql/Date")
J2CPP_DEFINE_METHOD(java::sql::Date,0,"<init>","(III)V")
J2CPP_DEFINE_METHOD(java::sql::Date,1,"<init>","(J)V")
J2CPP_DEFINE_METHOD(java::sql::Date,2,"getHours","()I")
J2CPP_DEFINE_METHOD(java::sql::Date,3,"getMinutes","()I")
J2CPP_DEFINE_METHOD(java::sql::Date,4,"getSeconds","()I")
J2CPP_DEFINE_METHOD(java::sql::Date,5,"setHours","(I)V")
J2CPP_DEFINE_METHOD(java::sql::Date,6,"setMinutes","(I)V")
J2CPP_DEFINE_METHOD(java::sql::Date,7,"setSeconds","(I)V")
J2CPP_DEFINE_METHOD(java::sql::Date,8,"setTime","(J)V")
J2CPP_DEFINE_METHOD(java::sql::Date,9,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::Date,10,"valueOf","(Ljava/lang/String;)Ljava/sql/Date;")

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_DATE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
