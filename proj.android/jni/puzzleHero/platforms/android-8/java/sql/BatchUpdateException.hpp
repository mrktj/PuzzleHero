/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.sql.BatchUpdateException
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_BATCHUPDATEEXCEPTION_HPP_DECL
#define J2CPP_JAVA_SQL_BATCHUPDATEEXCEPTION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Exception; } } }
namespace j2cpp { namespace java { namespace lang { class Throwable; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }
namespace j2cpp { namespace java { namespace sql { class SQLException; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Exception.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/lang/Throwable.hpp>
#include <java/sql/SQLException.hpp>


namespace j2cpp {

namespace java { namespace sql {

	class BatchUpdateException;
	class BatchUpdateException
		: public object<BatchUpdateException>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		explicit BatchUpdateException(jobject jobj)
		: object<BatchUpdateException>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::lang::Exception>() const;
		operator local_ref<java::lang::Throwable>() const;
		operator local_ref<java::io::Serializable>() const;
		operator local_ref<java::sql::SQLException>() const;


		BatchUpdateException();
		BatchUpdateException(local_ref< array<jint,1> > const&);
		BatchUpdateException(local_ref< java::lang::String > const&, local_ref< array<jint,1> > const&);
		BatchUpdateException(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< array<jint,1> > const&);
		BatchUpdateException(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, jint, local_ref< array<jint,1> > const&);
		local_ref< array<jint,1> > getUpdateCounts();
	}; //class BatchUpdateException

} //namespace sql
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_BATCHUPDATEEXCEPTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_BATCHUPDATEEXCEPTION_HPP_IMPL
#define J2CPP_JAVA_SQL_BATCHUPDATEEXCEPTION_HPP_IMPL

namespace j2cpp {



java::sql::BatchUpdateException::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::sql::BatchUpdateException::operator local_ref<java::lang::Exception>() const
{
	return local_ref<java::lang::Exception>(get_jobject());
}

java::sql::BatchUpdateException::operator local_ref<java::lang::Throwable>() const
{
	return local_ref<java::lang::Throwable>(get_jobject());
}

java::sql::BatchUpdateException::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

java::sql::BatchUpdateException::operator local_ref<java::sql::SQLException>() const
{
	return local_ref<java::sql::SQLException>(get_jobject());
}


java::sql::BatchUpdateException::BatchUpdateException()
: object<java::sql::BatchUpdateException>(
	call_new_object<
		java::sql::BatchUpdateException::J2CPP_CLASS_NAME,
		java::sql::BatchUpdateException::J2CPP_METHOD_NAME(0),
		java::sql::BatchUpdateException::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



java::sql::BatchUpdateException::BatchUpdateException(local_ref< array<jint,1> > const &a0)
: object<java::sql::BatchUpdateException>(
	call_new_object<
		java::sql::BatchUpdateException::J2CPP_CLASS_NAME,
		java::sql::BatchUpdateException::J2CPP_METHOD_NAME(1),
		java::sql::BatchUpdateException::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



java::sql::BatchUpdateException::BatchUpdateException(local_ref< java::lang::String > const &a0, local_ref< array<jint,1> > const &a1)
: object<java::sql::BatchUpdateException>(
	call_new_object<
		java::sql::BatchUpdateException::J2CPP_CLASS_NAME,
		java::sql::BatchUpdateException::J2CPP_METHOD_NAME(2),
		java::sql::BatchUpdateException::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1)
)
{
}



java::sql::BatchUpdateException::BatchUpdateException(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< array<jint,1> > const &a2)
: object<java::sql::BatchUpdateException>(
	call_new_object<
		java::sql::BatchUpdateException::J2CPP_CLASS_NAME,
		java::sql::BatchUpdateException::J2CPP_METHOD_NAME(3),
		java::sql::BatchUpdateException::J2CPP_METHOD_SIGNATURE(3)
	>(a0, a1, a2)
)
{
}



java::sql::BatchUpdateException::BatchUpdateException(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, jint a2, local_ref< array<jint,1> > const &a3)
: object<java::sql::BatchUpdateException>(
	call_new_object<
		java::sql::BatchUpdateException::J2CPP_CLASS_NAME,
		java::sql::BatchUpdateException::J2CPP_METHOD_NAME(4),
		java::sql::BatchUpdateException::J2CPP_METHOD_SIGNATURE(4)
	>(a0, a1, a2, a3)
)
{
}


local_ref< array<jint,1> > java::sql::BatchUpdateException::getUpdateCounts()
{
	return call_method<
		java::sql::BatchUpdateException::J2CPP_CLASS_NAME,
		java::sql::BatchUpdateException::J2CPP_METHOD_NAME(5),
		java::sql::BatchUpdateException::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< array<jint,1> >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::sql::BatchUpdateException,"java/sql/BatchUpdateException")
J2CPP_DEFINE_METHOD(java::sql::BatchUpdateException,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::sql::BatchUpdateException,1,"<init>","([I)V")
J2CPP_DEFINE_METHOD(java::sql::BatchUpdateException,2,"<init>","(Ljava/lang/String;[I)V")
J2CPP_DEFINE_METHOD(java::sql::BatchUpdateException,3,"<init>","(Ljava/lang/String;Ljava/lang/String;[I)V")
J2CPP_DEFINE_METHOD(java::sql::BatchUpdateException,4,"<init>","(Ljava/lang/String;Ljava/lang/String;I[I)V")
J2CPP_DEFINE_METHOD(java::sql::BatchUpdateException,5,"getUpdateCounts","()[I")

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_BATCHUPDATEEXCEPTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
