/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.sql.ResultSetMetaData
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_RESULTSETMETADATA_HPP_DECL
#define J2CPP_JAVA_SQL_RESULTSETMETADATA_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace sql {

	class ResultSetMetaData;
	class ResultSetMetaData
		: public object<ResultSetMetaData>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)

		explicit ResultSetMetaData(jobject jobj)
		: object<ResultSetMetaData>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		local_ref< java::lang::String > getCatalogName(jint);
		local_ref< java::lang::String > getColumnClassName(jint);
		jint getColumnCount();
		jint getColumnDisplaySize(jint);
		local_ref< java::lang::String > getColumnLabel(jint);
		local_ref< java::lang::String > getColumnName(jint);
		jint getColumnType(jint);
		local_ref< java::lang::String > getColumnTypeName(jint);
		jint getPrecision(jint);
		jint getScale(jint);
		local_ref< java::lang::String > getSchemaName(jint);
		local_ref< java::lang::String > getTableName(jint);
		jboolean isAutoIncrement(jint);
		jboolean isCaseSensitive(jint);
		jboolean isCurrency(jint);
		jboolean isDefinitelyWritable(jint);
		jint isNullable(jint);
		jboolean isReadOnly(jint);
		jboolean isSearchable(jint);
		jboolean isSigned(jint);
		jboolean isWritable(jint);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > columnNoNulls;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > columnNullable;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > columnNullableUnknown;
	}; //class ResultSetMetaData

} //namespace sql
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_RESULTSETMETADATA_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_RESULTSETMETADATA_HPP_IMPL
#define J2CPP_JAVA_SQL_RESULTSETMETADATA_HPP_IMPL

namespace j2cpp {



java::sql::ResultSetMetaData::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

local_ref< java::lang::String > java::sql::ResultSetMetaData::getCatalogName(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(0),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::sql::ResultSetMetaData::getColumnClassName(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(1),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jint java::sql::ResultSetMetaData::getColumnCount()
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(2),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(get_jobject());
}

jint java::sql::ResultSetMetaData::getColumnDisplaySize(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(3),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::sql::ResultSetMetaData::getColumnLabel(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(4),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::sql::ResultSetMetaData::getColumnName(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(5),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jint java::sql::ResultSetMetaData::getColumnType(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(6),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(6), 
		jint
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::sql::ResultSetMetaData::getColumnTypeName(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(7),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jint java::sql::ResultSetMetaData::getPrecision(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(8),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(8), 
		jint
	>(get_jobject(), a0);
}

jint java::sql::ResultSetMetaData::getScale(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(9),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(9), 
		jint
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::sql::ResultSetMetaData::getSchemaName(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(10),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::sql::ResultSetMetaData::getTableName(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(11),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jboolean java::sql::ResultSetMetaData::isAutoIncrement(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(12),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(12), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::ResultSetMetaData::isCaseSensitive(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(13),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::ResultSetMetaData::isCurrency(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(14),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(14), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::ResultSetMetaData::isDefinitelyWritable(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(15),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(15), 
		jboolean
	>(get_jobject(), a0);
}

jint java::sql::ResultSetMetaData::isNullable(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(16),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(16), 
		jint
	>(get_jobject(), a0);
}

jboolean java::sql::ResultSetMetaData::isReadOnly(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(17),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(17), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::ResultSetMetaData::isSearchable(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(18),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(18), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::ResultSetMetaData::isSigned(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(19),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(19), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::sql::ResultSetMetaData::isWritable(jint a0)
{
	return call_method<
		java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
		java::sql::ResultSetMetaData::J2CPP_METHOD_NAME(20),
		java::sql::ResultSetMetaData::J2CPP_METHOD_SIGNATURE(20), 
		jboolean
	>(get_jobject(), a0);
}


static_field<
	java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
	java::sql::ResultSetMetaData::J2CPP_FIELD_NAME(0),
	java::sql::ResultSetMetaData::J2CPP_FIELD_SIGNATURE(0),
	jint
> java::sql::ResultSetMetaData::columnNoNulls;

static_field<
	java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
	java::sql::ResultSetMetaData::J2CPP_FIELD_NAME(1),
	java::sql::ResultSetMetaData::J2CPP_FIELD_SIGNATURE(1),
	jint
> java::sql::ResultSetMetaData::columnNullable;

static_field<
	java::sql::ResultSetMetaData::J2CPP_CLASS_NAME,
	java::sql::ResultSetMetaData::J2CPP_FIELD_NAME(2),
	java::sql::ResultSetMetaData::J2CPP_FIELD_SIGNATURE(2),
	jint
> java::sql::ResultSetMetaData::columnNullableUnknown;


J2CPP_DEFINE_CLASS(java::sql::ResultSetMetaData,"java/sql/ResultSetMetaData")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,0,"getCatalogName","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,1,"getColumnClassName","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,2,"getColumnCount","()I")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,3,"getColumnDisplaySize","(I)I")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,4,"getColumnLabel","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,5,"getColumnName","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,6,"getColumnType","(I)I")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,7,"getColumnTypeName","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,8,"getPrecision","(I)I")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,9,"getScale","(I)I")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,10,"getSchemaName","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,11,"getTableName","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,12,"isAutoIncrement","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,13,"isCaseSensitive","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,14,"isCurrency","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,15,"isDefinitelyWritable","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,16,"isNullable","(I)I")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,17,"isReadOnly","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,18,"isSearchable","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,19,"isSigned","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::ResultSetMetaData,20,"isWritable","(I)Z")
J2CPP_DEFINE_FIELD(java::sql::ResultSetMetaData,0,"columnNoNulls","I")
J2CPP_DEFINE_FIELD(java::sql::ResultSetMetaData,1,"columnNullable","I")
J2CPP_DEFINE_FIELD(java::sql::ResultSetMetaData,2,"columnNullableUnknown","I")

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_RESULTSETMETADATA_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
