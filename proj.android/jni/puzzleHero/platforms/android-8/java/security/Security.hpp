/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.security.Security
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_SECURITY_HPP_DECL
#define J2CPP_JAVA_SECURITY_SECURITY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { class Provider; } } }
namespace j2cpp { namespace java { namespace util { class Map; } } }
namespace j2cpp { namespace java { namespace util { class Set; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/security/Provider.hpp>
#include <java/util/Map.hpp>
#include <java/util/Set.hpp>


namespace j2cpp {

namespace java { namespace security {

	class Security;
	class Security
		: public object<Security>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)

		explicit Security(jobject jobj)
		: object<Security>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static local_ref< java::lang::String > getAlgorithmProperty(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		static jint insertProviderAt(local_ref< java::security::Provider >  const&, jint);
		static jint addProvider(local_ref< java::security::Provider >  const&);
		static void removeProvider(local_ref< java::lang::String >  const&);
		static local_ref< array< local_ref< java::security::Provider >, 1> > getProviders();
		static local_ref< java::security::Provider > getProvider(local_ref< java::lang::String >  const&);
		static local_ref< array< local_ref< java::security::Provider >, 1> > getProviders(local_ref< java::lang::String >  const&);
		static local_ref< array< local_ref< java::security::Provider >, 1> > getProviders(local_ref< java::util::Map >  const&);
		static local_ref< java::lang::String > getProperty(local_ref< java::lang::String >  const&);
		static void setProperty(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		static local_ref< java::util::Set > getAlgorithms(local_ref< java::lang::String >  const&);
	}; //class Security

} //namespace security
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_SECURITY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_SECURITY_HPP_IMPL
#define J2CPP_JAVA_SECURITY_SECURITY_HPP_IMPL

namespace j2cpp {



java::security::Security::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< java::lang::String > java::security::Security::getAlgorithmProperty(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(1),
		java::security::Security::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(a0, a1);
}

jint java::security::Security::insertProviderAt(local_ref< java::security::Provider > const &a0, jint a1)
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(2),
		java::security::Security::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(a0, a1);
}

jint java::security::Security::addProvider(local_ref< java::security::Provider > const &a0)
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(3),
		java::security::Security::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(a0);
}

void java::security::Security::removeProvider(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(4),
		java::security::Security::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(a0);
}

local_ref< array< local_ref< java::security::Provider >, 1> > java::security::Security::getProviders()
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(5),
		java::security::Security::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< array< local_ref< java::security::Provider >, 1> >
	>();
}

local_ref< java::security::Provider > java::security::Security::getProvider(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(6),
		java::security::Security::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::security::Provider >
	>(a0);
}

local_ref< array< local_ref< java::security::Provider >, 1> > java::security::Security::getProviders(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(7),
		java::security::Security::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< array< local_ref< java::security::Provider >, 1> >
	>(a0);
}

local_ref< array< local_ref< java::security::Provider >, 1> > java::security::Security::getProviders(local_ref< java::util::Map > const &a0)
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(8),
		java::security::Security::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< array< local_ref< java::security::Provider >, 1> >
	>(a0);
}

local_ref< java::lang::String > java::security::Security::getProperty(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(9),
		java::security::Security::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::lang::String >
	>(a0);
}

void java::security::Security::setProperty(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(10),
		java::security::Security::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(a0, a1);
}

local_ref< java::util::Set > java::security::Security::getAlgorithms(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::security::Security::J2CPP_CLASS_NAME,
		java::security::Security::J2CPP_METHOD_NAME(11),
		java::security::Security::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::util::Set >
	>(a0);
}


J2CPP_DEFINE_CLASS(java::security::Security,"java/security/Security")
J2CPP_DEFINE_METHOD(java::security::Security,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::security::Security,1,"getAlgorithmProperty","(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::Security,2,"insertProviderAt","(Ljava/security/Provider;I)I")
J2CPP_DEFINE_METHOD(java::security::Security,3,"addProvider","(Ljava/security/Provider;)I")
J2CPP_DEFINE_METHOD(java::security::Security,4,"removeProvider","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::security::Security,5,"getProviders","()[java.security.Provider")
J2CPP_DEFINE_METHOD(java::security::Security,6,"getProvider","(Ljava/lang/String;)Ljava/security/Provider;")
J2CPP_DEFINE_METHOD(java::security::Security,7,"getProviders","(Ljava/lang/String;)[java.security.Provider")
J2CPP_DEFINE_METHOD(java::security::Security,8,"getProviders","(Ljava/util/Map;)[java.security.Provider")
J2CPP_DEFINE_METHOD(java::security::Security,9,"getProperty","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::Security,10,"setProperty","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::security::Security,11,"getAlgorithms","(Ljava/lang/String;)Ljava/util/Set;")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_SECURITY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
