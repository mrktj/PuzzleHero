/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.security.Permissions
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_PERMISSIONS_HPP_DECL
#define J2CPP_JAVA_SECURITY_PERMISSIONS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { class Permission; } } }
namespace j2cpp { namespace java { namespace security { class PermissionCollection; } } }
namespace j2cpp { namespace java { namespace util { class Enumeration; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Object.hpp>
#include <java/security/Permission.hpp>
#include <java/security/PermissionCollection.hpp>
#include <java/util/Enumeration.hpp>


namespace j2cpp {

namespace java { namespace security {

	class Permissions;
	class Permissions
		: public object<Permissions>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		explicit Permissions(jobject jobj)
		: object<Permissions>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::security::PermissionCollection>() const;
		operator local_ref<java::io::Serializable>() const;


		Permissions();
		void add(local_ref< java::security::Permission >  const&);
		local_ref< java::util::Enumeration > elements();
		jboolean implies(local_ref< java::security::Permission >  const&);
	}; //class Permissions

} //namespace security
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_PERMISSIONS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_PERMISSIONS_HPP_IMPL
#define J2CPP_JAVA_SECURITY_PERMISSIONS_HPP_IMPL

namespace j2cpp {



java::security::Permissions::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::security::Permissions::operator local_ref<java::security::PermissionCollection>() const
{
	return local_ref<java::security::PermissionCollection>(get_jobject());
}

java::security::Permissions::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


java::security::Permissions::Permissions()
: object<java::security::Permissions>(
	call_new_object<
		java::security::Permissions::J2CPP_CLASS_NAME,
		java::security::Permissions::J2CPP_METHOD_NAME(0),
		java::security::Permissions::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


void java::security::Permissions::add(local_ref< java::security::Permission > const &a0)
{
	return call_method<
		java::security::Permissions::J2CPP_CLASS_NAME,
		java::security::Permissions::J2CPP_METHOD_NAME(1),
		java::security::Permissions::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0);
}

local_ref< java::util::Enumeration > java::security::Permissions::elements()
{
	return call_method<
		java::security::Permissions::J2CPP_CLASS_NAME,
		java::security::Permissions::J2CPP_METHOD_NAME(2),
		java::security::Permissions::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::util::Enumeration >
	>(get_jobject());
}

jboolean java::security::Permissions::implies(local_ref< java::security::Permission > const &a0)
{
	return call_method<
		java::security::Permissions::J2CPP_CLASS_NAME,
		java::security::Permissions::J2CPP_METHOD_NAME(3),
		java::security::Permissions::J2CPP_METHOD_SIGNATURE(3), 
		jboolean
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(java::security::Permissions,"java/security/Permissions")
J2CPP_DEFINE_METHOD(java::security::Permissions,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::security::Permissions,1,"add","(Ljava/security/Permission;)V")
J2CPP_DEFINE_METHOD(java::security::Permissions,2,"elements","()Ljava/util/Enumeration;")
J2CPP_DEFINE_METHOD(java::security::Permissions,3,"implies","(Ljava/security/Permission;)Z")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_PERMISSIONS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
