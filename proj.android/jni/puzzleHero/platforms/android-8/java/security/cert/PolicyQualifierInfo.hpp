/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.security.cert.PolicyQualifierInfo
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_CERT_POLICYQUALIFIERINFO_HPP_DECL
#define J2CPP_JAVA_SECURITY_CERT_POLICYQUALIFIERINFO_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace security { namespace cert {

	class PolicyQualifierInfo;
	class PolicyQualifierInfo
		: public object<PolicyQualifierInfo>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)

		explicit PolicyQualifierInfo(jobject jobj)
		: object<PolicyQualifierInfo>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		PolicyQualifierInfo(local_ref< array<jbyte,1> > const&);
		local_ref< array<jbyte,1> > getEncoded();
		local_ref< java::lang::String > getPolicyQualifierId();
		local_ref< array<jbyte,1> > getPolicyQualifier();
		local_ref< java::lang::String > toString();
	}; //class PolicyQualifierInfo

} //namespace cert
} //namespace security
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_CERT_POLICYQUALIFIERINFO_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_CERT_POLICYQUALIFIERINFO_HPP_IMPL
#define J2CPP_JAVA_SECURITY_CERT_POLICYQUALIFIERINFO_HPP_IMPL

namespace j2cpp {



java::security::cert::PolicyQualifierInfo::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


java::security::cert::PolicyQualifierInfo::PolicyQualifierInfo(local_ref< array<jbyte,1> > const &a0)
: object<java::security::cert::PolicyQualifierInfo>(
	call_new_object<
		java::security::cert::PolicyQualifierInfo::J2CPP_CLASS_NAME,
		java::security::cert::PolicyQualifierInfo::J2CPP_METHOD_NAME(0),
		java::security::cert::PolicyQualifierInfo::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


local_ref< array<jbyte,1> > java::security::cert::PolicyQualifierInfo::getEncoded()
{
	return call_method<
		java::security::cert::PolicyQualifierInfo::J2CPP_CLASS_NAME,
		java::security::cert::PolicyQualifierInfo::J2CPP_METHOD_NAME(1),
		java::security::cert::PolicyQualifierInfo::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< array<jbyte,1> >
	>(get_jobject());
}

local_ref< java::lang::String > java::security::cert::PolicyQualifierInfo::getPolicyQualifierId()
{
	return call_method<
		java::security::cert::PolicyQualifierInfo::J2CPP_CLASS_NAME,
		java::security::cert::PolicyQualifierInfo::J2CPP_METHOD_NAME(2),
		java::security::cert::PolicyQualifierInfo::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< array<jbyte,1> > java::security::cert::PolicyQualifierInfo::getPolicyQualifier()
{
	return call_method<
		java::security::cert::PolicyQualifierInfo::J2CPP_CLASS_NAME,
		java::security::cert::PolicyQualifierInfo::J2CPP_METHOD_NAME(3),
		java::security::cert::PolicyQualifierInfo::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< array<jbyte,1> >
	>(get_jobject());
}

local_ref< java::lang::String > java::security::cert::PolicyQualifierInfo::toString()
{
	return call_method<
		java::security::cert::PolicyQualifierInfo::J2CPP_CLASS_NAME,
		java::security::cert::PolicyQualifierInfo::J2CPP_METHOD_NAME(4),
		java::security::cert::PolicyQualifierInfo::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::security::cert::PolicyQualifierInfo,"java/security/cert/PolicyQualifierInfo")
J2CPP_DEFINE_METHOD(java::security::cert::PolicyQualifierInfo,0,"<init>","([B)V")
J2CPP_DEFINE_METHOD(java::security::cert::PolicyQualifierInfo,1,"getEncoded","()[B")
J2CPP_DEFINE_METHOD(java::security::cert::PolicyQualifierInfo,2,"getPolicyQualifierId","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::cert::PolicyQualifierInfo,3,"getPolicyQualifier","()[B")
J2CPP_DEFINE_METHOD(java::security::cert::PolicyQualifierInfo,4,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_CERT_POLICYQUALIFIERINFO_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
