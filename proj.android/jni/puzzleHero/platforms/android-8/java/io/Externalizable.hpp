/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.io.Externalizable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_IO_EXTERNALIZABLE_HPP_DECL
#define J2CPP_JAVA_IO_EXTERNALIZABLE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace io { class ObjectInput; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }
namespace j2cpp { namespace java { namespace io { class ObjectOutput; } } }


#include <java/io/ObjectInput.hpp>
#include <java/io/ObjectOutput.hpp>
#include <java/io/Serializable.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace java { namespace io {

	class Externalizable;
	class Externalizable
		: public object<Externalizable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit Externalizable(jobject jobj)
		: object<Externalizable>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::io::Serializable>() const;


		void readExternal(local_ref< java::io::ObjectInput >  const&);
		void writeExternal(local_ref< java::io::ObjectOutput >  const&);
	}; //class Externalizable

} //namespace io
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_IO_EXTERNALIZABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_IO_EXTERNALIZABLE_HPP_IMPL
#define J2CPP_JAVA_IO_EXTERNALIZABLE_HPP_IMPL

namespace j2cpp {



java::io::Externalizable::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::io::Externalizable::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

void java::io::Externalizable::readExternal(local_ref< java::io::ObjectInput > const &a0)
{
	return call_method<
		java::io::Externalizable::J2CPP_CLASS_NAME,
		java::io::Externalizable::J2CPP_METHOD_NAME(0),
		java::io::Externalizable::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject(), a0);
}

void java::io::Externalizable::writeExternal(local_ref< java::io::ObjectOutput > const &a0)
{
	return call_method<
		java::io::Externalizable::J2CPP_CLASS_NAME,
		java::io::Externalizable::J2CPP_METHOD_NAME(1),
		java::io::Externalizable::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(java::io::Externalizable,"java/io/Externalizable")
J2CPP_DEFINE_METHOD(java::io::Externalizable,0,"readExternal","(Ljava/io/ObjectInput;)V")
J2CPP_DEFINE_METHOD(java::io::Externalizable,1,"writeExternal","(Ljava/io/ObjectOutput;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_IO_EXTERNALIZABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
