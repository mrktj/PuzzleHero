/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.net.Proxy
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_PROXY_HPP_DECL
#define J2CPP_JAVA_NET_PROXY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Enum; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Comparable; } } }
namespace j2cpp { namespace java { namespace net { namespace Proxy_ { class Type; } } } }
namespace j2cpp { namespace java { namespace net { class SocketAddress; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Comparable.hpp>
#include <java/lang/Enum.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/net/Proxy.hpp>
#include <java/net/SocketAddress.hpp>


namespace j2cpp {

namespace java { namespace net {

	class Proxy;
	namespace Proxy_ {

		class Type;
		class Type
			: public object<Type>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			explicit Type(jobject jobj)
			: object<Type>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< java::net::Proxy_::Type >, 1> > values();
			static local_ref< java::net::Proxy_::Type > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::net::Proxy_::Type > > DIRECT;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< java::net::Proxy_::Type > > HTTP;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< java::net::Proxy_::Type > > SOCKS;
		}; //class Type

	} //namespace Proxy_

	class Proxy
		: public object<Proxy>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_FIELD(0)

		typedef Proxy_::Type Type;

		explicit Proxy(jobject jobj)
		: object<Proxy>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		Proxy(local_ref< java::net::Proxy_::Type > const&, local_ref< java::net::SocketAddress > const&);
		local_ref< java::net::Proxy_::Type > type();
		local_ref< java::net::SocketAddress > address();
		local_ref< java::lang::String > toString();
		jboolean equals(local_ref< java::lang::Object >  const&);
		jint hashCode();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::net::Proxy > > NO_PROXY;
	}; //class Proxy

} //namespace net
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_PROXY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_PROXY_HPP_IMPL
#define J2CPP_JAVA_NET_PROXY_HPP_IMPL

namespace j2cpp {




java::net::Proxy_::Type::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

java::net::Proxy_::Type::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::net::Proxy_::Type::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

java::net::Proxy_::Type::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< java::net::Proxy_::Type >, 1> > java::net::Proxy_::Type::values()
{
	return call_static_method<
		java::net::Proxy_::Type::J2CPP_CLASS_NAME,
		java::net::Proxy_::Type::J2CPP_METHOD_NAME(0),
		java::net::Proxy_::Type::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< java::net::Proxy_::Type >, 1> >
	>();
}

local_ref< java::net::Proxy_::Type > java::net::Proxy_::Type::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::net::Proxy_::Type::J2CPP_CLASS_NAME,
		java::net::Proxy_::Type::J2CPP_METHOD_NAME(1),
		java::net::Proxy_::Type::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::net::Proxy_::Type >
	>(a0);
}




static_field<
	java::net::Proxy_::Type::J2CPP_CLASS_NAME,
	java::net::Proxy_::Type::J2CPP_FIELD_NAME(0),
	java::net::Proxy_::Type::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::net::Proxy_::Type >
> java::net::Proxy_::Type::DIRECT;

static_field<
	java::net::Proxy_::Type::J2CPP_CLASS_NAME,
	java::net::Proxy_::Type::J2CPP_FIELD_NAME(1),
	java::net::Proxy_::Type::J2CPP_FIELD_SIGNATURE(1),
	local_ref< java::net::Proxy_::Type >
> java::net::Proxy_::Type::HTTP;

static_field<
	java::net::Proxy_::Type::J2CPP_CLASS_NAME,
	java::net::Proxy_::Type::J2CPP_FIELD_NAME(2),
	java::net::Proxy_::Type::J2CPP_FIELD_SIGNATURE(2),
	local_ref< java::net::Proxy_::Type >
> java::net::Proxy_::Type::SOCKS;


J2CPP_DEFINE_CLASS(java::net::Proxy_::Type,"java/net/Proxy$Type")
J2CPP_DEFINE_METHOD(java::net::Proxy_::Type,0,"values","()[java.net.Proxy.Type")
J2CPP_DEFINE_METHOD(java::net::Proxy_::Type,1,"valueOf","(Ljava/lang/String;)Ljava/net/Proxy$Type;")
J2CPP_DEFINE_METHOD(java::net::Proxy_::Type,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(java::net::Proxy_::Type,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(java::net::Proxy_::Type,0,"DIRECT","Ljava/net/Proxy$Type;")
J2CPP_DEFINE_FIELD(java::net::Proxy_::Type,1,"HTTP","Ljava/net/Proxy$Type;")
J2CPP_DEFINE_FIELD(java::net::Proxy_::Type,2,"SOCKS","Ljava/net/Proxy$Type;")
J2CPP_DEFINE_FIELD(java::net::Proxy_::Type,3,"$VALUES","[java.net.Proxy.Type")



java::net::Proxy::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


java::net::Proxy::Proxy(local_ref< java::net::Proxy_::Type > const &a0, local_ref< java::net::SocketAddress > const &a1)
: object<java::net::Proxy>(
	call_new_object<
		java::net::Proxy::J2CPP_CLASS_NAME,
		java::net::Proxy::J2CPP_METHOD_NAME(0),
		java::net::Proxy::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1)
)
{
}


local_ref< java::net::Proxy_::Type > java::net::Proxy::type()
{
	return call_method<
		java::net::Proxy::J2CPP_CLASS_NAME,
		java::net::Proxy::J2CPP_METHOD_NAME(1),
		java::net::Proxy::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::net::Proxy_::Type >
	>(get_jobject());
}

local_ref< java::net::SocketAddress > java::net::Proxy::address()
{
	return call_method<
		java::net::Proxy::J2CPP_CLASS_NAME,
		java::net::Proxy::J2CPP_METHOD_NAME(2),
		java::net::Proxy::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::net::SocketAddress >
	>(get_jobject());
}

local_ref< java::lang::String > java::net::Proxy::toString()
{
	return call_method<
		java::net::Proxy::J2CPP_CLASS_NAME,
		java::net::Proxy::J2CPP_METHOD_NAME(3),
		java::net::Proxy::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jboolean java::net::Proxy::equals(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::net::Proxy::J2CPP_CLASS_NAME,
		java::net::Proxy::J2CPP_METHOD_NAME(4),
		java::net::Proxy::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(get_jobject(), a0);
}

jint java::net::Proxy::hashCode()
{
	return call_method<
		java::net::Proxy::J2CPP_CLASS_NAME,
		java::net::Proxy::J2CPP_METHOD_NAME(5),
		java::net::Proxy::J2CPP_METHOD_SIGNATURE(5), 
		jint
	>(get_jobject());
}



static_field<
	java::net::Proxy::J2CPP_CLASS_NAME,
	java::net::Proxy::J2CPP_FIELD_NAME(0),
	java::net::Proxy::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::net::Proxy >
> java::net::Proxy::NO_PROXY;


J2CPP_DEFINE_CLASS(java::net::Proxy,"java/net/Proxy")
J2CPP_DEFINE_METHOD(java::net::Proxy,0,"<init>","(Ljava/net/Proxy$Type;Ljava/net/SocketAddress;)V")
J2CPP_DEFINE_METHOD(java::net::Proxy,1,"type","()Ljava/net/Proxy$Type;")
J2CPP_DEFINE_METHOD(java::net::Proxy,2,"address","()Ljava/net/SocketAddress;")
J2CPP_DEFINE_METHOD(java::net::Proxy,3,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::Proxy,4,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::net::Proxy,5,"hashCode","()I")
J2CPP_DEFINE_METHOD(java::net::Proxy,6,"<clinit>","()V")
J2CPP_DEFINE_FIELD(java::net::Proxy,0,"NO_PROXY","Ljava/net/Proxy;")

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_PROXY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
