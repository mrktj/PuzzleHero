/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.net.Inet6Address
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_INET6ADDRESS_HPP_DECL
#define J2CPP_JAVA_NET_INET6ADDRESS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace net { class InetAddress; } } }
namespace j2cpp { namespace java { namespace net { class NetworkInterface; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/net/InetAddress.hpp>
#include <java/net/NetworkInterface.hpp>


namespace j2cpp {

namespace java { namespace net {

	class Inet6Address;
	class Inet6Address
		: public object<Inet6Address>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)

		explicit Inet6Address(jobject jobj)
		: object<Inet6Address>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::net::InetAddress>() const;
		operator local_ref<java::io::Serializable>() const;


		static local_ref< java::net::Inet6Address > getByAddress(local_ref< java::lang::String >  const&, local_ref< array<jbyte,1> >  const&, jint);
		static local_ref< java::net::Inet6Address > getByAddress(local_ref< java::lang::String >  const&, local_ref< array<jbyte,1> >  const&, local_ref< java::net::NetworkInterface >  const&);
		jboolean isMulticastAddress();
		jboolean isAnyLocalAddress();
		jboolean isLoopbackAddress();
		jboolean isLinkLocalAddress();
		jboolean isSiteLocalAddress();
		jboolean isMCGlobal();
		jboolean isMCNodeLocal();
		jboolean isMCLinkLocal();
		jboolean isMCSiteLocal();
		jboolean isMCOrgLocal();
		jint getScopeId();
		local_ref< java::net::NetworkInterface > getScopedInterface();
		jboolean isIPv4CompatibleAddress();
		local_ref< java::lang::String > toString();
	}; //class Inet6Address

} //namespace net
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_INET6ADDRESS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_INET6ADDRESS_HPP_IMPL
#define J2CPP_JAVA_NET_INET6ADDRESS_HPP_IMPL

namespace j2cpp {



java::net::Inet6Address::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::net::Inet6Address::operator local_ref<java::net::InetAddress>() const
{
	return local_ref<java::net::InetAddress>(get_jobject());
}

java::net::Inet6Address::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


local_ref< java::net::Inet6Address > java::net::Inet6Address::getByAddress(local_ref< java::lang::String > const &a0, local_ref< array<jbyte,1> > const &a1, jint a2)
{
	return call_static_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(1),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::net::Inet6Address >
	>(a0, a1, a2);
}

local_ref< java::net::Inet6Address > java::net::Inet6Address::getByAddress(local_ref< java::lang::String > const &a0, local_ref< array<jbyte,1> > const &a1, local_ref< java::net::NetworkInterface > const &a2)
{
	return call_static_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(2),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::net::Inet6Address >
	>(a0, a1, a2);
}

jboolean java::net::Inet6Address::isMulticastAddress()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(3),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(3), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet6Address::isAnyLocalAddress()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(4),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet6Address::isLoopbackAddress()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(5),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet6Address::isLinkLocalAddress()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(6),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(6), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet6Address::isSiteLocalAddress()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(7),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet6Address::isMCGlobal()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(8),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(8), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet6Address::isMCNodeLocal()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(9),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet6Address::isMCLinkLocal()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(10),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(10), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet6Address::isMCSiteLocal()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(11),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(11), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet6Address::isMCOrgLocal()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(12),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(12), 
		jboolean
	>(get_jobject());
}

jint java::net::Inet6Address::getScopeId()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(13),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(13), 
		jint
	>(get_jobject());
}

local_ref< java::net::NetworkInterface > java::net::Inet6Address::getScopedInterface()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(14),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(14), 
		local_ref< java::net::NetworkInterface >
	>(get_jobject());
}

jboolean java::net::Inet6Address::isIPv4CompatibleAddress()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(15),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(15), 
		jboolean
	>(get_jobject());
}

local_ref< java::lang::String > java::net::Inet6Address::toString()
{
	return call_method<
		java::net::Inet6Address::J2CPP_CLASS_NAME,
		java::net::Inet6Address::J2CPP_METHOD_NAME(16),
		java::net::Inet6Address::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::lang::String >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::net::Inet6Address,"java/net/Inet6Address")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,1,"getByAddress","(Ljava/lang/String;[BI)Ljava/net/Inet6Address;")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,2,"getByAddress","(Ljava/lang/String;[BLjava/net/NetworkInterface;)Ljava/net/Inet6Address;")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,3,"isMulticastAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,4,"isAnyLocalAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,5,"isLoopbackAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,6,"isLinkLocalAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,7,"isSiteLocalAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,8,"isMCGlobal","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,9,"isMCNodeLocal","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,10,"isMCLinkLocal","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,11,"isMCSiteLocal","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,12,"isMCOrgLocal","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,13,"getScopeId","()I")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,14,"getScopedInterface","()Ljava/net/NetworkInterface;")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,15,"isIPv4CompatibleAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet6Address,16,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_INET6ADDRESS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
