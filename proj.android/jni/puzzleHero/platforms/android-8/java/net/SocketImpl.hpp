/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.net.SocketImpl
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_SOCKETIMPL_HPP_DECL
#define J2CPP_JAVA_NET_SOCKETIMPL_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace net { class SocketOptions; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/net/SocketOptions.hpp>


namespace j2cpp {

namespace java { namespace net {

	class SocketImpl;
	class SocketImpl
		: public object<SocketImpl>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)

		explicit SocketImpl(jobject jobj)
		: object<SocketImpl>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::net::SocketOptions>() const;


		SocketImpl();
		local_ref< java::lang::Object > getOption(jint);
		void setOption(jint, local_ref< java::lang::Object >  const&);
		local_ref< java::lang::String > toString();

	}; //class SocketImpl

} //namespace net
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_SOCKETIMPL_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_SOCKETIMPL_HPP_IMPL
#define J2CPP_JAVA_NET_SOCKETIMPL_HPP_IMPL

namespace j2cpp {



java::net::SocketImpl::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::net::SocketImpl::operator local_ref<java::net::SocketOptions>() const
{
	return local_ref<java::net::SocketOptions>(get_jobject());
}


java::net::SocketImpl::SocketImpl()
: object<java::net::SocketImpl>(
	call_new_object<
		java::net::SocketImpl::J2CPP_CLASS_NAME,
		java::net::SocketImpl::J2CPP_METHOD_NAME(0),
		java::net::SocketImpl::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}













local_ref< java::lang::Object > java::net::SocketImpl::getOption(jint a0)
{
	return call_method<
		java::net::SocketImpl::J2CPP_CLASS_NAME,
		java::net::SocketImpl::J2CPP_METHOD_NAME(12),
		java::net::SocketImpl::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}




void java::net::SocketImpl::setOption(jint a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		java::net::SocketImpl::J2CPP_CLASS_NAME,
		java::net::SocketImpl::J2CPP_METHOD_NAME(16),
		java::net::SocketImpl::J2CPP_METHOD_SIGNATURE(16), 
		void
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::String > java::net::SocketImpl::toString()
{
	return call_method<
		java::net::SocketImpl::J2CPP_CLASS_NAME,
		java::net::SocketImpl::J2CPP_METHOD_NAME(17),
		java::net::SocketImpl::J2CPP_METHOD_SIGNATURE(17), 
		local_ref< java::lang::String >
	>(get_jobject());
}









J2CPP_DEFINE_CLASS(java::net::SocketImpl,"java/net/SocketImpl")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,1,"accept","(Ljava/net/SocketImpl;)V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,2,"available","()I")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,3,"bind","(Ljava/net/InetAddress;I)V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,4,"close","()V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,5,"connect","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,6,"connect","(Ljava/net/InetAddress;I)V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,7,"create","(Z)V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,8,"getFileDescriptor","()Ljava/io/FileDescriptor;")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,9,"getInetAddress","()Ljava/net/InetAddress;")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,10,"getInputStream","()Ljava/io/InputStream;")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,11,"getLocalPort","()I")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,12,"getOption","(I)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,13,"getOutputStream","()Ljava/io/OutputStream;")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,14,"getPort","()I")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,15,"listen","(I)V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,16,"setOption","(ILjava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,17,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,18,"shutdownInput","()V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,19,"shutdownOutput","()V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,20,"connect","(Ljava/net/SocketAddress;I)V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,21,"supportsUrgentData","()Z")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,22,"sendUrgentData","(I)V")
J2CPP_DEFINE_METHOD(java::net::SocketImpl,23,"setPerformancePreferences","(III)V")
J2CPP_DEFINE_FIELD(java::net::SocketImpl,0,"address","Ljava/net/InetAddress;")
J2CPP_DEFINE_FIELD(java::net::SocketImpl,1,"port","I")
J2CPP_DEFINE_FIELD(java::net::SocketImpl,2,"fd","Ljava/io/FileDescriptor;")
J2CPP_DEFINE_FIELD(java::net::SocketImpl,3,"localport","I")

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_SOCKETIMPL_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
