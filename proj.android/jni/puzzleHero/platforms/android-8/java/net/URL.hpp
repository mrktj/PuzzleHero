/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.net.URL
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_URL_HPP_DECL
#define J2CPP_JAVA_NET_URL_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Class; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace net { class URLConnection; } } }
namespace j2cpp { namespace java { namespace net { class Proxy; } } }
namespace j2cpp { namespace java { namespace net { class URLStreamHandlerFactory; } } }
namespace j2cpp { namespace java { namespace net { class URI; } } }
namespace j2cpp { namespace java { namespace net { class URLStreamHandler; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }


#include <java/io/InputStream.hpp>
#include <java/io/Serializable.hpp>
#include <java/lang/Class.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/net/Proxy.hpp>
#include <java/net/URI.hpp>
#include <java/net/URLConnection.hpp>
#include <java/net/URLStreamHandler.hpp>
#include <java/net/URLStreamHandlerFactory.hpp>


namespace j2cpp {

namespace java { namespace net {

	class URL;
	class URL
		: public object<URL>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)

		explicit URL(jobject jobj)
		: object<URL>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::io::Serializable>() const;


		URL(local_ref< java::lang::String > const&);
		URL(local_ref< java::net::URL > const&, local_ref< java::lang::String > const&);
		URL(local_ref< java::net::URL > const&, local_ref< java::lang::String > const&, local_ref< java::net::URLStreamHandler > const&);
		URL(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		URL(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, jint, local_ref< java::lang::String > const&);
		URL(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, jint, local_ref< java::lang::String > const&, local_ref< java::net::URLStreamHandler > const&);
		static void setURLStreamHandlerFactory(local_ref< java::net::URLStreamHandlerFactory >  const&);
		jboolean equals(local_ref< java::lang::Object >  const&);
		jboolean sameFile(local_ref< java::net::URL >  const&);
		jint hashCode();
		local_ref< java::lang::Object > getContent();
		local_ref< java::lang::Object > getContent(local_ref< array< local_ref< java::lang::Class >, 1> >  const&);
		local_ref< java::io::InputStream > openStream();
		local_ref< java::net::URLConnection > openConnection();
		local_ref< java::net::URI > toURI();
		local_ref< java::net::URLConnection > openConnection(local_ref< java::net::Proxy >  const&);
		local_ref< java::lang::String > toString();
		local_ref< java::lang::String > toExternalForm();
		local_ref< java::lang::String > getFile();
		local_ref< java::lang::String > getHost();
		jint getPort();
		local_ref< java::lang::String > getProtocol();
		local_ref< java::lang::String > getRef();
		local_ref< java::lang::String > getQuery();
		local_ref< java::lang::String > getPath();
		local_ref< java::lang::String > getUserInfo();
		local_ref< java::lang::String > getAuthority();
		jint getDefaultPort();
	}; //class URL

} //namespace net
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_URL_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_URL_HPP_IMPL
#define J2CPP_JAVA_NET_URL_HPP_IMPL

namespace j2cpp {



java::net::URL::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::net::URL::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


java::net::URL::URL(local_ref< java::lang::String > const &a0)
: object<java::net::URL>(
	call_new_object<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(0),
		java::net::URL::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



java::net::URL::URL(local_ref< java::net::URL > const &a0, local_ref< java::lang::String > const &a1)
: object<java::net::URL>(
	call_new_object<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(1),
		java::net::URL::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1)
)
{
}



java::net::URL::URL(local_ref< java::net::URL > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::net::URLStreamHandler > const &a2)
: object<java::net::URL>(
	call_new_object<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(2),
		java::net::URL::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1, a2)
)
{
}



java::net::URL::URL(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
: object<java::net::URL>(
	call_new_object<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(3),
		java::net::URL::J2CPP_METHOD_SIGNATURE(3)
	>(a0, a1, a2)
)
{
}



java::net::URL::URL(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, jint a2, local_ref< java::lang::String > const &a3)
: object<java::net::URL>(
	call_new_object<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(4),
		java::net::URL::J2CPP_METHOD_SIGNATURE(4)
	>(a0, a1, a2, a3)
)
{
}



java::net::URL::URL(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, jint a2, local_ref< java::lang::String > const &a3, local_ref< java::net::URLStreamHandler > const &a4)
: object<java::net::URL>(
	call_new_object<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(5),
		java::net::URL::J2CPP_METHOD_SIGNATURE(5)
	>(a0, a1, a2, a3, a4)
)
{
}


void java::net::URL::setURLStreamHandlerFactory(local_ref< java::net::URLStreamHandlerFactory > const &a0)
{
	return call_static_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(6),
		java::net::URL::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(a0);
}


jboolean java::net::URL::equals(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(8),
		java::net::URL::J2CPP_METHOD_SIGNATURE(8), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::net::URL::sameFile(local_ref< java::net::URL > const &a0)
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(9),
		java::net::URL::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(get_jobject(), a0);
}

jint java::net::URL::hashCode()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(10),
		java::net::URL::J2CPP_METHOD_SIGNATURE(10), 
		jint
	>(get_jobject());
}

local_ref< java::lang::Object > java::net::URL::getContent()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(11),
		java::net::URL::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::net::URL::getContent(local_ref< array< local_ref< java::lang::Class >, 1> > const &a0)
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(12),
		java::net::URL::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

local_ref< java::io::InputStream > java::net::URL::openStream()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(13),
		java::net::URL::J2CPP_METHOD_SIGNATURE(13), 
		local_ref< java::io::InputStream >
	>(get_jobject());
}

local_ref< java::net::URLConnection > java::net::URL::openConnection()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(14),
		java::net::URL::J2CPP_METHOD_SIGNATURE(14), 
		local_ref< java::net::URLConnection >
	>(get_jobject());
}

local_ref< java::net::URI > java::net::URL::toURI()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(15),
		java::net::URL::J2CPP_METHOD_SIGNATURE(15), 
		local_ref< java::net::URI >
	>(get_jobject());
}

local_ref< java::net::URLConnection > java::net::URL::openConnection(local_ref< java::net::Proxy > const &a0)
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(16),
		java::net::URL::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::net::URLConnection >
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::net::URL::toString()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(17),
		java::net::URL::J2CPP_METHOD_SIGNATURE(17), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::net::URL::toExternalForm()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(18),
		java::net::URL::J2CPP_METHOD_SIGNATURE(18), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::net::URL::getFile()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(19),
		java::net::URL::J2CPP_METHOD_SIGNATURE(19), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::net::URL::getHost()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(20),
		java::net::URL::J2CPP_METHOD_SIGNATURE(20), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint java::net::URL::getPort()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(21),
		java::net::URL::J2CPP_METHOD_SIGNATURE(21), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > java::net::URL::getProtocol()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(22),
		java::net::URL::J2CPP_METHOD_SIGNATURE(22), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::net::URL::getRef()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(23),
		java::net::URL::J2CPP_METHOD_SIGNATURE(23), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::net::URL::getQuery()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(24),
		java::net::URL::J2CPP_METHOD_SIGNATURE(24), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::net::URL::getPath()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(25),
		java::net::URL::J2CPP_METHOD_SIGNATURE(25), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::net::URL::getUserInfo()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(26),
		java::net::URL::J2CPP_METHOD_SIGNATURE(26), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::net::URL::getAuthority()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(27),
		java::net::URL::J2CPP_METHOD_SIGNATURE(27), 
		local_ref< java::lang::String >
	>(get_jobject());
}


jint java::net::URL::getDefaultPort()
{
	return call_method<
		java::net::URL::J2CPP_CLASS_NAME,
		java::net::URL::J2CPP_METHOD_NAME(29),
		java::net::URL::J2CPP_METHOD_SIGNATURE(29), 
		jint
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::net::URL,"java/net/URL")
J2CPP_DEFINE_METHOD(java::net::URL,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::net::URL,1,"<init>","(Ljava/net/URL;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::net::URL,2,"<init>","(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V")
J2CPP_DEFINE_METHOD(java::net::URL,3,"<init>","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::net::URL,4,"<init>","(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::net::URL,5,"<init>","(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V")
J2CPP_DEFINE_METHOD(java::net::URL,6,"setURLStreamHandlerFactory","(Ljava/net/URLStreamHandlerFactory;)V")
J2CPP_DEFINE_METHOD(java::net::URL,7,"set","(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::net::URL,8,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::net::URL,9,"sameFile","(Ljava/net/URL;)Z")
J2CPP_DEFINE_METHOD(java::net::URL,10,"hashCode","()I")
J2CPP_DEFINE_METHOD(java::net::URL,11,"getContent","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::net::URL,12,"getContent","([java.lang.Class)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::net::URL,13,"openStream","()Ljava/io/InputStream;")
J2CPP_DEFINE_METHOD(java::net::URL,14,"openConnection","()Ljava/net/URLConnection;")
J2CPP_DEFINE_METHOD(java::net::URL,15,"toURI","()Ljava/net/URI;")
J2CPP_DEFINE_METHOD(java::net::URL,16,"openConnection","(Ljava/net/Proxy;)Ljava/net/URLConnection;")
J2CPP_DEFINE_METHOD(java::net::URL,17,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URL,18,"toExternalForm","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URL,19,"getFile","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URL,20,"getHost","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URL,21,"getPort","()I")
J2CPP_DEFINE_METHOD(java::net::URL,22,"getProtocol","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URL,23,"getRef","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URL,24,"getQuery","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URL,25,"getPath","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URL,26,"getUserInfo","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URL,27,"getAuthority","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URL,28,"set","(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::net::URL,29,"getDefaultPort","()I")

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_URL_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
