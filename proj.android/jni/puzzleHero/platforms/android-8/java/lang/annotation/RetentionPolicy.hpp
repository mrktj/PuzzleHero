/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.lang.annotation.RetentionPolicy
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_ANNOTATION_RETENTIONPOLICY_HPP_DECL
#define J2CPP_JAVA_LANG_ANNOTATION_RETENTIONPOLICY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Enum; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Comparable; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Comparable.hpp>
#include <java/lang/Enum.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace lang { namespace annotation {

	class RetentionPolicy;
	class RetentionPolicy
		: public object<RetentionPolicy>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)

		explicit RetentionPolicy(jobject jobj)
		: object<RetentionPolicy>(jobj)
		{
		}

		operator local_ref<java::lang::Enum>() const;
		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::lang::Comparable>() const;
		operator local_ref<java::io::Serializable>() const;


		static local_ref< array< local_ref< java::lang::annotation::RetentionPolicy >, 1> > values();
		static local_ref< java::lang::annotation::RetentionPolicy > valueOf(local_ref< java::lang::String >  const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::lang::annotation::RetentionPolicy > > CLASS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< java::lang::annotation::RetentionPolicy > > RUNTIME;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< java::lang::annotation::RetentionPolicy > > SOURCE;
	}; //class RetentionPolicy

} //namespace annotation
} //namespace lang
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_ANNOTATION_RETENTIONPOLICY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_ANNOTATION_RETENTIONPOLICY_HPP_IMPL
#define J2CPP_JAVA_LANG_ANNOTATION_RETENTIONPOLICY_HPP_IMPL

namespace j2cpp {



java::lang::annotation::RetentionPolicy::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

java::lang::annotation::RetentionPolicy::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::lang::annotation::RetentionPolicy::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

java::lang::annotation::RetentionPolicy::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< java::lang::annotation::RetentionPolicy >, 1> > java::lang::annotation::RetentionPolicy::values()
{
	return call_static_method<
		java::lang::annotation::RetentionPolicy::J2CPP_CLASS_NAME,
		java::lang::annotation::RetentionPolicy::J2CPP_METHOD_NAME(0),
		java::lang::annotation::RetentionPolicy::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< java::lang::annotation::RetentionPolicy >, 1> >
	>();
}

local_ref< java::lang::annotation::RetentionPolicy > java::lang::annotation::RetentionPolicy::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::lang::annotation::RetentionPolicy::J2CPP_CLASS_NAME,
		java::lang::annotation::RetentionPolicy::J2CPP_METHOD_NAME(1),
		java::lang::annotation::RetentionPolicy::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::annotation::RetentionPolicy >
	>(a0);
}




static_field<
	java::lang::annotation::RetentionPolicy::J2CPP_CLASS_NAME,
	java::lang::annotation::RetentionPolicy::J2CPP_FIELD_NAME(0),
	java::lang::annotation::RetentionPolicy::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::lang::annotation::RetentionPolicy >
> java::lang::annotation::RetentionPolicy::CLASS;

static_field<
	java::lang::annotation::RetentionPolicy::J2CPP_CLASS_NAME,
	java::lang::annotation::RetentionPolicy::J2CPP_FIELD_NAME(1),
	java::lang::annotation::RetentionPolicy::J2CPP_FIELD_SIGNATURE(1),
	local_ref< java::lang::annotation::RetentionPolicy >
> java::lang::annotation::RetentionPolicy::RUNTIME;

static_field<
	java::lang::annotation::RetentionPolicy::J2CPP_CLASS_NAME,
	java::lang::annotation::RetentionPolicy::J2CPP_FIELD_NAME(2),
	java::lang::annotation::RetentionPolicy::J2CPP_FIELD_SIGNATURE(2),
	local_ref< java::lang::annotation::RetentionPolicy >
> java::lang::annotation::RetentionPolicy::SOURCE;


J2CPP_DEFINE_CLASS(java::lang::annotation::RetentionPolicy,"java/lang/annotation/RetentionPolicy")
J2CPP_DEFINE_METHOD(java::lang::annotation::RetentionPolicy,0,"values","()[java.lang.annotation.RetentionPolicy")
J2CPP_DEFINE_METHOD(java::lang::annotation::RetentionPolicy,1,"valueOf","(Ljava/lang/String;)Ljava/lang/annotation/RetentionPolicy;")
J2CPP_DEFINE_METHOD(java::lang::annotation::RetentionPolicy,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(java::lang::annotation::RetentionPolicy,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(java::lang::annotation::RetentionPolicy,0,"CLASS","Ljava/lang/annotation/RetentionPolicy;")
J2CPP_DEFINE_FIELD(java::lang::annotation::RetentionPolicy,1,"RUNTIME","Ljava/lang/annotation/RetentionPolicy;")
J2CPP_DEFINE_FIELD(java::lang::annotation::RetentionPolicy,2,"SOURCE","Ljava/lang/annotation/RetentionPolicy;")
J2CPP_DEFINE_FIELD(java::lang::annotation::RetentionPolicy,3,"$VALUES","[java.lang.annotation.RetentionPolicy")

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_ANNOTATION_RETENTIONPOLICY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
