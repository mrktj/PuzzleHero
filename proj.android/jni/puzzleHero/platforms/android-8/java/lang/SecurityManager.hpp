/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.lang.SecurityManager
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_SECURITYMANAGER_HPP_DECL
#define J2CPP_JAVA_LANG_SECURITYMANAGER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Class; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Thread; } } }
namespace j2cpp { namespace java { namespace lang { class ThreadGroup; } } }
namespace j2cpp { namespace java { namespace security { class Permission; } } }
namespace j2cpp { namespace java { namespace net { class InetAddress; } } }
namespace j2cpp { namespace java { namespace io { class FileDescriptor; } } }


#include <java/io/FileDescriptor.hpp>
#include <java/lang/Class.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/lang/Thread.hpp>
#include <java/lang/ThreadGroup.hpp>
#include <java/net/InetAddress.hpp>
#include <java/security/Permission.hpp>


namespace j2cpp {

namespace java { namespace lang {

	class SecurityManager;
	class SecurityManager
		: public object<SecurityManager>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_FIELD(0)

		explicit SecurityManager(jobject jobj)
		: object<SecurityManager>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		SecurityManager();
		void checkAccept(local_ref< java::lang::String >  const&, jint);
		void checkAccess(local_ref< java::lang::Thread >  const&);
		void checkAccess(local_ref< java::lang::ThreadGroup >  const&);
		void checkConnect(local_ref< java::lang::String >  const&, jint);
		void checkConnect(local_ref< java::lang::String >  const&, jint, local_ref< java::lang::Object >  const&);
		void checkCreateClassLoader();
		void checkDelete(local_ref< java::lang::String >  const&);
		void checkExec(local_ref< java::lang::String >  const&);
		void checkExit(jint);
		void checkLink(local_ref< java::lang::String >  const&);
		void checkListen(jint);
		void checkMemberAccess(local_ref< java::lang::Class >  const&, jint);
		void checkMulticast(local_ref< java::net::InetAddress >  const&);
		void checkMulticast(local_ref< java::net::InetAddress >  const&, jbyte);
		void checkPackageAccess(local_ref< java::lang::String >  const&);
		void checkPackageDefinition(local_ref< java::lang::String >  const&);
		void checkPropertiesAccess();
		void checkPropertyAccess(local_ref< java::lang::String >  const&);
		void checkRead(local_ref< java::io::FileDescriptor >  const&);
		void checkRead(local_ref< java::lang::String >  const&);
		void checkRead(local_ref< java::lang::String >  const&, local_ref< java::lang::Object >  const&);
		void checkSecurityAccess(local_ref< java::lang::String >  const&);
		void checkSetFactory();
		jboolean checkTopLevelWindow(local_ref< java::lang::Object >  const&);
		void checkSystemClipboardAccess();
		void checkAwtEventQueueAccess();
		void checkPrintJobAccess();
		void checkWrite(local_ref< java::io::FileDescriptor >  const&);
		void checkWrite(local_ref< java::lang::String >  const&);
		jboolean getInCheck();
		local_ref< java::lang::ThreadGroup > getThreadGroup();
		local_ref< java::lang::Object > getSecurityContext();
		void checkPermission(local_ref< java::security::Permission >  const&);
		void checkPermission(local_ref< java::security::Permission >  const&, local_ref< java::lang::Object >  const&);

	}; //class SecurityManager

} //namespace lang
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_SECURITYMANAGER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_SECURITYMANAGER_HPP_IMPL
#define J2CPP_JAVA_LANG_SECURITYMANAGER_HPP_IMPL

namespace j2cpp {



java::lang::SecurityManager::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


java::lang::SecurityManager::SecurityManager()
: object<java::lang::SecurityManager>(
	call_new_object<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(0),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


void java::lang::SecurityManager::checkAccept(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(1),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0, a1);
}

void java::lang::SecurityManager::checkAccess(local_ref< java::lang::Thread > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(2),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkAccess(local_ref< java::lang::ThreadGroup > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(3),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkConnect(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(4),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0, a1);
}

void java::lang::SecurityManager::checkConnect(local_ref< java::lang::String > const &a0, jint a1, local_ref< java::lang::Object > const &a2)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(5),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0, a1, a2);
}

void java::lang::SecurityManager::checkCreateClassLoader()
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(6),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject());
}

void java::lang::SecurityManager::checkDelete(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(7),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkExec(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(8),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkExit(jint a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(9),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkLink(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(10),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkListen(jint a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(11),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkMemberAccess(local_ref< java::lang::Class > const &a0, jint a1)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(12),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(12), 
		void
	>(get_jobject(), a0, a1);
}

void java::lang::SecurityManager::checkMulticast(local_ref< java::net::InetAddress > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(13),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(13), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkMulticast(local_ref< java::net::InetAddress > const &a0, jbyte a1)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(14),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(14), 
		void
	>(get_jobject(), a0, a1);
}

void java::lang::SecurityManager::checkPackageAccess(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(15),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(15), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkPackageDefinition(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(16),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(16), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkPropertiesAccess()
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(17),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(17), 
		void
	>(get_jobject());
}

void java::lang::SecurityManager::checkPropertyAccess(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(18),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(18), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkRead(local_ref< java::io::FileDescriptor > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(19),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(19), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkRead(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(20),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(20), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkRead(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(21),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(21), 
		void
	>(get_jobject(), a0, a1);
}

void java::lang::SecurityManager::checkSecurityAccess(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(22),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(22), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkSetFactory()
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(23),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(23), 
		void
	>(get_jobject());
}

jboolean java::lang::SecurityManager::checkTopLevelWindow(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(24),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(24), 
		jboolean
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkSystemClipboardAccess()
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(25),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(25), 
		void
	>(get_jobject());
}

void java::lang::SecurityManager::checkAwtEventQueueAccess()
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(26),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(26), 
		void
	>(get_jobject());
}

void java::lang::SecurityManager::checkPrintJobAccess()
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(27),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(27), 
		void
	>(get_jobject());
}

void java::lang::SecurityManager::checkWrite(local_ref< java::io::FileDescriptor > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(28),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(28), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkWrite(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(29),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(29), 
		void
	>(get_jobject(), a0);
}

jboolean java::lang::SecurityManager::getInCheck()
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(30),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(30), 
		jboolean
	>(get_jobject());
}








local_ref< java::lang::ThreadGroup > java::lang::SecurityManager::getThreadGroup()
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(38),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(38), 
		local_ref< java::lang::ThreadGroup >
	>(get_jobject());
}

local_ref< java::lang::Object > java::lang::SecurityManager::getSecurityContext()
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(39),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(39), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

void java::lang::SecurityManager::checkPermission(local_ref< java::security::Permission > const &a0)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(40),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(40), 
		void
	>(get_jobject(), a0);
}

void java::lang::SecurityManager::checkPermission(local_ref< java::security::Permission > const &a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		java::lang::SecurityManager::J2CPP_CLASS_NAME,
		java::lang::SecurityManager::J2CPP_METHOD_NAME(41),
		java::lang::SecurityManager::J2CPP_METHOD_SIGNATURE(41), 
		void
	>(get_jobject(), a0, a1);
}



J2CPP_DEFINE_CLASS(java::lang::SecurityManager,"java/lang/SecurityManager")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,1,"checkAccept","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,2,"checkAccess","(Ljava/lang/Thread;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,3,"checkAccess","(Ljava/lang/ThreadGroup;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,4,"checkConnect","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,5,"checkConnect","(Ljava/lang/String;ILjava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,6,"checkCreateClassLoader","()V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,7,"checkDelete","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,8,"checkExec","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,9,"checkExit","(I)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,10,"checkLink","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,11,"checkListen","(I)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,12,"checkMemberAccess","(Ljava/lang/Class;I)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,13,"checkMulticast","(Ljava/net/InetAddress;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,14,"checkMulticast","(Ljava/net/InetAddress;B)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,15,"checkPackageAccess","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,16,"checkPackageDefinition","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,17,"checkPropertiesAccess","()V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,18,"checkPropertyAccess","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,19,"checkRead","(Ljava/io/FileDescriptor;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,20,"checkRead","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,21,"checkRead","(Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,22,"checkSecurityAccess","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,23,"checkSetFactory","()V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,24,"checkTopLevelWindow","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,25,"checkSystemClipboardAccess","()V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,26,"checkAwtEventQueueAccess","()V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,27,"checkPrintJobAccess","()V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,28,"checkWrite","(Ljava/io/FileDescriptor;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,29,"checkWrite","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,30,"getInCheck","()Z")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,31,"getClassContext","()[java.lang.Class")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,32,"currentClassLoader","()Ljava/lang/ClassLoader;")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,33,"classLoaderDepth","()I")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,34,"currentLoadedClass","()Ljava/lang/Class;")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,35,"classDepth","(Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,36,"inClass","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,37,"inClassLoader","()Z")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,38,"getThreadGroup","()Ljava/lang/ThreadGroup;")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,39,"getSecurityContext","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,40,"checkPermission","(Ljava/security/Permission;)V")
J2CPP_DEFINE_METHOD(java::lang::SecurityManager,41,"checkPermission","(Ljava/security/Permission;Ljava/lang/Object;)V")
J2CPP_DEFINE_FIELD(java::lang::SecurityManager,0,"inCheck","Z")

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_SECURITYMANAGER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
