/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.util.Currency
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_CURRENCY_HPP_DECL
#define J2CPP_JAVA_UTIL_CURRENCY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Locale; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/Locale.hpp>


namespace j2cpp {

namespace java { namespace util {

	class Currency;
	class Currency
		: public object<Currency>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)

		explicit Currency(jobject jobj)
		: object<Currency>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::io::Serializable>() const;


		static local_ref< java::util::Currency > getInstance(local_ref< java::lang::String >  const&);
		static local_ref< java::util::Currency > getInstance(local_ref< java::util::Locale >  const&);
		local_ref< java::lang::String > getCurrencyCode();
		local_ref< java::lang::String > getSymbol();
		local_ref< java::lang::String > getSymbol(local_ref< java::util::Locale >  const&);
		jint getDefaultFractionDigits();
		local_ref< java::lang::String > toString();
	}; //class Currency

} //namespace util
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_CURRENCY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_CURRENCY_HPP_IMPL
#define J2CPP_JAVA_UTIL_CURRENCY_HPP_IMPL

namespace j2cpp {



java::util::Currency::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::util::Currency::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


local_ref< java::util::Currency > java::util::Currency::getInstance(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::util::Currency::J2CPP_CLASS_NAME,
		java::util::Currency::J2CPP_METHOD_NAME(1),
		java::util::Currency::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::util::Currency >
	>(a0);
}

local_ref< java::util::Currency > java::util::Currency::getInstance(local_ref< java::util::Locale > const &a0)
{
	return call_static_method<
		java::util::Currency::J2CPP_CLASS_NAME,
		java::util::Currency::J2CPP_METHOD_NAME(2),
		java::util::Currency::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::util::Currency >
	>(a0);
}

local_ref< java::lang::String > java::util::Currency::getCurrencyCode()
{
	return call_method<
		java::util::Currency::J2CPP_CLASS_NAME,
		java::util::Currency::J2CPP_METHOD_NAME(3),
		java::util::Currency::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::util::Currency::getSymbol()
{
	return call_method<
		java::util::Currency::J2CPP_CLASS_NAME,
		java::util::Currency::J2CPP_METHOD_NAME(4),
		java::util::Currency::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::util::Currency::getSymbol(local_ref< java::util::Locale > const &a0)
{
	return call_method<
		java::util::Currency::J2CPP_CLASS_NAME,
		java::util::Currency::J2CPP_METHOD_NAME(5),
		java::util::Currency::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jint java::util::Currency::getDefaultFractionDigits()
{
	return call_method<
		java::util::Currency::J2CPP_CLASS_NAME,
		java::util::Currency::J2CPP_METHOD_NAME(6),
		java::util::Currency::J2CPP_METHOD_SIGNATURE(6), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > java::util::Currency::toString()
{
	return call_method<
		java::util::Currency::J2CPP_CLASS_NAME,
		java::util::Currency::J2CPP_METHOD_NAME(7),
		java::util::Currency::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::lang::String >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::util::Currency,"java/util/Currency")
J2CPP_DEFINE_METHOD(java::util::Currency,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::util::Currency,1,"getInstance","(Ljava/lang/String;)Ljava/util/Currency;")
J2CPP_DEFINE_METHOD(java::util::Currency,2,"getInstance","(Ljava/util/Locale;)Ljava/util/Currency;")
J2CPP_DEFINE_METHOD(java::util::Currency,3,"getCurrencyCode","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Currency,4,"getSymbol","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Currency,5,"getSymbol","(Ljava/util/Locale;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Currency,6,"getDefaultFractionDigits","()I")
J2CPP_DEFINE_METHOD(java::util::Currency,7,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_CURRENCY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
