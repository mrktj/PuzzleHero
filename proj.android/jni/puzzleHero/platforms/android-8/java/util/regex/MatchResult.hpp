/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.util.regex.MatchResult
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_REGEX_MATCHRESULT_HPP_DECL
#define J2CPP_JAVA_UTIL_REGEX_MATCHRESULT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace util { namespace regex {

	class MatchResult;
	class MatchResult
		: public object<MatchResult>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		explicit MatchResult(jobject jobj)
		: object<MatchResult>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		jint end();
		jint end(jint);
		local_ref< java::lang::String > group();
		local_ref< java::lang::String > group(jint);
		jint groupCount();
		jint start();
		jint start(jint);
	}; //class MatchResult

} //namespace regex
} //namespace util
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_REGEX_MATCHRESULT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_REGEX_MATCHRESULT_HPP_IMPL
#define J2CPP_JAVA_UTIL_REGEX_MATCHRESULT_HPP_IMPL

namespace j2cpp {



java::util::regex::MatchResult::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

jint java::util::regex::MatchResult::end()
{
	return call_method<
		java::util::regex::MatchResult::J2CPP_CLASS_NAME,
		java::util::regex::MatchResult::J2CPP_METHOD_NAME(0),
		java::util::regex::MatchResult::J2CPP_METHOD_SIGNATURE(0), 
		jint
	>(get_jobject());
}

jint java::util::regex::MatchResult::end(jint a0)
{
	return call_method<
		java::util::regex::MatchResult::J2CPP_CLASS_NAME,
		java::util::regex::MatchResult::J2CPP_METHOD_NAME(1),
		java::util::regex::MatchResult::J2CPP_METHOD_SIGNATURE(1), 
		jint
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::util::regex::MatchResult::group()
{
	return call_method<
		java::util::regex::MatchResult::J2CPP_CLASS_NAME,
		java::util::regex::MatchResult::J2CPP_METHOD_NAME(2),
		java::util::regex::MatchResult::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::util::regex::MatchResult::group(jint a0)
{
	return call_method<
		java::util::regex::MatchResult::J2CPP_CLASS_NAME,
		java::util::regex::MatchResult::J2CPP_METHOD_NAME(3),
		java::util::regex::MatchResult::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jint java::util::regex::MatchResult::groupCount()
{
	return call_method<
		java::util::regex::MatchResult::J2CPP_CLASS_NAME,
		java::util::regex::MatchResult::J2CPP_METHOD_NAME(4),
		java::util::regex::MatchResult::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

jint java::util::regex::MatchResult::start()
{
	return call_method<
		java::util::regex::MatchResult::J2CPP_CLASS_NAME,
		java::util::regex::MatchResult::J2CPP_METHOD_NAME(5),
		java::util::regex::MatchResult::J2CPP_METHOD_SIGNATURE(5), 
		jint
	>(get_jobject());
}

jint java::util::regex::MatchResult::start(jint a0)
{
	return call_method<
		java::util::regex::MatchResult::J2CPP_CLASS_NAME,
		java::util::regex::MatchResult::J2CPP_METHOD_NAME(6),
		java::util::regex::MatchResult::J2CPP_METHOD_SIGNATURE(6), 
		jint
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(java::util::regex::MatchResult,"java/util/regex/MatchResult")
J2CPP_DEFINE_METHOD(java::util::regex::MatchResult,0,"end","()I")
J2CPP_DEFINE_METHOD(java::util::regex::MatchResult,1,"end","(I)I")
J2CPP_DEFINE_METHOD(java::util::regex::MatchResult,2,"group","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::regex::MatchResult,3,"group","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::regex::MatchResult,4,"groupCount","()I")
J2CPP_DEFINE_METHOD(java::util::regex::MatchResult,5,"start","()I")
J2CPP_DEFINE_METHOD(java::util::regex::MatchResult,6,"start","(I)I")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_REGEX_MATCHRESULT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
