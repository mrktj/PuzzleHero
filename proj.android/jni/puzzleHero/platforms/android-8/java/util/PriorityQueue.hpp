/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.util.PriorityQueue
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_PRIORITYQUEUE_HPP_DECL
#define J2CPP_JAVA_UTIL_PRIORITYQUEUE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Iterable; } } }
namespace j2cpp { namespace java { namespace util { class Comparator; } } }
namespace j2cpp { namespace java { namespace util { class Collection; } } }
namespace j2cpp { namespace java { namespace util { class AbstractCollection; } } }
namespace j2cpp { namespace java { namespace util { class AbstractQueue; } } }
namespace j2cpp { namespace java { namespace util { class Iterator; } } }
namespace j2cpp { namespace java { namespace util { class SortedSet; } } }
namespace j2cpp { namespace java { namespace util { class Queue; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Iterable.hpp>
#include <java/lang/Object.hpp>
#include <java/util/AbstractCollection.hpp>
#include <java/util/AbstractQueue.hpp>
#include <java/util/Collection.hpp>
#include <java/util/Comparator.hpp>
#include <java/util/Iterator.hpp>
#include <java/util/Queue.hpp>
#include <java/util/SortedSet.hpp>


namespace j2cpp {

namespace java { namespace util {

	class PriorityQueue;
	class PriorityQueue
		: public object<PriorityQueue>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)

		explicit PriorityQueue(jobject jobj)
		: object<PriorityQueue>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::lang::Iterable>() const;
		operator local_ref<java::util::Collection>() const;
		operator local_ref<java::util::AbstractCollection>() const;
		operator local_ref<java::util::AbstractQueue>() const;
		operator local_ref<java::util::Queue>() const;
		operator local_ref<java::io::Serializable>() const;


		PriorityQueue();
		PriorityQueue(jint);
		PriorityQueue(jint, local_ref< java::util::Comparator > const&);
		PriorityQueue(local_ref< java::util::Collection > const&);
		PriorityQueue(local_ref< java::util::PriorityQueue > const&);
		PriorityQueue(local_ref< java::util::SortedSet > const&);
		local_ref< java::util::Iterator > iterator();
		jint size();
		void clear();
		jboolean offer(local_ref< java::lang::Object >  const&);
		local_ref< java::lang::Object > poll();
		local_ref< java::lang::Object > peek();
		local_ref< java::util::Comparator > comparator();
		jboolean remove(local_ref< java::lang::Object >  const&);
		jboolean add(local_ref< java::lang::Object >  const&);
	}; //class PriorityQueue

} //namespace util
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_PRIORITYQUEUE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_PRIORITYQUEUE_HPP_IMPL
#define J2CPP_JAVA_UTIL_PRIORITYQUEUE_HPP_IMPL

namespace j2cpp {



java::util::PriorityQueue::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::util::PriorityQueue::operator local_ref<java::lang::Iterable>() const
{
	return local_ref<java::lang::Iterable>(get_jobject());
}

java::util::PriorityQueue::operator local_ref<java::util::Collection>() const
{
	return local_ref<java::util::Collection>(get_jobject());
}

java::util::PriorityQueue::operator local_ref<java::util::AbstractCollection>() const
{
	return local_ref<java::util::AbstractCollection>(get_jobject());
}

java::util::PriorityQueue::operator local_ref<java::util::AbstractQueue>() const
{
	return local_ref<java::util::AbstractQueue>(get_jobject());
}

java::util::PriorityQueue::operator local_ref<java::util::Queue>() const
{
	return local_ref<java::util::Queue>(get_jobject());
}

java::util::PriorityQueue::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


java::util::PriorityQueue::PriorityQueue()
: object<java::util::PriorityQueue>(
	call_new_object<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(0),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



java::util::PriorityQueue::PriorityQueue(jint a0)
: object<java::util::PriorityQueue>(
	call_new_object<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(1),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



java::util::PriorityQueue::PriorityQueue(jint a0, local_ref< java::util::Comparator > const &a1)
: object<java::util::PriorityQueue>(
	call_new_object<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(2),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1)
)
{
}



java::util::PriorityQueue::PriorityQueue(local_ref< java::util::Collection > const &a0)
: object<java::util::PriorityQueue>(
	call_new_object<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(3),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(3)
	>(a0)
)
{
}



java::util::PriorityQueue::PriorityQueue(local_ref< java::util::PriorityQueue > const &a0)
: object<java::util::PriorityQueue>(
	call_new_object<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(4),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(4)
	>(a0)
)
{
}



java::util::PriorityQueue::PriorityQueue(local_ref< java::util::SortedSet > const &a0)
: object<java::util::PriorityQueue>(
	call_new_object<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(5),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(5)
	>(a0)
)
{
}


local_ref< java::util::Iterator > java::util::PriorityQueue::iterator()
{
	return call_method<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(6),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

jint java::util::PriorityQueue::size()
{
	return call_method<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(7),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(7), 
		jint
	>(get_jobject());
}

void java::util::PriorityQueue::clear()
{
	return call_method<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(8),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject());
}

jboolean java::util::PriorityQueue::offer(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(9),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::lang::Object > java::util::PriorityQueue::poll()
{
	return call_method<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(10),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::PriorityQueue::peek()
{
	return call_method<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(11),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::util::Comparator > java::util::PriorityQueue::comparator()
{
	return call_method<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(12),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::util::Comparator >
	>(get_jobject());
}

jboolean java::util::PriorityQueue::remove(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(13),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::util::PriorityQueue::add(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::PriorityQueue::J2CPP_CLASS_NAME,
		java::util::PriorityQueue::J2CPP_METHOD_NAME(14),
		java::util::PriorityQueue::J2CPP_METHOD_SIGNATURE(14), 
		jboolean
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(java::util::PriorityQueue,"java/util/PriorityQueue")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,1,"<init>","(I)V")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,2,"<init>","(ILjava/util/Comparator;)V")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,3,"<init>","(Ljava/util/Collection;)V")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,4,"<init>","(Ljava/util/PriorityQueue;)V")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,5,"<init>","(Ljava/util/SortedSet;)V")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,6,"iterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,7,"size","()I")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,8,"clear","()V")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,9,"offer","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,10,"poll","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,11,"peek","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,12,"comparator","()Ljava/util/Comparator;")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,13,"remove","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::PriorityQueue,14,"add","(Ljava/lang/Object;)Z")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_PRIORITYQUEUE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
