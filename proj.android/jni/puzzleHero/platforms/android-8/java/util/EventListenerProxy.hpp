/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.util.EventListenerProxy
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_EVENTLISTENERPROXY_HPP_DECL
#define J2CPP_JAVA_UTIL_EVENTLISTENERPROXY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class EventListener; } } }


#include <java/lang/Object.hpp>
#include <java/util/EventListener.hpp>


namespace j2cpp {

namespace java { namespace util {

	class EventListenerProxy;
	class EventListenerProxy
		: public object<EventListenerProxy>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit EventListenerProxy(jobject jobj)
		: object<EventListenerProxy>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::util::EventListener>() const;


		EventListenerProxy(local_ref< java::util::EventListener > const&);
		local_ref< java::util::EventListener > getListener();
	}; //class EventListenerProxy

} //namespace util
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_EVENTLISTENERPROXY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_EVENTLISTENERPROXY_HPP_IMPL
#define J2CPP_JAVA_UTIL_EVENTLISTENERPROXY_HPP_IMPL

namespace j2cpp {



java::util::EventListenerProxy::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::util::EventListenerProxy::operator local_ref<java::util::EventListener>() const
{
	return local_ref<java::util::EventListener>(get_jobject());
}


java::util::EventListenerProxy::EventListenerProxy(local_ref< java::util::EventListener > const &a0)
: object<java::util::EventListenerProxy>(
	call_new_object<
		java::util::EventListenerProxy::J2CPP_CLASS_NAME,
		java::util::EventListenerProxy::J2CPP_METHOD_NAME(0),
		java::util::EventListenerProxy::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


local_ref< java::util::EventListener > java::util::EventListenerProxy::getListener()
{
	return call_method<
		java::util::EventListenerProxy::J2CPP_CLASS_NAME,
		java::util::EventListenerProxy::J2CPP_METHOD_NAME(1),
		java::util::EventListenerProxy::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::util::EventListener >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::util::EventListenerProxy,"java/util/EventListenerProxy")
J2CPP_DEFINE_METHOD(java::util::EventListenerProxy,0,"<init>","(Ljava/util/EventListener;)V")
J2CPP_DEFINE_METHOD(java::util::EventListenerProxy,1,"getListener","()Ljava/util/EventListener;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_EVENTLISTENERPROXY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
