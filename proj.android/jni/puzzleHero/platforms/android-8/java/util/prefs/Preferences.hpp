/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.util.prefs.Preferences
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_PREFS_PREFERENCES_HPP_DECL
#define J2CPP_JAVA_UTIL_PREFS_PREFERENCES_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Class; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { namespace prefs { class PreferenceChangeListener; } } } }
namespace j2cpp { namespace java { namespace util { namespace prefs { class NodeChangeListener; } } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }
namespace j2cpp { namespace java { namespace io { class OutputStream; } } }


#include <java/io/InputStream.hpp>
#include <java/io/OutputStream.hpp>
#include <java/lang/Class.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/prefs/NodeChangeListener.hpp>
#include <java/util/prefs/PreferenceChangeListener.hpp>


namespace j2cpp {

namespace java { namespace util { namespace prefs {

	class Preferences;
	class Preferences
		: public object<Preferences>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)

		explicit Preferences(jobject jobj)
		: object<Preferences>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		local_ref< java::lang::String > absolutePath();
		local_ref< array< local_ref< java::lang::String >, 1> > childrenNames();
		void clear();
		void exportNode(local_ref< java::io::OutputStream >  const&);
		void exportSubtree(local_ref< java::io::OutputStream >  const&);
		void flush();
		local_ref< java::lang::String > get(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		jboolean getBoolean(local_ref< java::lang::String >  const&, jboolean);
		local_ref< array<jbyte,1> > getByteArray(local_ref< java::lang::String >  const&, local_ref< array<jbyte,1> >  const&);
		jdouble getDouble(local_ref< java::lang::String >  const&, jdouble);
		jfloat getFloat(local_ref< java::lang::String >  const&, jfloat);
		jint getInt(local_ref< java::lang::String >  const&, jint);
		jlong getLong(local_ref< java::lang::String >  const&, jlong);
		static void importPreferences(local_ref< java::io::InputStream >  const&);
		jboolean isUserNode();
		local_ref< array< local_ref< java::lang::String >, 1> > keys();
		local_ref< java::lang::String > name();
		local_ref< java::util::prefs::Preferences > node(local_ref< java::lang::String >  const&);
		jboolean nodeExists(local_ref< java::lang::String >  const&);
		local_ref< java::util::prefs::Preferences > parent();
		void put(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void putBoolean(local_ref< java::lang::String >  const&, jboolean);
		void putByteArray(local_ref< java::lang::String >  const&, local_ref< array<jbyte,1> >  const&);
		void putDouble(local_ref< java::lang::String >  const&, jdouble);
		void putFloat(local_ref< java::lang::String >  const&, jfloat);
		void putInt(local_ref< java::lang::String >  const&, jint);
		void putLong(local_ref< java::lang::String >  const&, jlong);
		void remove(local_ref< java::lang::String >  const&);
		void removeNode();
		void addNodeChangeListener(local_ref< java::util::prefs::NodeChangeListener >  const&);
		void addPreferenceChangeListener(local_ref< java::util::prefs::PreferenceChangeListener >  const&);
		void removeNodeChangeListener(local_ref< java::util::prefs::NodeChangeListener >  const&);
		void removePreferenceChangeListener(local_ref< java::util::prefs::PreferenceChangeListener >  const&);
		void sync();
		static local_ref< java::util::prefs::Preferences > systemNodeForPackage(local_ref< java::lang::Class >  const&);
		static local_ref< java::util::prefs::Preferences > systemRoot();
		static local_ref< java::util::prefs::Preferences > userNodeForPackage(local_ref< java::lang::Class >  const&);
		static local_ref< java::util::prefs::Preferences > userRoot();
		local_ref< java::lang::String > toString();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > MAX_KEY_LENGTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > MAX_NAME_LENGTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > MAX_VALUE_LENGTH;
	}; //class Preferences

} //namespace prefs
} //namespace util
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_PREFS_PREFERENCES_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_PREFS_PREFERENCES_HPP_IMPL
#define J2CPP_JAVA_UTIL_PREFS_PREFERENCES_HPP_IMPL

namespace j2cpp {



java::util::prefs::Preferences::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< java::lang::String > java::util::prefs::Preferences::absolutePath()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(1),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< array< local_ref< java::lang::String >, 1> > java::util::prefs::Preferences::childrenNames()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(2),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject());
}

void java::util::prefs::Preferences::clear()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(3),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject());
}

void java::util::prefs::Preferences::exportNode(local_ref< java::io::OutputStream > const &a0)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(4),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

void java::util::prefs::Preferences::exportSubtree(local_ref< java::io::OutputStream > const &a0)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(5),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

void java::util::prefs::Preferences::flush()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(6),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject());
}

local_ref< java::lang::String > java::util::prefs::Preferences::get(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(7),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::lang::String >
	>(get_jobject(), a0, a1);
}

jboolean java::util::prefs::Preferences::getBoolean(local_ref< java::lang::String > const &a0, jboolean a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(8),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(8), 
		jboolean
	>(get_jobject(), a0, a1);
}

local_ref< array<jbyte,1> > java::util::prefs::Preferences::getByteArray(local_ref< java::lang::String > const &a0, local_ref< array<jbyte,1> > const &a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(9),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< array<jbyte,1> >
	>(get_jobject(), a0, a1);
}

jdouble java::util::prefs::Preferences::getDouble(local_ref< java::lang::String > const &a0, jdouble a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(10),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(10), 
		jdouble
	>(get_jobject(), a0, a1);
}

jfloat java::util::prefs::Preferences::getFloat(local_ref< java::lang::String > const &a0, jfloat a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(11),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(11), 
		jfloat
	>(get_jobject(), a0, a1);
}

jint java::util::prefs::Preferences::getInt(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(12),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(12), 
		jint
	>(get_jobject(), a0, a1);
}

jlong java::util::prefs::Preferences::getLong(local_ref< java::lang::String > const &a0, jlong a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(13),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(13), 
		jlong
	>(get_jobject(), a0, a1);
}

void java::util::prefs::Preferences::importPreferences(local_ref< java::io::InputStream > const &a0)
{
	return call_static_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(14),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(14), 
		void
	>(a0);
}

jboolean java::util::prefs::Preferences::isUserNode()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(15),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(15), 
		jboolean
	>(get_jobject());
}

local_ref< array< local_ref< java::lang::String >, 1> > java::util::prefs::Preferences::keys()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(16),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject());
}

local_ref< java::lang::String > java::util::prefs::Preferences::name()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(17),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(17), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::util::prefs::Preferences > java::util::prefs::Preferences::node(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(18),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(18), 
		local_ref< java::util::prefs::Preferences >
	>(get_jobject(), a0);
}

jboolean java::util::prefs::Preferences::nodeExists(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(19),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(19), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::util::prefs::Preferences > java::util::prefs::Preferences::parent()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(20),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(20), 
		local_ref< java::util::prefs::Preferences >
	>(get_jobject());
}

void java::util::prefs::Preferences::put(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(21),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(21), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::prefs::Preferences::putBoolean(local_ref< java::lang::String > const &a0, jboolean a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(22),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(22), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::prefs::Preferences::putByteArray(local_ref< java::lang::String > const &a0, local_ref< array<jbyte,1> > const &a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(23),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(23), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::prefs::Preferences::putDouble(local_ref< java::lang::String > const &a0, jdouble a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(24),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(24), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::prefs::Preferences::putFloat(local_ref< java::lang::String > const &a0, jfloat a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(25),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(25), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::prefs::Preferences::putInt(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(26),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(26), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::prefs::Preferences::putLong(local_ref< java::lang::String > const &a0, jlong a1)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(27),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(27), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::prefs::Preferences::remove(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(28),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(28), 
		void
	>(get_jobject(), a0);
}

void java::util::prefs::Preferences::removeNode()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(29),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(29), 
		void
	>(get_jobject());
}

void java::util::prefs::Preferences::addNodeChangeListener(local_ref< java::util::prefs::NodeChangeListener > const &a0)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(30),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(30), 
		void
	>(get_jobject(), a0);
}

void java::util::prefs::Preferences::addPreferenceChangeListener(local_ref< java::util::prefs::PreferenceChangeListener > const &a0)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(31),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(31), 
		void
	>(get_jobject(), a0);
}

void java::util::prefs::Preferences::removeNodeChangeListener(local_ref< java::util::prefs::NodeChangeListener > const &a0)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(32),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(32), 
		void
	>(get_jobject(), a0);
}

void java::util::prefs::Preferences::removePreferenceChangeListener(local_ref< java::util::prefs::PreferenceChangeListener > const &a0)
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(33),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(33), 
		void
	>(get_jobject(), a0);
}

void java::util::prefs::Preferences::sync()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(34),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(34), 
		void
	>(get_jobject());
}

local_ref< java::util::prefs::Preferences > java::util::prefs::Preferences::systemNodeForPackage(local_ref< java::lang::Class > const &a0)
{
	return call_static_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(35),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(35), 
		local_ref< java::util::prefs::Preferences >
	>(a0);
}

local_ref< java::util::prefs::Preferences > java::util::prefs::Preferences::systemRoot()
{
	return call_static_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(36),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(36), 
		local_ref< java::util::prefs::Preferences >
	>();
}

local_ref< java::util::prefs::Preferences > java::util::prefs::Preferences::userNodeForPackage(local_ref< java::lang::Class > const &a0)
{
	return call_static_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(37),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(37), 
		local_ref< java::util::prefs::Preferences >
	>(a0);
}

local_ref< java::util::prefs::Preferences > java::util::prefs::Preferences::userRoot()
{
	return call_static_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(38),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(38), 
		local_ref< java::util::prefs::Preferences >
	>();
}

local_ref< java::lang::String > java::util::prefs::Preferences::toString()
{
	return call_method<
		java::util::prefs::Preferences::J2CPP_CLASS_NAME,
		java::util::prefs::Preferences::J2CPP_METHOD_NAME(39),
		java::util::prefs::Preferences::J2CPP_METHOD_SIGNATURE(39), 
		local_ref< java::lang::String >
	>(get_jobject());
}


static_field<
	java::util::prefs::Preferences::J2CPP_CLASS_NAME,
	java::util::prefs::Preferences::J2CPP_FIELD_NAME(0),
	java::util::prefs::Preferences::J2CPP_FIELD_SIGNATURE(0),
	jint
> java::util::prefs::Preferences::MAX_KEY_LENGTH;

static_field<
	java::util::prefs::Preferences::J2CPP_CLASS_NAME,
	java::util::prefs::Preferences::J2CPP_FIELD_NAME(1),
	java::util::prefs::Preferences::J2CPP_FIELD_SIGNATURE(1),
	jint
> java::util::prefs::Preferences::MAX_NAME_LENGTH;

static_field<
	java::util::prefs::Preferences::J2CPP_CLASS_NAME,
	java::util::prefs::Preferences::J2CPP_FIELD_NAME(2),
	java::util::prefs::Preferences::J2CPP_FIELD_SIGNATURE(2),
	jint
> java::util::prefs::Preferences::MAX_VALUE_LENGTH;


J2CPP_DEFINE_CLASS(java::util::prefs::Preferences,"java/util/prefs/Preferences")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,1,"absolutePath","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,2,"childrenNames","()[java.lang.String")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,3,"clear","()V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,4,"exportNode","(Ljava/io/OutputStream;)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,5,"exportSubtree","(Ljava/io/OutputStream;)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,6,"flush","()V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,7,"get","(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,8,"getBoolean","(Ljava/lang/String;Z)Z")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,9,"getByteArray","(Ljava/lang/String;[B)[B")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,10,"getDouble","(Ljava/lang/String;D)D")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,11,"getFloat","(Ljava/lang/String;F)F")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,12,"getInt","(Ljava/lang/String;I)I")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,13,"getLong","(Ljava/lang/String;J)J")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,14,"importPreferences","(Ljava/io/InputStream;)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,15,"isUserNode","()Z")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,16,"keys","()[java.lang.String")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,17,"name","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,18,"node","(Ljava/lang/String;)Ljava/util/prefs/Preferences;")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,19,"nodeExists","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,20,"parent","()Ljava/util/prefs/Preferences;")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,21,"put","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,22,"putBoolean","(Ljava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,23,"putByteArray","(Ljava/lang/String;[B)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,24,"putDouble","(Ljava/lang/String;D)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,25,"putFloat","(Ljava/lang/String;F)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,26,"putInt","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,27,"putLong","(Ljava/lang/String;J)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,28,"remove","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,29,"removeNode","()V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,30,"addNodeChangeListener","(Ljava/util/prefs/NodeChangeListener;)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,31,"addPreferenceChangeListener","(Ljava/util/prefs/PreferenceChangeListener;)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,32,"removeNodeChangeListener","(Ljava/util/prefs/NodeChangeListener;)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,33,"removePreferenceChangeListener","(Ljava/util/prefs/PreferenceChangeListener;)V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,34,"sync","()V")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,35,"systemNodeForPackage","(Ljava/lang/Class;)Ljava/util/prefs/Preferences;")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,36,"systemRoot","()Ljava/util/prefs/Preferences;")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,37,"userNodeForPackage","(Ljava/lang/Class;)Ljava/util/prefs/Preferences;")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,38,"userRoot","()Ljava/util/prefs/Preferences;")
J2CPP_DEFINE_METHOD(java::util::prefs::Preferences,39,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_FIELD(java::util::prefs::Preferences,0,"MAX_KEY_LENGTH","I")
J2CPP_DEFINE_FIELD(java::util::prefs::Preferences,1,"MAX_NAME_LENGTH","I")
J2CPP_DEFINE_FIELD(java::util::prefs::Preferences,2,"MAX_VALUE_LENGTH","I")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_PREFS_PREFERENCES_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
