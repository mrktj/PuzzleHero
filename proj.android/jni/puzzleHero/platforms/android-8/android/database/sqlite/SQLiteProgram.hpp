/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.database.sqlite.SQLiteProgram
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_DECL
#define J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_DECL


namespace j2cpp { namespace android { namespace database { namespace sqlite { class SQLiteClosable; } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <android/database/sqlite/SQLiteClosable.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace database { namespace sqlite {

	class SQLiteProgram;
	class SQLiteProgram
		: public object<SQLiteProgram>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)

		explicit SQLiteProgram(jobject jobj)
		: object<SQLiteProgram>(jobj)
		{
		}

		operator local_ref<android::database::sqlite::SQLiteClosable>() const;
		operator local_ref<java::lang::Object>() const;


		jint getUniqueId();
		void bindNull(jint);
		void bindLong(jint, jlong);
		void bindDouble(jint, jdouble);
		void bindString(jint, local_ref< java::lang::String >  const&);
		void bindBlob(jint, local_ref< array<jbyte,1> >  const&);
		void clearBindings();
		void close();

	}; //class SQLiteProgram

} //namespace sqlite
} //namespace database
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_IMPL
#define J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_IMPL

namespace j2cpp {



android::database::sqlite::SQLiteProgram::operator local_ref<android::database::sqlite::SQLiteClosable>() const
{
	return local_ref<android::database::sqlite::SQLiteClosable>(get_jobject());
}

android::database::sqlite::SQLiteProgram::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}




jint android::database::sqlite::SQLiteProgram::getUniqueId()
{
	return call_method<
		android::database::sqlite::SQLiteProgram::J2CPP_CLASS_NAME,
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_NAME(3),
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(get_jobject());
}


void android::database::sqlite::SQLiteProgram::bindNull(jint a0)
{
	return call_method<
		android::database::sqlite::SQLiteProgram::J2CPP_CLASS_NAME,
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_NAME(5),
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

void android::database::sqlite::SQLiteProgram::bindLong(jint a0, jlong a1)
{
	return call_method<
		android::database::sqlite::SQLiteProgram::J2CPP_CLASS_NAME,
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_NAME(6),
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0, a1);
}

void android::database::sqlite::SQLiteProgram::bindDouble(jint a0, jdouble a1)
{
	return call_method<
		android::database::sqlite::SQLiteProgram::J2CPP_CLASS_NAME,
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_NAME(7),
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0, a1);
}

void android::database::sqlite::SQLiteProgram::bindString(jint a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::database::sqlite::SQLiteProgram::J2CPP_CLASS_NAME,
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_NAME(8),
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0, a1);
}

void android::database::sqlite::SQLiteProgram::bindBlob(jint a0, local_ref< array<jbyte,1> > const &a1)
{
	return call_method<
		android::database::sqlite::SQLiteProgram::J2CPP_CLASS_NAME,
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_NAME(9),
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject(), a0, a1);
}

void android::database::sqlite::SQLiteProgram::clearBindings()
{
	return call_method<
		android::database::sqlite::SQLiteProgram::J2CPP_CLASS_NAME,
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_NAME(10),
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(get_jobject());
}

void android::database::sqlite::SQLiteProgram::close()
{
	return call_method<
		android::database::sqlite::SQLiteProgram::J2CPP_CLASS_NAME,
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_NAME(11),
		android::database::sqlite::SQLiteProgram::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject());
}










J2CPP_DEFINE_CLASS(android::database::sqlite::SQLiteProgram,"android/database/sqlite/SQLiteProgram")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,1,"onAllReferencesReleased","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,2,"onAllReferencesReleasedFromContainer","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,3,"getUniqueId","()I")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,4,"compile","(Ljava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,5,"bindNull","(I)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,6,"bindLong","(IJ)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,7,"bindDouble","(ID)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,8,"bindString","(ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,9,"bindBlob","(I[B)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,10,"clearBindings","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,11,"close","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,12,"native_compile","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,13,"native_finalize","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,14,"native_bind_null","(I)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,15,"native_bind_long","(IJ)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,16,"native_bind_double","(ID)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,17,"native_bind_string","(ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,18,"native_bind_blob","(I[B)V")
J2CPP_DEFINE_FIELD(android::database::sqlite::SQLiteProgram,0,"mDatabase","Landroid/database/sqlite/SQLiteDatabase;")
J2CPP_DEFINE_FIELD(android::database::sqlite::SQLiteProgram,1,"nHandle","I")
J2CPP_DEFINE_FIELD(android::database::sqlite::SQLiteProgram,2,"nStatement","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
