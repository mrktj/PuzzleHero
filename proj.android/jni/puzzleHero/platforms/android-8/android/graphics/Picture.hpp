/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.graphics.Picture
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_PICTURE_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_PICTURE_HPP_DECL


namespace j2cpp { namespace android { namespace graphics { class Canvas; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }
namespace j2cpp { namespace java { namespace io { class OutputStream; } } }


#include <android/graphics/Canvas.hpp>
#include <java/io/InputStream.hpp>
#include <java/io/OutputStream.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace graphics {

	class Picture;
	class Picture
		: public object<Picture>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)

		explicit Picture(jobject jobj)
		: object<Picture>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		Picture();
		Picture(local_ref< android::graphics::Picture > const&);
		local_ref< android::graphics::Canvas > beginRecording(jint, jint);
		void endRecording();
		jint getWidth();
		jint getHeight();
		void draw(local_ref< android::graphics::Canvas >  const&);
		static local_ref< android::graphics::Picture > createFromStream(local_ref< java::io::InputStream >  const&);
		void writeToStream(local_ref< java::io::OutputStream >  const&);
	}; //class Picture

} //namespace graphics
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_PICTURE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_PICTURE_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_PICTURE_HPP_IMPL

namespace j2cpp {



android::graphics::Picture::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::graphics::Picture::Picture()
: object<android::graphics::Picture>(
	call_new_object<
		android::graphics::Picture::J2CPP_CLASS_NAME,
		android::graphics::Picture::J2CPP_METHOD_NAME(0),
		android::graphics::Picture::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



android::graphics::Picture::Picture(local_ref< android::graphics::Picture > const &a0)
: object<android::graphics::Picture>(
	call_new_object<
		android::graphics::Picture::J2CPP_CLASS_NAME,
		android::graphics::Picture::J2CPP_METHOD_NAME(1),
		android::graphics::Picture::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}


local_ref< android::graphics::Canvas > android::graphics::Picture::beginRecording(jint a0, jint a1)
{
	return call_method<
		android::graphics::Picture::J2CPP_CLASS_NAME,
		android::graphics::Picture::J2CPP_METHOD_NAME(2),
		android::graphics::Picture::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< android::graphics::Canvas >
	>(get_jobject(), a0, a1);
}

void android::graphics::Picture::endRecording()
{
	return call_method<
		android::graphics::Picture::J2CPP_CLASS_NAME,
		android::graphics::Picture::J2CPP_METHOD_NAME(3),
		android::graphics::Picture::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject());
}

jint android::graphics::Picture::getWidth()
{
	return call_method<
		android::graphics::Picture::J2CPP_CLASS_NAME,
		android::graphics::Picture::J2CPP_METHOD_NAME(4),
		android::graphics::Picture::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

jint android::graphics::Picture::getHeight()
{
	return call_method<
		android::graphics::Picture::J2CPP_CLASS_NAME,
		android::graphics::Picture::J2CPP_METHOD_NAME(5),
		android::graphics::Picture::J2CPP_METHOD_SIGNATURE(5), 
		jint
	>(get_jobject());
}

void android::graphics::Picture::draw(local_ref< android::graphics::Canvas > const &a0)
{
	return call_method<
		android::graphics::Picture::J2CPP_CLASS_NAME,
		android::graphics::Picture::J2CPP_METHOD_NAME(6),
		android::graphics::Picture::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0);
}

local_ref< android::graphics::Picture > android::graphics::Picture::createFromStream(local_ref< java::io::InputStream > const &a0)
{
	return call_static_method<
		android::graphics::Picture::J2CPP_CLASS_NAME,
		android::graphics::Picture::J2CPP_METHOD_NAME(7),
		android::graphics::Picture::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< android::graphics::Picture >
	>(a0);
}

void android::graphics::Picture::writeToStream(local_ref< java::io::OutputStream > const &a0)
{
	return call_method<
		android::graphics::Picture::J2CPP_CLASS_NAME,
		android::graphics::Picture::J2CPP_METHOD_NAME(8),
		android::graphics::Picture::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0);
}



J2CPP_DEFINE_CLASS(android::graphics::Picture,"android/graphics/Picture")
J2CPP_DEFINE_METHOD(android::graphics::Picture,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::Picture,1,"<init>","(Landroid/graphics/Picture;)V")
J2CPP_DEFINE_METHOD(android::graphics::Picture,2,"beginRecording","(II)Landroid/graphics/Canvas;")
J2CPP_DEFINE_METHOD(android::graphics::Picture,3,"endRecording","()V")
J2CPP_DEFINE_METHOD(android::graphics::Picture,4,"getWidth","()I")
J2CPP_DEFINE_METHOD(android::graphics::Picture,5,"getHeight","()I")
J2CPP_DEFINE_METHOD(android::graphics::Picture,6,"draw","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::graphics::Picture,7,"createFromStream","(Ljava/io/InputStream;)Landroid/graphics/Picture;")
J2CPP_DEFINE_METHOD(android::graphics::Picture,8,"writeToStream","(Ljava/io/OutputStream;)V")
J2CPP_DEFINE_METHOD(android::graphics::Picture,9,"finalize","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_PICTURE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
