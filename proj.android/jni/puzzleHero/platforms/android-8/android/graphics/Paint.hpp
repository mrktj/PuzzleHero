/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.graphics.Paint
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_PAINT_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_PAINT_HPP_DECL


namespace j2cpp { namespace android { namespace graphics { class Shader; } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace android { namespace graphics { class Typeface; } } }
namespace j2cpp { namespace android { namespace graphics { class Path; } } }
namespace j2cpp { namespace android { namespace graphics { namespace Paint_ { class Style; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace Paint_ { class FontMetricsInt; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace Paint_ { class Align; } } } }
namespace j2cpp { namespace android { namespace graphics { class MaskFilter; } } }
namespace j2cpp { namespace android { namespace graphics { class ColorFilter; } } }
namespace j2cpp { namespace android { namespace graphics { namespace Paint_ { class Cap; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace Paint_ { class Join; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace Paint_ { class FontMetrics; } } } }
namespace j2cpp { namespace android { namespace graphics { class Rasterizer; } } }
namespace j2cpp { namespace android { namespace graphics { class Xfermode; } } }
namespace j2cpp { namespace android { namespace graphics { class PathEffect; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Enum; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Comparable; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <android/graphics/ColorFilter.hpp>
#include <android/graphics/MaskFilter.hpp>
#include <android/graphics/Paint.hpp>
#include <android/graphics/Path.hpp>
#include <android/graphics/PathEffect.hpp>
#include <android/graphics/Rasterizer.hpp>
#include <android/graphics/Rect.hpp>
#include <android/graphics/Shader.hpp>
#include <android/graphics/Typeface.hpp>
#include <android/graphics/Xfermode.hpp>
#include <java/io/Serializable.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/Comparable.hpp>
#include <java/lang/Enum.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace graphics {

	class Paint;
	namespace Paint_ {

		class Style;
		class Style
			: public object<Style>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			explicit Style(jobject jobj)
			: object<Style>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< android::graphics::Paint_::Style >, 1> > values();
			static local_ref< android::graphics::Paint_::Style > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::graphics::Paint_::Style > > FILL;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::graphics::Paint_::Style > > FILL_AND_STROKE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::graphics::Paint_::Style > > STROKE;
		}; //class Style

		class FontMetricsInt;
		class FontMetricsInt
			: public object<FontMetricsInt>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)

			explicit FontMetricsInt(jobject jobj)
			: object<FontMetricsInt>(jobj)
			, top(jobj)
			, ascent(jobj)
			, descent(jobj)
			, bottom(jobj)
			, leading(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			FontMetricsInt();
			local_ref< java::lang::String > toString();

			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > top;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > ascent;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > descent;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > bottom;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > leading;
		}; //class FontMetricsInt

		class Align;
		class Align
			: public object<Align>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			explicit Align(jobject jobj)
			: object<Align>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< android::graphics::Paint_::Align >, 1> > values();
			static local_ref< android::graphics::Paint_::Align > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::graphics::Paint_::Align > > CENTER;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::graphics::Paint_::Align > > LEFT;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::graphics::Paint_::Align > > RIGHT;
		}; //class Align

		class Cap;
		class Cap
			: public object<Cap>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			explicit Cap(jobject jobj)
			: object<Cap>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< android::graphics::Paint_::Cap >, 1> > values();
			static local_ref< android::graphics::Paint_::Cap > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::graphics::Paint_::Cap > > BUTT;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::graphics::Paint_::Cap > > ROUND;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::graphics::Paint_::Cap > > SQUARE;
		}; //class Cap

		class Join;
		class Join
			: public object<Join>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			explicit Join(jobject jobj)
			: object<Join>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< android::graphics::Paint_::Join >, 1> > values();
			static local_ref< android::graphics::Paint_::Join > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::graphics::Paint_::Join > > BEVEL;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::graphics::Paint_::Join > > MITER;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::graphics::Paint_::Join > > ROUND;
		}; //class Join

		class FontMetrics;
		class FontMetrics
			: public object<FontMetrics>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)

			explicit FontMetrics(jobject jobj)
			: object<FontMetrics>(jobj)
			, top(jobj)
			, ascent(jobj)
			, descent(jobj)
			, bottom(jobj)
			, leading(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			FontMetrics();

			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jfloat > top;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jfloat > ascent;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jfloat > descent;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jfloat > bottom;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jfloat > leading;
		}; //class FontMetrics

	} //namespace Paint_

	class Paint
		: public object<Paint>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)
		J2CPP_DECLARE_METHOD(77)
		J2CPP_DECLARE_METHOD(78)
		J2CPP_DECLARE_METHOD(79)
		J2CPP_DECLARE_METHOD(80)
		J2CPP_DECLARE_METHOD(81)
		J2CPP_DECLARE_METHOD(82)
		J2CPP_DECLARE_METHOD(83)
		J2CPP_DECLARE_METHOD(84)
		J2CPP_DECLARE_METHOD(85)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)
		J2CPP_DECLARE_FIELD(8)

		typedef Paint_::Style Style;
		typedef Paint_::FontMetricsInt FontMetricsInt;
		typedef Paint_::Align Align;
		typedef Paint_::Cap Cap;
		typedef Paint_::Join Join;
		typedef Paint_::FontMetrics FontMetrics;

		explicit Paint(jobject jobj)
		: object<Paint>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		Paint();
		Paint(jint);
		Paint(local_ref< android::graphics::Paint > const&);
		void reset();
		void set(local_ref< android::graphics::Paint >  const&);
		jint getFlags();
		void setFlags(jint);
		jboolean isAntiAlias();
		void setAntiAlias(jboolean);
		jboolean isDither();
		void setDither(jboolean);
		jboolean isLinearText();
		void setLinearText(jboolean);
		jboolean isSubpixelText();
		void setSubpixelText(jboolean);
		jboolean isUnderlineText();
		void setUnderlineText(jboolean);
		jboolean isStrikeThruText();
		void setStrikeThruText(jboolean);
		jboolean isFakeBoldText();
		void setFakeBoldText(jboolean);
		jboolean isFilterBitmap();
		void setFilterBitmap(jboolean);
		local_ref< android::graphics::Paint_::Style > getStyle();
		void setStyle(local_ref< android::graphics::Paint_::Style >  const&);
		jint getColor();
		void setColor(jint);
		jint getAlpha();
		void setAlpha(jint);
		void setARGB(jint, jint, jint, jint);
		jfloat getStrokeWidth();
		void setStrokeWidth(jfloat);
		jfloat getStrokeMiter();
		void setStrokeMiter(jfloat);
		local_ref< android::graphics::Paint_::Cap > getStrokeCap();
		void setStrokeCap(local_ref< android::graphics::Paint_::Cap >  const&);
		local_ref< android::graphics::Paint_::Join > getStrokeJoin();
		void setStrokeJoin(local_ref< android::graphics::Paint_::Join >  const&);
		jboolean getFillPath(local_ref< android::graphics::Path >  const&, local_ref< android::graphics::Path >  const&);
		local_ref< android::graphics::Shader > getShader();
		local_ref< android::graphics::Shader > setShader(local_ref< android::graphics::Shader >  const&);
		local_ref< android::graphics::ColorFilter > getColorFilter();
		local_ref< android::graphics::ColorFilter > setColorFilter(local_ref< android::graphics::ColorFilter >  const&);
		local_ref< android::graphics::Xfermode > getXfermode();
		local_ref< android::graphics::Xfermode > setXfermode(local_ref< android::graphics::Xfermode >  const&);
		local_ref< android::graphics::PathEffect > getPathEffect();
		local_ref< android::graphics::PathEffect > setPathEffect(local_ref< android::graphics::PathEffect >  const&);
		local_ref< android::graphics::MaskFilter > getMaskFilter();
		local_ref< android::graphics::MaskFilter > setMaskFilter(local_ref< android::graphics::MaskFilter >  const&);
		local_ref< android::graphics::Typeface > getTypeface();
		local_ref< android::graphics::Typeface > setTypeface(local_ref< android::graphics::Typeface >  const&);
		local_ref< android::graphics::Rasterizer > getRasterizer();
		local_ref< android::graphics::Rasterizer > setRasterizer(local_ref< android::graphics::Rasterizer >  const&);
		void setShadowLayer(jfloat, jfloat, jfloat, jint);
		void clearShadowLayer();
		local_ref< android::graphics::Paint_::Align > getTextAlign();
		void setTextAlign(local_ref< android::graphics::Paint_::Align >  const&);
		jfloat getTextSize();
		void setTextSize(jfloat);
		jfloat getTextScaleX();
		void setTextScaleX(jfloat);
		jfloat getTextSkewX();
		void setTextSkewX(jfloat);
		jfloat ascent();
		jfloat descent();
		jfloat getFontMetrics(local_ref< android::graphics::Paint_::FontMetrics >  const&);
		local_ref< android::graphics::Paint_::FontMetrics > getFontMetrics();
		jint getFontMetricsInt(local_ref< android::graphics::Paint_::FontMetricsInt >  const&);
		local_ref< android::graphics::Paint_::FontMetricsInt > getFontMetricsInt();
		jfloat getFontSpacing();
		jfloat measureText(local_ref< array<jchar,1> >  const&, jint, jint);
		jfloat measureText(local_ref< java::lang::String >  const&, jint, jint);
		jfloat measureText(local_ref< java::lang::String >  const&);
		jfloat measureText(local_ref< java::lang::CharSequence >  const&, jint, jint);
		jint breakText(local_ref< array<jchar,1> >  const&, jint, jint, jfloat, local_ref< array<jfloat,1> >  const&);
		jint breakText(local_ref< java::lang::CharSequence >  const&, jint, jint, jboolean, jfloat, local_ref< array<jfloat,1> >  const&);
		jint breakText(local_ref< java::lang::String >  const&, jboolean, jfloat, local_ref< array<jfloat,1> >  const&);
		jint getTextWidths(local_ref< array<jchar,1> >  const&, jint, jint, local_ref< array<jfloat,1> >  const&);
		jint getTextWidths(local_ref< java::lang::CharSequence >  const&, jint, jint, local_ref< array<jfloat,1> >  const&);
		jint getTextWidths(local_ref< java::lang::String >  const&, jint, jint, local_ref< array<jfloat,1> >  const&);
		jint getTextWidths(local_ref< java::lang::String >  const&, local_ref< array<jfloat,1> >  const&);
		void getTextPath(local_ref< array<jchar,1> >  const&, jint, jint, jfloat, jfloat, local_ref< android::graphics::Path >  const&);
		void getTextPath(local_ref< java::lang::String >  const&, jint, jint, jfloat, jfloat, local_ref< android::graphics::Path >  const&);
		void getTextBounds(local_ref< java::lang::String >  const&, jint, jint, local_ref< android::graphics::Rect >  const&);
		void getTextBounds(local_ref< array<jchar,1> >  const&, jint, jint, local_ref< android::graphics::Rect >  const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > ANTI_ALIAS_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > FILTER_BITMAP_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > DITHER_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > UNDERLINE_TEXT_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > STRIKE_THRU_TEXT_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jint > FAKE_BOLD_TEXT_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), jint > LINEAR_TEXT_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), jint > SUBPIXEL_TEXT_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), jint > DEV_KERN_TEXT_FLAG;
	}; //class Paint

} //namespace graphics
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_PAINT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_PAINT_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_PAINT_HPP_IMPL

namespace j2cpp {




android::graphics::Paint_::Style::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

android::graphics::Paint_::Style::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::graphics::Paint_::Style::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

android::graphics::Paint_::Style::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< android::graphics::Paint_::Style >, 1> > android::graphics::Paint_::Style::values()
{
	return call_static_method<
		android::graphics::Paint_::Style::J2CPP_CLASS_NAME,
		android::graphics::Paint_::Style::J2CPP_METHOD_NAME(0),
		android::graphics::Paint_::Style::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< android::graphics::Paint_::Style >, 1> >
	>();
}

local_ref< android::graphics::Paint_::Style > android::graphics::Paint_::Style::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::graphics::Paint_::Style::J2CPP_CLASS_NAME,
		android::graphics::Paint_::Style::J2CPP_METHOD_NAME(1),
		android::graphics::Paint_::Style::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::graphics::Paint_::Style >
	>(a0);
}




static_field<
	android::graphics::Paint_::Style::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Style::J2CPP_FIELD_NAME(0),
	android::graphics::Paint_::Style::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::graphics::Paint_::Style >
> android::graphics::Paint_::Style::FILL;

static_field<
	android::graphics::Paint_::Style::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Style::J2CPP_FIELD_NAME(1),
	android::graphics::Paint_::Style::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::graphics::Paint_::Style >
> android::graphics::Paint_::Style::FILL_AND_STROKE;

static_field<
	android::graphics::Paint_::Style::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Style::J2CPP_FIELD_NAME(2),
	android::graphics::Paint_::Style::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::graphics::Paint_::Style >
> android::graphics::Paint_::Style::STROKE;


J2CPP_DEFINE_CLASS(android::graphics::Paint_::Style,"android/graphics/Paint$Style")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Style,0,"values","()[android.graphics.Paint.Style")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Style,1,"valueOf","(Ljava/lang/String;)Landroid/graphics/Paint$Style;")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Style,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Style,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Style,0,"FILL","Landroid/graphics/Paint$Style;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Style,1,"FILL_AND_STROKE","Landroid/graphics/Paint$Style;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Style,2,"STROKE","Landroid/graphics/Paint$Style;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Style,3,"$VALUES","[android.graphics.Paint.Style")


android::graphics::Paint_::FontMetricsInt::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::graphics::Paint_::FontMetricsInt::FontMetricsInt()
: object<android::graphics::Paint_::FontMetricsInt>(
	call_new_object<
		android::graphics::Paint_::FontMetricsInt::J2CPP_CLASS_NAME,
		android::graphics::Paint_::FontMetricsInt::J2CPP_METHOD_NAME(0),
		android::graphics::Paint_::FontMetricsInt::J2CPP_METHOD_SIGNATURE(0)
	>()
)
, top(get_jobject())
, ascent(get_jobject())
, descent(get_jobject())
, bottom(get_jobject())
, leading(get_jobject())
{
}


local_ref< java::lang::String > android::graphics::Paint_::FontMetricsInt::toString()
{
	return call_method<
		android::graphics::Paint_::FontMetricsInt::J2CPP_CLASS_NAME,
		android::graphics::Paint_::FontMetricsInt::J2CPP_METHOD_NAME(1),
		android::graphics::Paint_::FontMetricsInt::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(get_jobject());
}



J2CPP_DEFINE_CLASS(android::graphics::Paint_::FontMetricsInt,"android/graphics/Paint$FontMetricsInt")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::FontMetricsInt,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::FontMetricsInt,1,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::FontMetricsInt,0,"top","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::FontMetricsInt,1,"ascent","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::FontMetricsInt,2,"descent","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::FontMetricsInt,3,"bottom","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::FontMetricsInt,4,"leading","I")


android::graphics::Paint_::Align::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

android::graphics::Paint_::Align::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::graphics::Paint_::Align::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

android::graphics::Paint_::Align::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< android::graphics::Paint_::Align >, 1> > android::graphics::Paint_::Align::values()
{
	return call_static_method<
		android::graphics::Paint_::Align::J2CPP_CLASS_NAME,
		android::graphics::Paint_::Align::J2CPP_METHOD_NAME(0),
		android::graphics::Paint_::Align::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< android::graphics::Paint_::Align >, 1> >
	>();
}

local_ref< android::graphics::Paint_::Align > android::graphics::Paint_::Align::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::graphics::Paint_::Align::J2CPP_CLASS_NAME,
		android::graphics::Paint_::Align::J2CPP_METHOD_NAME(1),
		android::graphics::Paint_::Align::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::graphics::Paint_::Align >
	>(a0);
}




static_field<
	android::graphics::Paint_::Align::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Align::J2CPP_FIELD_NAME(0),
	android::graphics::Paint_::Align::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::graphics::Paint_::Align >
> android::graphics::Paint_::Align::CENTER;

static_field<
	android::graphics::Paint_::Align::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Align::J2CPP_FIELD_NAME(1),
	android::graphics::Paint_::Align::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::graphics::Paint_::Align >
> android::graphics::Paint_::Align::LEFT;

static_field<
	android::graphics::Paint_::Align::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Align::J2CPP_FIELD_NAME(2),
	android::graphics::Paint_::Align::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::graphics::Paint_::Align >
> android::graphics::Paint_::Align::RIGHT;


J2CPP_DEFINE_CLASS(android::graphics::Paint_::Align,"android/graphics/Paint$Align")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Align,0,"values","()[android.graphics.Paint.Align")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Align,1,"valueOf","(Ljava/lang/String;)Landroid/graphics/Paint$Align;")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Align,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Align,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Align,0,"CENTER","Landroid/graphics/Paint$Align;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Align,1,"LEFT","Landroid/graphics/Paint$Align;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Align,2,"RIGHT","Landroid/graphics/Paint$Align;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Align,3,"$VALUES","[android.graphics.Paint.Align")


android::graphics::Paint_::Cap::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

android::graphics::Paint_::Cap::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::graphics::Paint_::Cap::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

android::graphics::Paint_::Cap::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< android::graphics::Paint_::Cap >, 1> > android::graphics::Paint_::Cap::values()
{
	return call_static_method<
		android::graphics::Paint_::Cap::J2CPP_CLASS_NAME,
		android::graphics::Paint_::Cap::J2CPP_METHOD_NAME(0),
		android::graphics::Paint_::Cap::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< android::graphics::Paint_::Cap >, 1> >
	>();
}

local_ref< android::graphics::Paint_::Cap > android::graphics::Paint_::Cap::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::graphics::Paint_::Cap::J2CPP_CLASS_NAME,
		android::graphics::Paint_::Cap::J2CPP_METHOD_NAME(1),
		android::graphics::Paint_::Cap::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::graphics::Paint_::Cap >
	>(a0);
}




static_field<
	android::graphics::Paint_::Cap::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Cap::J2CPP_FIELD_NAME(0),
	android::graphics::Paint_::Cap::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::graphics::Paint_::Cap >
> android::graphics::Paint_::Cap::BUTT;

static_field<
	android::graphics::Paint_::Cap::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Cap::J2CPP_FIELD_NAME(1),
	android::graphics::Paint_::Cap::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::graphics::Paint_::Cap >
> android::graphics::Paint_::Cap::ROUND;

static_field<
	android::graphics::Paint_::Cap::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Cap::J2CPP_FIELD_NAME(2),
	android::graphics::Paint_::Cap::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::graphics::Paint_::Cap >
> android::graphics::Paint_::Cap::SQUARE;


J2CPP_DEFINE_CLASS(android::graphics::Paint_::Cap,"android/graphics/Paint$Cap")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Cap,0,"values","()[android.graphics.Paint.Cap")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Cap,1,"valueOf","(Ljava/lang/String;)Landroid/graphics/Paint$Cap;")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Cap,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Cap,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Cap,0,"BUTT","Landroid/graphics/Paint$Cap;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Cap,1,"ROUND","Landroid/graphics/Paint$Cap;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Cap,2,"SQUARE","Landroid/graphics/Paint$Cap;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Cap,3,"$VALUES","[android.graphics.Paint.Cap")


android::graphics::Paint_::Join::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

android::graphics::Paint_::Join::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::graphics::Paint_::Join::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

android::graphics::Paint_::Join::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< android::graphics::Paint_::Join >, 1> > android::graphics::Paint_::Join::values()
{
	return call_static_method<
		android::graphics::Paint_::Join::J2CPP_CLASS_NAME,
		android::graphics::Paint_::Join::J2CPP_METHOD_NAME(0),
		android::graphics::Paint_::Join::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< android::graphics::Paint_::Join >, 1> >
	>();
}

local_ref< android::graphics::Paint_::Join > android::graphics::Paint_::Join::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::graphics::Paint_::Join::J2CPP_CLASS_NAME,
		android::graphics::Paint_::Join::J2CPP_METHOD_NAME(1),
		android::graphics::Paint_::Join::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::graphics::Paint_::Join >
	>(a0);
}




static_field<
	android::graphics::Paint_::Join::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Join::J2CPP_FIELD_NAME(0),
	android::graphics::Paint_::Join::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::graphics::Paint_::Join >
> android::graphics::Paint_::Join::BEVEL;

static_field<
	android::graphics::Paint_::Join::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Join::J2CPP_FIELD_NAME(1),
	android::graphics::Paint_::Join::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::graphics::Paint_::Join >
> android::graphics::Paint_::Join::MITER;

static_field<
	android::graphics::Paint_::Join::J2CPP_CLASS_NAME,
	android::graphics::Paint_::Join::J2CPP_FIELD_NAME(2),
	android::graphics::Paint_::Join::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::graphics::Paint_::Join >
> android::graphics::Paint_::Join::ROUND;


J2CPP_DEFINE_CLASS(android::graphics::Paint_::Join,"android/graphics/Paint$Join")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Join,0,"values","()[android.graphics.Paint.Join")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Join,1,"valueOf","(Ljava/lang/String;)Landroid/graphics/Paint$Join;")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Join,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::Join,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Join,0,"BEVEL","Landroid/graphics/Paint$Join;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Join,1,"MITER","Landroid/graphics/Paint$Join;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Join,2,"ROUND","Landroid/graphics/Paint$Join;")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::Join,3,"$VALUES","[android.graphics.Paint.Join")


android::graphics::Paint_::FontMetrics::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::graphics::Paint_::FontMetrics::FontMetrics()
: object<android::graphics::Paint_::FontMetrics>(
	call_new_object<
		android::graphics::Paint_::FontMetrics::J2CPP_CLASS_NAME,
		android::graphics::Paint_::FontMetrics::J2CPP_METHOD_NAME(0),
		android::graphics::Paint_::FontMetrics::J2CPP_METHOD_SIGNATURE(0)
	>()
)
, top(get_jobject())
, ascent(get_jobject())
, descent(get_jobject())
, bottom(get_jobject())
, leading(get_jobject())
{
}




J2CPP_DEFINE_CLASS(android::graphics::Paint_::FontMetrics,"android/graphics/Paint$FontMetrics")
J2CPP_DEFINE_METHOD(android::graphics::Paint_::FontMetrics,0,"<init>","()V")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::FontMetrics,0,"top","F")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::FontMetrics,1,"ascent","F")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::FontMetrics,2,"descent","F")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::FontMetrics,3,"bottom","F")
J2CPP_DEFINE_FIELD(android::graphics::Paint_::FontMetrics,4,"leading","F")



android::graphics::Paint::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::graphics::Paint::Paint()
: object<android::graphics::Paint>(
	call_new_object<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(0),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



android::graphics::Paint::Paint(jint a0)
: object<android::graphics::Paint>(
	call_new_object<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(1),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



android::graphics::Paint::Paint(local_ref< android::graphics::Paint > const &a0)
: object<android::graphics::Paint>(
	call_new_object<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(2),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(2)
	>(a0)
)
{
}


void android::graphics::Paint::reset()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(3),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject());
}

void android::graphics::Paint::set(local_ref< android::graphics::Paint > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(4),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

jint android::graphics::Paint::getFlags()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(5),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(5), 
		jint
	>(get_jobject());
}

void android::graphics::Paint::setFlags(jint a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(6),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0);
}

jboolean android::graphics::Paint::isAntiAlias()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(7),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject());
}

void android::graphics::Paint::setAntiAlias(jboolean a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(8),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0);
}

jboolean android::graphics::Paint::isDither()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(9),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(get_jobject());
}

void android::graphics::Paint::setDither(jboolean a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(10),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(get_jobject(), a0);
}

jboolean android::graphics::Paint::isLinearText()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(11),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(11), 
		jboolean
	>(get_jobject());
}

void android::graphics::Paint::setLinearText(jboolean a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(12),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(12), 
		void
	>(get_jobject(), a0);
}

jboolean android::graphics::Paint::isSubpixelText()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(13),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(get_jobject());
}

void android::graphics::Paint::setSubpixelText(jboolean a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(14),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(14), 
		void
	>(get_jobject(), a0);
}

jboolean android::graphics::Paint::isUnderlineText()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(15),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(15), 
		jboolean
	>(get_jobject());
}

void android::graphics::Paint::setUnderlineText(jboolean a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(16),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(16), 
		void
	>(get_jobject(), a0);
}

jboolean android::graphics::Paint::isStrikeThruText()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(17),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(17), 
		jboolean
	>(get_jobject());
}

void android::graphics::Paint::setStrikeThruText(jboolean a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(18),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(18), 
		void
	>(get_jobject(), a0);
}

jboolean android::graphics::Paint::isFakeBoldText()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(19),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(19), 
		jboolean
	>(get_jobject());
}

void android::graphics::Paint::setFakeBoldText(jboolean a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(20),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(20), 
		void
	>(get_jobject(), a0);
}

jboolean android::graphics::Paint::isFilterBitmap()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(21),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(21), 
		jboolean
	>(get_jobject());
}

void android::graphics::Paint::setFilterBitmap(jboolean a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(22),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(22), 
		void
	>(get_jobject(), a0);
}

local_ref< android::graphics::Paint_::Style > android::graphics::Paint::getStyle()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(23),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(23), 
		local_ref< android::graphics::Paint_::Style >
	>(get_jobject());
}

void android::graphics::Paint::setStyle(local_ref< android::graphics::Paint_::Style > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(24),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(24), 
		void
	>(get_jobject(), a0);
}

jint android::graphics::Paint::getColor()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(25),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(25), 
		jint
	>(get_jobject());
}

void android::graphics::Paint::setColor(jint a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(26),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(26), 
		void
	>(get_jobject(), a0);
}

jint android::graphics::Paint::getAlpha()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(27),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(27), 
		jint
	>(get_jobject());
}

void android::graphics::Paint::setAlpha(jint a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(28),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(28), 
		void
	>(get_jobject(), a0);
}

void android::graphics::Paint::setARGB(jint a0, jint a1, jint a2, jint a3)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(29),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(29), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

jfloat android::graphics::Paint::getStrokeWidth()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(30),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(30), 
		jfloat
	>(get_jobject());
}

void android::graphics::Paint::setStrokeWidth(jfloat a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(31),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(31), 
		void
	>(get_jobject(), a0);
}

jfloat android::graphics::Paint::getStrokeMiter()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(32),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(32), 
		jfloat
	>(get_jobject());
}

void android::graphics::Paint::setStrokeMiter(jfloat a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(33),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(33), 
		void
	>(get_jobject(), a0);
}

local_ref< android::graphics::Paint_::Cap > android::graphics::Paint::getStrokeCap()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(34),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(34), 
		local_ref< android::graphics::Paint_::Cap >
	>(get_jobject());
}

void android::graphics::Paint::setStrokeCap(local_ref< android::graphics::Paint_::Cap > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(35),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(35), 
		void
	>(get_jobject(), a0);
}

local_ref< android::graphics::Paint_::Join > android::graphics::Paint::getStrokeJoin()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(36),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(36), 
		local_ref< android::graphics::Paint_::Join >
	>(get_jobject());
}

void android::graphics::Paint::setStrokeJoin(local_ref< android::graphics::Paint_::Join > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(37),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(37), 
		void
	>(get_jobject(), a0);
}

jboolean android::graphics::Paint::getFillPath(local_ref< android::graphics::Path > const &a0, local_ref< android::graphics::Path > const &a1)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(38),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(38), 
		jboolean
	>(get_jobject(), a0, a1);
}

local_ref< android::graphics::Shader > android::graphics::Paint::getShader()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(39),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(39), 
		local_ref< android::graphics::Shader >
	>(get_jobject());
}

local_ref< android::graphics::Shader > android::graphics::Paint::setShader(local_ref< android::graphics::Shader > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(40),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(40), 
		local_ref< android::graphics::Shader >
	>(get_jobject(), a0);
}

local_ref< android::graphics::ColorFilter > android::graphics::Paint::getColorFilter()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(41),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(41), 
		local_ref< android::graphics::ColorFilter >
	>(get_jobject());
}

local_ref< android::graphics::ColorFilter > android::graphics::Paint::setColorFilter(local_ref< android::graphics::ColorFilter > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(42),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(42), 
		local_ref< android::graphics::ColorFilter >
	>(get_jobject(), a0);
}

local_ref< android::graphics::Xfermode > android::graphics::Paint::getXfermode()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(43),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(43), 
		local_ref< android::graphics::Xfermode >
	>(get_jobject());
}

local_ref< android::graphics::Xfermode > android::graphics::Paint::setXfermode(local_ref< android::graphics::Xfermode > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(44),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(44), 
		local_ref< android::graphics::Xfermode >
	>(get_jobject(), a0);
}

local_ref< android::graphics::PathEffect > android::graphics::Paint::getPathEffect()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(45),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(45), 
		local_ref< android::graphics::PathEffect >
	>(get_jobject());
}

local_ref< android::graphics::PathEffect > android::graphics::Paint::setPathEffect(local_ref< android::graphics::PathEffect > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(46),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(46), 
		local_ref< android::graphics::PathEffect >
	>(get_jobject(), a0);
}

local_ref< android::graphics::MaskFilter > android::graphics::Paint::getMaskFilter()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(47),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(47), 
		local_ref< android::graphics::MaskFilter >
	>(get_jobject());
}

local_ref< android::graphics::MaskFilter > android::graphics::Paint::setMaskFilter(local_ref< android::graphics::MaskFilter > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(48),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(48), 
		local_ref< android::graphics::MaskFilter >
	>(get_jobject(), a0);
}

local_ref< android::graphics::Typeface > android::graphics::Paint::getTypeface()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(49),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(49), 
		local_ref< android::graphics::Typeface >
	>(get_jobject());
}

local_ref< android::graphics::Typeface > android::graphics::Paint::setTypeface(local_ref< android::graphics::Typeface > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(50),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(50), 
		local_ref< android::graphics::Typeface >
	>(get_jobject(), a0);
}

local_ref< android::graphics::Rasterizer > android::graphics::Paint::getRasterizer()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(51),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(51), 
		local_ref< android::graphics::Rasterizer >
	>(get_jobject());
}

local_ref< android::graphics::Rasterizer > android::graphics::Paint::setRasterizer(local_ref< android::graphics::Rasterizer > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(52),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(52), 
		local_ref< android::graphics::Rasterizer >
	>(get_jobject(), a0);
}

void android::graphics::Paint::setShadowLayer(jfloat a0, jfloat a1, jfloat a2, jint a3)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(53),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(53), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

void android::graphics::Paint::clearShadowLayer()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(54),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(54), 
		void
	>(get_jobject());
}

local_ref< android::graphics::Paint_::Align > android::graphics::Paint::getTextAlign()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(55),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(55), 
		local_ref< android::graphics::Paint_::Align >
	>(get_jobject());
}

void android::graphics::Paint::setTextAlign(local_ref< android::graphics::Paint_::Align > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(56),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(56), 
		void
	>(get_jobject(), a0);
}

jfloat android::graphics::Paint::getTextSize()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(57),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(57), 
		jfloat
	>(get_jobject());
}

void android::graphics::Paint::setTextSize(jfloat a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(58),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(58), 
		void
	>(get_jobject(), a0);
}

jfloat android::graphics::Paint::getTextScaleX()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(59),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(59), 
		jfloat
	>(get_jobject());
}

void android::graphics::Paint::setTextScaleX(jfloat a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(60),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(60), 
		void
	>(get_jobject(), a0);
}

jfloat android::graphics::Paint::getTextSkewX()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(61),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(61), 
		jfloat
	>(get_jobject());
}

void android::graphics::Paint::setTextSkewX(jfloat a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(62),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(62), 
		void
	>(get_jobject(), a0);
}

jfloat android::graphics::Paint::ascent()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(63),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(63), 
		jfloat
	>(get_jobject());
}

jfloat android::graphics::Paint::descent()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(64),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(64), 
		jfloat
	>(get_jobject());
}

jfloat android::graphics::Paint::getFontMetrics(local_ref< android::graphics::Paint_::FontMetrics > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(65),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(65), 
		jfloat
	>(get_jobject(), a0);
}

local_ref< android::graphics::Paint_::FontMetrics > android::graphics::Paint::getFontMetrics()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(66),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(66), 
		local_ref< android::graphics::Paint_::FontMetrics >
	>(get_jobject());
}

jint android::graphics::Paint::getFontMetricsInt(local_ref< android::graphics::Paint_::FontMetricsInt > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(67),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(67), 
		jint
	>(get_jobject(), a0);
}

local_ref< android::graphics::Paint_::FontMetricsInt > android::graphics::Paint::getFontMetricsInt()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(68),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(68), 
		local_ref< android::graphics::Paint_::FontMetricsInt >
	>(get_jobject());
}

jfloat android::graphics::Paint::getFontSpacing()
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(69),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(69), 
		jfloat
	>(get_jobject());
}

jfloat android::graphics::Paint::measureText(local_ref< array<jchar,1> > const &a0, jint a1, jint a2)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(70),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(70), 
		jfloat
	>(get_jobject(), a0, a1, a2);
}

jfloat android::graphics::Paint::measureText(local_ref< java::lang::String > const &a0, jint a1, jint a2)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(71),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(71), 
		jfloat
	>(get_jobject(), a0, a1, a2);
}

jfloat android::graphics::Paint::measureText(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(72),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(72), 
		jfloat
	>(get_jobject(), a0);
}

jfloat android::graphics::Paint::measureText(local_ref< java::lang::CharSequence > const &a0, jint a1, jint a2)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(73),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(73), 
		jfloat
	>(get_jobject(), a0, a1, a2);
}

jint android::graphics::Paint::breakText(local_ref< array<jchar,1> > const &a0, jint a1, jint a2, jfloat a3, local_ref< array<jfloat,1> > const &a4)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(74),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(74), 
		jint
	>(get_jobject(), a0, a1, a2, a3, a4);
}

jint android::graphics::Paint::breakText(local_ref< java::lang::CharSequence > const &a0, jint a1, jint a2, jboolean a3, jfloat a4, local_ref< array<jfloat,1> > const &a5)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(75),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(75), 
		jint
	>(get_jobject(), a0, a1, a2, a3, a4, a5);
}

jint android::graphics::Paint::breakText(local_ref< java::lang::String > const &a0, jboolean a1, jfloat a2, local_ref< array<jfloat,1> > const &a3)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(76),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(76), 
		jint
	>(get_jobject(), a0, a1, a2, a3);
}

jint android::graphics::Paint::getTextWidths(local_ref< array<jchar,1> > const &a0, jint a1, jint a2, local_ref< array<jfloat,1> > const &a3)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(77),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(77), 
		jint
	>(get_jobject(), a0, a1, a2, a3);
}

jint android::graphics::Paint::getTextWidths(local_ref< java::lang::CharSequence > const &a0, jint a1, jint a2, local_ref< array<jfloat,1> > const &a3)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(78),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(78), 
		jint
	>(get_jobject(), a0, a1, a2, a3);
}

jint android::graphics::Paint::getTextWidths(local_ref< java::lang::String > const &a0, jint a1, jint a2, local_ref< array<jfloat,1> > const &a3)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(79),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(79), 
		jint
	>(get_jobject(), a0, a1, a2, a3);
}

jint android::graphics::Paint::getTextWidths(local_ref< java::lang::String > const &a0, local_ref< array<jfloat,1> > const &a1)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(80),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(80), 
		jint
	>(get_jobject(), a0, a1);
}

void android::graphics::Paint::getTextPath(local_ref< array<jchar,1> > const &a0, jint a1, jint a2, jfloat a3, jfloat a4, local_ref< android::graphics::Path > const &a5)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(81),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(81), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4, a5);
}

void android::graphics::Paint::getTextPath(local_ref< java::lang::String > const &a0, jint a1, jint a2, jfloat a3, jfloat a4, local_ref< android::graphics::Path > const &a5)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(82),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(82), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4, a5);
}

void android::graphics::Paint::getTextBounds(local_ref< java::lang::String > const &a0, jint a1, jint a2, local_ref< android::graphics::Rect > const &a3)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(83),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(83), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

void android::graphics::Paint::getTextBounds(local_ref< array<jchar,1> > const &a0, jint a1, jint a2, local_ref< android::graphics::Rect > const &a3)
{
	return call_method<
		android::graphics::Paint::J2CPP_CLASS_NAME,
		android::graphics::Paint::J2CPP_METHOD_NAME(84),
		android::graphics::Paint::J2CPP_METHOD_SIGNATURE(84), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}



static_field<
	android::graphics::Paint::J2CPP_CLASS_NAME,
	android::graphics::Paint::J2CPP_FIELD_NAME(0),
	android::graphics::Paint::J2CPP_FIELD_SIGNATURE(0),
	jint
> android::graphics::Paint::ANTI_ALIAS_FLAG;

static_field<
	android::graphics::Paint::J2CPP_CLASS_NAME,
	android::graphics::Paint::J2CPP_FIELD_NAME(1),
	android::graphics::Paint::J2CPP_FIELD_SIGNATURE(1),
	jint
> android::graphics::Paint::FILTER_BITMAP_FLAG;

static_field<
	android::graphics::Paint::J2CPP_CLASS_NAME,
	android::graphics::Paint::J2CPP_FIELD_NAME(2),
	android::graphics::Paint::J2CPP_FIELD_SIGNATURE(2),
	jint
> android::graphics::Paint::DITHER_FLAG;

static_field<
	android::graphics::Paint::J2CPP_CLASS_NAME,
	android::graphics::Paint::J2CPP_FIELD_NAME(3),
	android::graphics::Paint::J2CPP_FIELD_SIGNATURE(3),
	jint
> android::graphics::Paint::UNDERLINE_TEXT_FLAG;

static_field<
	android::graphics::Paint::J2CPP_CLASS_NAME,
	android::graphics::Paint::J2CPP_FIELD_NAME(4),
	android::graphics::Paint::J2CPP_FIELD_SIGNATURE(4),
	jint
> android::graphics::Paint::STRIKE_THRU_TEXT_FLAG;

static_field<
	android::graphics::Paint::J2CPP_CLASS_NAME,
	android::graphics::Paint::J2CPP_FIELD_NAME(5),
	android::graphics::Paint::J2CPP_FIELD_SIGNATURE(5),
	jint
> android::graphics::Paint::FAKE_BOLD_TEXT_FLAG;

static_field<
	android::graphics::Paint::J2CPP_CLASS_NAME,
	android::graphics::Paint::J2CPP_FIELD_NAME(6),
	android::graphics::Paint::J2CPP_FIELD_SIGNATURE(6),
	jint
> android::graphics::Paint::LINEAR_TEXT_FLAG;

static_field<
	android::graphics::Paint::J2CPP_CLASS_NAME,
	android::graphics::Paint::J2CPP_FIELD_NAME(7),
	android::graphics::Paint::J2CPP_FIELD_SIGNATURE(7),
	jint
> android::graphics::Paint::SUBPIXEL_TEXT_FLAG;

static_field<
	android::graphics::Paint::J2CPP_CLASS_NAME,
	android::graphics::Paint::J2CPP_FIELD_NAME(8),
	android::graphics::Paint::J2CPP_FIELD_SIGNATURE(8),
	jint
> android::graphics::Paint::DEV_KERN_TEXT_FLAG;


J2CPP_DEFINE_CLASS(android::graphics::Paint,"android/graphics/Paint")
J2CPP_DEFINE_METHOD(android::graphics::Paint,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,1,"<init>","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,2,"<init>","(Landroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,3,"reset","()V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,4,"set","(Landroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,5,"getFlags","()I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,6,"setFlags","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,7,"isAntiAlias","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Paint,8,"setAntiAlias","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,9,"isDither","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Paint,10,"setDither","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,11,"isLinearText","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Paint,12,"setLinearText","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,13,"isSubpixelText","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Paint,14,"setSubpixelText","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,15,"isUnderlineText","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Paint,16,"setUnderlineText","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,17,"isStrikeThruText","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Paint,18,"setStrikeThruText","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,19,"isFakeBoldText","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Paint,20,"setFakeBoldText","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,21,"isFilterBitmap","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Paint,22,"setFilterBitmap","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,23,"getStyle","()Landroid/graphics/Paint$Style;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,24,"setStyle","(Landroid/graphics/Paint$Style;)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,25,"getColor","()I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,26,"setColor","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,27,"getAlpha","()I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,28,"setAlpha","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,29,"setARGB","(IIII)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,30,"getStrokeWidth","()F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,31,"setStrokeWidth","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,32,"getStrokeMiter","()F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,33,"setStrokeMiter","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,34,"getStrokeCap","()Landroid/graphics/Paint$Cap;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,35,"setStrokeCap","(Landroid/graphics/Paint$Cap;)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,36,"getStrokeJoin","()Landroid/graphics/Paint$Join;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,37,"setStrokeJoin","(Landroid/graphics/Paint$Join;)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,38,"getFillPath","(Landroid/graphics/Path;Landroid/graphics/Path;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Paint,39,"getShader","()Landroid/graphics/Shader;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,40,"setShader","(Landroid/graphics/Shader;)Landroid/graphics/Shader;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,41,"getColorFilter","()Landroid/graphics/ColorFilter;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,42,"setColorFilter","(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,43,"getXfermode","()Landroid/graphics/Xfermode;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,44,"setXfermode","(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,45,"getPathEffect","()Landroid/graphics/PathEffect;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,46,"setPathEffect","(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,47,"getMaskFilter","()Landroid/graphics/MaskFilter;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,48,"setMaskFilter","(Landroid/graphics/MaskFilter;)Landroid/graphics/MaskFilter;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,49,"getTypeface","()Landroid/graphics/Typeface;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,50,"setTypeface","(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,51,"getRasterizer","()Landroid/graphics/Rasterizer;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,52,"setRasterizer","(Landroid/graphics/Rasterizer;)Landroid/graphics/Rasterizer;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,53,"setShadowLayer","(FFFI)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,54,"clearShadowLayer","()V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,55,"getTextAlign","()Landroid/graphics/Paint$Align;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,56,"setTextAlign","(Landroid/graphics/Paint$Align;)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,57,"getTextSize","()F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,58,"setTextSize","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,59,"getTextScaleX","()F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,60,"setTextScaleX","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,61,"getTextSkewX","()F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,62,"setTextSkewX","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,63,"ascent","()F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,64,"descent","()F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,65,"getFontMetrics","(Landroid/graphics/Paint$FontMetrics;)F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,66,"getFontMetrics","()Landroid/graphics/Paint$FontMetrics;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,67,"getFontMetricsInt","(Landroid/graphics/Paint$FontMetricsInt;)I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,68,"getFontMetricsInt","()Landroid/graphics/Paint$FontMetricsInt;")
J2CPP_DEFINE_METHOD(android::graphics::Paint,69,"getFontSpacing","()F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,70,"measureText","([CII)F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,71,"measureText","(Ljava/lang/String;II)F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,72,"measureText","(Ljava/lang/String;)F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,73,"measureText","(Ljava/lang/CharSequence;II)F")
J2CPP_DEFINE_METHOD(android::graphics::Paint,74,"breakText","([CIIF[F)I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,75,"breakText","(Ljava/lang/CharSequence;IIZF[F)I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,76,"breakText","(Ljava/lang/String;ZF[F)I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,77,"getTextWidths","([CII[F)I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,78,"getTextWidths","(Ljava/lang/CharSequence;II[F)I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,79,"getTextWidths","(Ljava/lang/String;II[F)I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,80,"getTextWidths","(Ljava/lang/String;[F)I")
J2CPP_DEFINE_METHOD(android::graphics::Paint,81,"getTextPath","([CIIFFLandroid/graphics/Path;)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,82,"getTextPath","(Ljava/lang/String;IIFFLandroid/graphics/Path;)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,83,"getTextBounds","(Ljava/lang/String;IILandroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,84,"getTextBounds","([CIILandroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::graphics::Paint,85,"finalize","()V")
J2CPP_DEFINE_FIELD(android::graphics::Paint,0,"ANTI_ALIAS_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint,1,"FILTER_BITMAP_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint,2,"DITHER_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint,3,"UNDERLINE_TEXT_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint,4,"STRIKE_THRU_TEXT_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint,5,"FAKE_BOLD_TEXT_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint,6,"LINEAR_TEXT_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint,7,"SUBPIXEL_TEXT_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Paint,8,"DEV_KERN_TEXT_FLAG","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_PAINT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
