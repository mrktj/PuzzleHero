/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.os.Messenger
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_MESSENGER_HPP_DECL
#define J2CPP_ANDROID_OS_MESSENGER_HPP_DECL


namespace j2cpp { namespace android { namespace os { class IBinder; } } }
namespace j2cpp { namespace android { namespace os { class Parcelable; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { class Message; } } }
namespace j2cpp { namespace android { namespace os { class Handler; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <android/os/Handler.hpp>
#include <android/os/IBinder.hpp>
#include <android/os/Message.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace os {

	class Messenger;
	class Messenger
		: public object<Messenger>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_FIELD(0)

		explicit Messenger(jobject jobj)
		: object<Messenger>(jobj)
		{
		}

		operator local_ref<android::os::Parcelable>() const;
		operator local_ref<java::lang::Object>() const;


		Messenger(local_ref< android::os::Handler > const&);
		Messenger(local_ref< android::os::IBinder > const&);
		void send(local_ref< android::os::Message >  const&);
		local_ref< android::os::IBinder > getBinder();
		jboolean equals(local_ref< java::lang::Object >  const&);
		jint hashCode();
		jint describeContents();
		void writeToParcel(local_ref< android::os::Parcel >  const&, jint);
		static void writeMessengerOrNullToParcel(local_ref< android::os::Messenger >  const&, local_ref< android::os::Parcel >  const&);
		static local_ref< android::os::Messenger > readMessengerOrNullFromParcel(local_ref< android::os::Parcel >  const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class Messenger

} //namespace os
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_MESSENGER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_MESSENGER_HPP_IMPL
#define J2CPP_ANDROID_OS_MESSENGER_HPP_IMPL

namespace j2cpp {



android::os::Messenger::operator local_ref<android::os::Parcelable>() const
{
	return local_ref<android::os::Parcelable>(get_jobject());
}

android::os::Messenger::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::os::Messenger::Messenger(local_ref< android::os::Handler > const &a0)
: object<android::os::Messenger>(
	call_new_object<
		android::os::Messenger::J2CPP_CLASS_NAME,
		android::os::Messenger::J2CPP_METHOD_NAME(0),
		android::os::Messenger::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



android::os::Messenger::Messenger(local_ref< android::os::IBinder > const &a0)
: object<android::os::Messenger>(
	call_new_object<
		android::os::Messenger::J2CPP_CLASS_NAME,
		android::os::Messenger::J2CPP_METHOD_NAME(1),
		android::os::Messenger::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}


void android::os::Messenger::send(local_ref< android::os::Message > const &a0)
{
	return call_method<
		android::os::Messenger::J2CPP_CLASS_NAME,
		android::os::Messenger::J2CPP_METHOD_NAME(2),
		android::os::Messenger::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject(), a0);
}

local_ref< android::os::IBinder > android::os::Messenger::getBinder()
{
	return call_method<
		android::os::Messenger::J2CPP_CLASS_NAME,
		android::os::Messenger::J2CPP_METHOD_NAME(3),
		android::os::Messenger::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< android::os::IBinder >
	>(get_jobject());
}

jboolean android::os::Messenger::equals(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		android::os::Messenger::J2CPP_CLASS_NAME,
		android::os::Messenger::J2CPP_METHOD_NAME(4),
		android::os::Messenger::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(get_jobject(), a0);
}

jint android::os::Messenger::hashCode()
{
	return call_method<
		android::os::Messenger::J2CPP_CLASS_NAME,
		android::os::Messenger::J2CPP_METHOD_NAME(5),
		android::os::Messenger::J2CPP_METHOD_SIGNATURE(5), 
		jint
	>(get_jobject());
}

jint android::os::Messenger::describeContents()
{
	return call_method<
		android::os::Messenger::J2CPP_CLASS_NAME,
		android::os::Messenger::J2CPP_METHOD_NAME(6),
		android::os::Messenger::J2CPP_METHOD_SIGNATURE(6), 
		jint
	>(get_jobject());
}

void android::os::Messenger::writeToParcel(local_ref< android::os::Parcel > const &a0, jint a1)
{
	return call_method<
		android::os::Messenger::J2CPP_CLASS_NAME,
		android::os::Messenger::J2CPP_METHOD_NAME(7),
		android::os::Messenger::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0, a1);
}

void android::os::Messenger::writeMessengerOrNullToParcel(local_ref< android::os::Messenger > const &a0, local_ref< android::os::Parcel > const &a1)
{
	return call_static_method<
		android::os::Messenger::J2CPP_CLASS_NAME,
		android::os::Messenger::J2CPP_METHOD_NAME(8),
		android::os::Messenger::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(a0, a1);
}

local_ref< android::os::Messenger > android::os::Messenger::readMessengerOrNullFromParcel(local_ref< android::os::Parcel > const &a0)
{
	return call_static_method<
		android::os::Messenger::J2CPP_CLASS_NAME,
		android::os::Messenger::J2CPP_METHOD_NAME(9),
		android::os::Messenger::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< android::os::Messenger >
	>(a0);
}



static_field<
	android::os::Messenger::J2CPP_CLASS_NAME,
	android::os::Messenger::J2CPP_FIELD_NAME(0),
	android::os::Messenger::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::os::Parcelable_::Creator >
> android::os::Messenger::CREATOR;


J2CPP_DEFINE_CLASS(android::os::Messenger,"android/os/Messenger")
J2CPP_DEFINE_METHOD(android::os::Messenger,0,"<init>","(Landroid/os/Handler;)V")
J2CPP_DEFINE_METHOD(android::os::Messenger,1,"<init>","(Landroid/os/IBinder;)V")
J2CPP_DEFINE_METHOD(android::os::Messenger,2,"send","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::os::Messenger,3,"getBinder","()Landroid/os/IBinder;")
J2CPP_DEFINE_METHOD(android::os::Messenger,4,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(android::os::Messenger,5,"hashCode","()I")
J2CPP_DEFINE_METHOD(android::os::Messenger,6,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::os::Messenger,7,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::os::Messenger,8,"writeMessengerOrNullToParcel","(Landroid/os/Messenger;Landroid/os/Parcel;)V")
J2CPP_DEFINE_METHOD(android::os::Messenger,9,"readMessengerOrNullFromParcel","(Landroid/os/Parcel;)Landroid/os/Messenger;")
J2CPP_DEFINE_METHOD(android::os::Messenger,10,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::os::Messenger,0,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_MESSENGER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
