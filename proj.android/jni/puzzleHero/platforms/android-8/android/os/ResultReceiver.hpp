/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.os.ResultReceiver
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_DECL
#define J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_DECL


namespace j2cpp { namespace android { namespace os { class Parcelable; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { class Handler; } } }
namespace j2cpp { namespace android { namespace os { class Bundle; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <android/os/Bundle.hpp>
#include <android/os/Handler.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace os {

	class ResultReceiver;
	class ResultReceiver
		: public object<ResultReceiver>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_FIELD(0)

		explicit ResultReceiver(jobject jobj)
		: object<ResultReceiver>(jobj)
		{
		}

		operator local_ref<android::os::Parcelable>() const;
		operator local_ref<java::lang::Object>() const;


		ResultReceiver(local_ref< android::os::Handler > const&);
		void send(jint, local_ref< android::os::Bundle >  const&);
		jint describeContents();
		void writeToParcel(local_ref< android::os::Parcel >  const&, jint);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class ResultReceiver

} //namespace os
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_IMPL
#define J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_IMPL

namespace j2cpp {



android::os::ResultReceiver::operator local_ref<android::os::Parcelable>() const
{
	return local_ref<android::os::Parcelable>(get_jobject());
}

android::os::ResultReceiver::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::os::ResultReceiver::ResultReceiver(local_ref< android::os::Handler > const &a0)
: object<android::os::ResultReceiver>(
	call_new_object<
		android::os::ResultReceiver::J2CPP_CLASS_NAME,
		android::os::ResultReceiver::J2CPP_METHOD_NAME(0),
		android::os::ResultReceiver::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


void android::os::ResultReceiver::send(jint a0, local_ref< android::os::Bundle > const &a1)
{
	return call_method<
		android::os::ResultReceiver::J2CPP_CLASS_NAME,
		android::os::ResultReceiver::J2CPP_METHOD_NAME(1),
		android::os::ResultReceiver::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0, a1);
}


jint android::os::ResultReceiver::describeContents()
{
	return call_method<
		android::os::ResultReceiver::J2CPP_CLASS_NAME,
		android::os::ResultReceiver::J2CPP_METHOD_NAME(3),
		android::os::ResultReceiver::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(get_jobject());
}

void android::os::ResultReceiver::writeToParcel(local_ref< android::os::Parcel > const &a0, jint a1)
{
	return call_method<
		android::os::ResultReceiver::J2CPP_CLASS_NAME,
		android::os::ResultReceiver::J2CPP_METHOD_NAME(4),
		android::os::ResultReceiver::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0, a1);
}



static_field<
	android::os::ResultReceiver::J2CPP_CLASS_NAME,
	android::os::ResultReceiver::J2CPP_FIELD_NAME(0),
	android::os::ResultReceiver::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::os::Parcelable_::Creator >
> android::os::ResultReceiver::CREATOR;


J2CPP_DEFINE_CLASS(android::os::ResultReceiver,"android/os/ResultReceiver")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,0,"<init>","(Landroid/os/Handler;)V")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,1,"send","(ILandroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,2,"onReceiveResult","(ILandroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,3,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,4,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,5,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::os::ResultReceiver,0,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
