/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.os.Binder
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_BINDER_HPP_DECL
#define J2CPP_ANDROID_OS_BINDER_HPP_DECL


namespace j2cpp { namespace android { namespace os { class IBinder; } } }
namespace j2cpp { namespace android { namespace os { namespace IBinder_ { class DeathRecipient; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { class IInterface; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace io { class FileDescriptor; } } }


#include <android/os/IBinder.hpp>
#include <android/os/IInterface.hpp>
#include <android/os/Parcel.hpp>
#include <java/io/FileDescriptor.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace os {

	class Binder;
	class Binder
		: public object<Binder>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)

		explicit Binder(jobject jobj)
		: object<Binder>(jobj)
		{
		}

		operator local_ref<android::os::IBinder>() const;
		operator local_ref<java::lang::Object>() const;


		Binder();
		static jint getCallingPid();
		static jint getCallingUid();
		static jlong clearCallingIdentity();
		static void restoreCallingIdentity(jlong);
		static void flushPendingCommands();
		static void joinThreadPool();
		void attachInterface(local_ref< android::os::IInterface >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getInterfaceDescriptor();
		jboolean pingBinder();
		jboolean isBinderAlive();
		local_ref< android::os::IInterface > queryLocalInterface(local_ref< java::lang::String >  const&);
		void dump(local_ref< java::io::FileDescriptor >  const&, local_ref< array< local_ref< java::lang::String >, 1> >  const&);
		jboolean transact(jint, local_ref< android::os::Parcel >  const&, local_ref< android::os::Parcel >  const&, jint);
		void linkToDeath(local_ref< android::os::IBinder_::DeathRecipient >  const&, jint);
		jboolean unlinkToDeath(local_ref< android::os::IBinder_::DeathRecipient >  const&, jint);
	}; //class Binder

} //namespace os
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_BINDER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_BINDER_HPP_IMPL
#define J2CPP_ANDROID_OS_BINDER_HPP_IMPL

namespace j2cpp {



android::os::Binder::operator local_ref<android::os::IBinder>() const
{
	return local_ref<android::os::IBinder>(get_jobject());
}

android::os::Binder::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::os::Binder::Binder()
: object<android::os::Binder>(
	call_new_object<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(0),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


jint android::os::Binder::getCallingPid()
{
	return call_static_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(1),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(1), 
		jint
	>();
}

jint android::os::Binder::getCallingUid()
{
	return call_static_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(2),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>();
}

jlong android::os::Binder::clearCallingIdentity()
{
	return call_static_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(3),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(3), 
		jlong
	>();
}

void android::os::Binder::restoreCallingIdentity(jlong a0)
{
	return call_static_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(4),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(a0);
}

void android::os::Binder::flushPendingCommands()
{
	return call_static_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(5),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(5), 
		void
	>();
}

void android::os::Binder::joinThreadPool()
{
	return call_static_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(6),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(6), 
		void
	>();
}

void android::os::Binder::attachInterface(local_ref< android::os::IInterface > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(7),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::String > android::os::Binder::getInterfaceDescriptor()
{
	return call_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(8),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jboolean android::os::Binder::pingBinder()
{
	return call_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(9),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(get_jobject());
}

jboolean android::os::Binder::isBinderAlive()
{
	return call_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(10),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(10), 
		jboolean
	>(get_jobject());
}

local_ref< android::os::IInterface > android::os::Binder::queryLocalInterface(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(11),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< android::os::IInterface >
	>(get_jobject(), a0);
}


void android::os::Binder::dump(local_ref< java::io::FileDescriptor > const &a0, local_ref< array< local_ref< java::lang::String >, 1> > const &a1)
{
	return call_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(13),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(13), 
		void
	>(get_jobject(), a0, a1);
}


jboolean android::os::Binder::transact(jint a0, local_ref< android::os::Parcel > const &a1, local_ref< android::os::Parcel > const &a2, jint a3)
{
	return call_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(15),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(15), 
		jboolean
	>(get_jobject(), a0, a1, a2, a3);
}

void android::os::Binder::linkToDeath(local_ref< android::os::IBinder_::DeathRecipient > const &a0, jint a1)
{
	return call_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(16),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(16), 
		void
	>(get_jobject(), a0, a1);
}

jboolean android::os::Binder::unlinkToDeath(local_ref< android::os::IBinder_::DeathRecipient > const &a0, jint a1)
{
	return call_method<
		android::os::Binder::J2CPP_CLASS_NAME,
		android::os::Binder::J2CPP_METHOD_NAME(17),
		android::os::Binder::J2CPP_METHOD_SIGNATURE(17), 
		jboolean
	>(get_jobject(), a0, a1);
}



J2CPP_DEFINE_CLASS(android::os::Binder,"android/os/Binder")
J2CPP_DEFINE_METHOD(android::os::Binder,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::Binder,1,"getCallingPid","()I")
J2CPP_DEFINE_METHOD(android::os::Binder,2,"getCallingUid","()I")
J2CPP_DEFINE_METHOD(android::os::Binder,3,"clearCallingIdentity","()J")
J2CPP_DEFINE_METHOD(android::os::Binder,4,"restoreCallingIdentity","(J)V")
J2CPP_DEFINE_METHOD(android::os::Binder,5,"flushPendingCommands","()V")
J2CPP_DEFINE_METHOD(android::os::Binder,6,"joinThreadPool","()V")
J2CPP_DEFINE_METHOD(android::os::Binder,7,"attachInterface","(Landroid/os/IInterface;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::os::Binder,8,"getInterfaceDescriptor","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::os::Binder,9,"pingBinder","()Z")
J2CPP_DEFINE_METHOD(android::os::Binder,10,"isBinderAlive","()Z")
J2CPP_DEFINE_METHOD(android::os::Binder,11,"queryLocalInterface","(Ljava/lang/String;)Landroid/os/IInterface;")
J2CPP_DEFINE_METHOD(android::os::Binder,12,"onTransact","(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z")
J2CPP_DEFINE_METHOD(android::os::Binder,13,"dump","(Ljava/io/FileDescriptor;[java.lang.String)V")
J2CPP_DEFINE_METHOD(android::os::Binder,14,"dump","(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[java.lang.String)V")
J2CPP_DEFINE_METHOD(android::os::Binder,15,"transact","(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z")
J2CPP_DEFINE_METHOD(android::os::Binder,16,"linkToDeath","(Landroid/os/IBinder$DeathRecipient;I)V")
J2CPP_DEFINE_METHOD(android::os::Binder,17,"unlinkToDeath","(Landroid/os/IBinder$DeathRecipient;I)Z")
J2CPP_DEFINE_METHOD(android::os::Binder,18,"finalize","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_BINDER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
