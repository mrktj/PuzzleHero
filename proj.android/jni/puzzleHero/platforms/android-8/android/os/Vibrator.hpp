/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.os.Vibrator
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_VIBRATOR_HPP_DECL
#define J2CPP_ANDROID_OS_VIBRATOR_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace os {

	class Vibrator;
	class Vibrator
		: public object<Vibrator>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		explicit Vibrator(jobject jobj)
		: object<Vibrator>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void vibrate(jlong);
		void vibrate(local_ref< array<jlong,1> >  const&, jint);
		void cancel();
	}; //class Vibrator

} //namespace os
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_VIBRATOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_VIBRATOR_HPP_IMPL
#define J2CPP_ANDROID_OS_VIBRATOR_HPP_IMPL

namespace j2cpp {



android::os::Vibrator::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


void android::os::Vibrator::vibrate(jlong a0)
{
	return call_method<
		android::os::Vibrator::J2CPP_CLASS_NAME,
		android::os::Vibrator::J2CPP_METHOD_NAME(1),
		android::os::Vibrator::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0);
}

void android::os::Vibrator::vibrate(local_ref< array<jlong,1> > const &a0, jint a1)
{
	return call_method<
		android::os::Vibrator::J2CPP_CLASS_NAME,
		android::os::Vibrator::J2CPP_METHOD_NAME(2),
		android::os::Vibrator::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject(), a0, a1);
}

void android::os::Vibrator::cancel()
{
	return call_method<
		android::os::Vibrator::J2CPP_CLASS_NAME,
		android::os::Vibrator::J2CPP_METHOD_NAME(3),
		android::os::Vibrator::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(android::os::Vibrator,"android/os/Vibrator")
J2CPP_DEFINE_METHOD(android::os::Vibrator,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::Vibrator,1,"vibrate","(J)V")
J2CPP_DEFINE_METHOD(android::os::Vibrator,2,"vibrate","([JI)V")
J2CPP_DEFINE_METHOD(android::os::Vibrator,3,"cancel","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_VIBRATOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
