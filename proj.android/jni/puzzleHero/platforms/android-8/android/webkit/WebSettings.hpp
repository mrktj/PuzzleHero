/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.webkit.WebSettings
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_WEBSETTINGS_HPP_DECL
#define J2CPP_ANDROID_WEBKIT_WEBSETTINGS_HPP_DECL


namespace j2cpp { namespace android { namespace webkit { namespace WebSettings_ { class ZoomDensity; } } } }
namespace j2cpp { namespace android { namespace webkit { namespace WebSettings_ { class PluginState; } } } }
namespace j2cpp { namespace android { namespace webkit { namespace WebSettings_ { class LayoutAlgorithm; } } } }
namespace j2cpp { namespace android { namespace webkit { namespace WebSettings_ { class RenderPriority; } } } }
namespace j2cpp { namespace android { namespace webkit { namespace WebSettings_ { class TextSize; } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Enum; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Comparable; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <android/webkit/WebSettings.hpp>
#include <java/io/Serializable.hpp>
#include <java/lang/Comparable.hpp>
#include <java/lang/Enum.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace webkit {

	class WebSettings;
	namespace WebSettings_ {

		class ZoomDensity;
		class ZoomDensity
			: public object<ZoomDensity>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			explicit ZoomDensity(jobject jobj)
			: object<ZoomDensity>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< android::webkit::WebSettings_::ZoomDensity >, 1> > values();
			static local_ref< android::webkit::WebSettings_::ZoomDensity > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::webkit::WebSettings_::ZoomDensity > > CLOSE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::webkit::WebSettings_::ZoomDensity > > FAR;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::webkit::WebSettings_::ZoomDensity > > MEDIUM;
		}; //class ZoomDensity

		class PluginState;
		class PluginState
			: public object<PluginState>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			explicit PluginState(jobject jobj)
			: object<PluginState>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< android::webkit::WebSettings_::PluginState >, 1> > values();
			static local_ref< android::webkit::WebSettings_::PluginState > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::webkit::WebSettings_::PluginState > > OFF;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::webkit::WebSettings_::PluginState > > ON;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::webkit::WebSettings_::PluginState > > ON_DEMAND;
		}; //class PluginState

		class LayoutAlgorithm;
		class LayoutAlgorithm
			: public object<LayoutAlgorithm>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			explicit LayoutAlgorithm(jobject jobj)
			: object<LayoutAlgorithm>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< android::webkit::WebSettings_::LayoutAlgorithm >, 1> > values();
			static local_ref< android::webkit::WebSettings_::LayoutAlgorithm > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::webkit::WebSettings_::LayoutAlgorithm > > NARROW_COLUMNS;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::webkit::WebSettings_::LayoutAlgorithm > > NORMAL;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::webkit::WebSettings_::LayoutAlgorithm > > SINGLE_COLUMN;
		}; //class LayoutAlgorithm

		class RenderPriority;
		class RenderPriority
			: public object<RenderPriority>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			explicit RenderPriority(jobject jobj)
			: object<RenderPriority>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< android::webkit::WebSettings_::RenderPriority >, 1> > values();
			static local_ref< android::webkit::WebSettings_::RenderPriority > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::webkit::WebSettings_::RenderPriority > > HIGH;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::webkit::WebSettings_::RenderPriority > > LOW;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::webkit::WebSettings_::RenderPriority > > NORMAL;
		}; //class RenderPriority

		class TextSize;
		class TextSize
			: public object<TextSize>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)
			J2CPP_DECLARE_FIELD(5)

			explicit TextSize(jobject jobj)
			: object<TextSize>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< android::webkit::WebSettings_::TextSize >, 1> > values();
			static local_ref< android::webkit::WebSettings_::TextSize > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::webkit::WebSettings_::TextSize > > LARGER;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::webkit::WebSettings_::TextSize > > LARGEST;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::webkit::WebSettings_::TextSize > > NORMAL;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), local_ref< android::webkit::WebSettings_::TextSize > > SMALLER;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), local_ref< android::webkit::WebSettings_::TextSize > > SMALLEST;
		}; //class TextSize

	} //namespace WebSettings_

	class WebSettings
		: public object<WebSettings>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)
		J2CPP_DECLARE_METHOD(77)
		J2CPP_DECLARE_METHOD(78)
		J2CPP_DECLARE_METHOD(79)
		J2CPP_DECLARE_METHOD(80)
		J2CPP_DECLARE_METHOD(81)
		J2CPP_DECLARE_METHOD(82)
		J2CPP_DECLARE_METHOD(83)
		J2CPP_DECLARE_METHOD(84)
		J2CPP_DECLARE_METHOD(85)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)

		typedef WebSettings_::ZoomDensity ZoomDensity;
		typedef WebSettings_::PluginState PluginState;
		typedef WebSettings_::LayoutAlgorithm LayoutAlgorithm;
		typedef WebSettings_::RenderPriority RenderPriority;
		typedef WebSettings_::TextSize TextSize;

		explicit WebSettings(jobject jobj)
		: object<WebSettings>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void setNavDump(jboolean);
		jboolean getNavDump();
		void setSupportZoom(jboolean);
		jboolean supportZoom();
		void setBuiltInZoomControls(jboolean);
		jboolean getBuiltInZoomControls();
		void setAllowFileAccess(jboolean);
		jboolean getAllowFileAccess();
		void setLoadWithOverviewMode(jboolean);
		jboolean getLoadWithOverviewMode();
		void setSaveFormData(jboolean);
		jboolean getSaveFormData();
		void setSavePassword(jboolean);
		jboolean getSavePassword();
		void setTextSize(local_ref< android::webkit::WebSettings_::TextSize >  const&);
		local_ref< android::webkit::WebSettings_::TextSize > getTextSize();
		void setDefaultZoom(local_ref< android::webkit::WebSettings_::ZoomDensity >  const&);
		local_ref< android::webkit::WebSettings_::ZoomDensity > getDefaultZoom();
		void setLightTouchEnabled(jboolean);
		jboolean getLightTouchEnabled();
		void setUseDoubleTree(jboolean);
		jboolean getUseDoubleTree();
		void setUserAgent(jint);
		jint getUserAgent();
		void setUseWideViewPort(jboolean);
		jboolean getUseWideViewPort();
		void setSupportMultipleWindows(jboolean);
		jboolean supportMultipleWindows();
		void setLayoutAlgorithm(local_ref< android::webkit::WebSettings_::LayoutAlgorithm >  const&);
		local_ref< android::webkit::WebSettings_::LayoutAlgorithm > getLayoutAlgorithm();
		void setStandardFontFamily(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getStandardFontFamily();
		void setFixedFontFamily(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getFixedFontFamily();
		void setSansSerifFontFamily(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getSansSerifFontFamily();
		void setSerifFontFamily(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getSerifFontFamily();
		void setCursiveFontFamily(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getCursiveFontFamily();
		void setFantasyFontFamily(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getFantasyFontFamily();
		void setMinimumFontSize(jint);
		jint getMinimumFontSize();
		void setMinimumLogicalFontSize(jint);
		jint getMinimumLogicalFontSize();
		void setDefaultFontSize(jint);
		jint getDefaultFontSize();
		void setDefaultFixedFontSize(jint);
		jint getDefaultFixedFontSize();
		void setLoadsImagesAutomatically(jboolean);
		jboolean getLoadsImagesAutomatically();
		void setBlockNetworkImage(jboolean);
		jboolean getBlockNetworkImage();
		void setBlockNetworkLoads(jboolean);
		jboolean getBlockNetworkLoads();
		void setJavaScriptEnabled(jboolean);
		void setPluginsEnabled(jboolean);
		void setPluginState(local_ref< android::webkit::WebSettings_::PluginState >  const&);
		void setPluginsPath(local_ref< java::lang::String >  const&);
		void setDatabasePath(local_ref< java::lang::String >  const&);
		void setGeolocationDatabasePath(local_ref< java::lang::String >  const&);
		void setAppCacheEnabled(jboolean);
		void setAppCachePath(local_ref< java::lang::String >  const&);
		void setAppCacheMaxSize(jlong);
		void setDatabaseEnabled(jboolean);
		void setDomStorageEnabled(jboolean);
		jboolean getDomStorageEnabled();
		local_ref< java::lang::String > getDatabasePath();
		jboolean getDatabaseEnabled();
		void setGeolocationEnabled(jboolean);
		jboolean getJavaScriptEnabled();
		jboolean getPluginsEnabled();
		local_ref< android::webkit::WebSettings_::PluginState > getPluginState();
		local_ref< java::lang::String > getPluginsPath();
		void setJavaScriptCanOpenWindowsAutomatically(jboolean);
		jboolean getJavaScriptCanOpenWindowsAutomatically();
		void setDefaultTextEncodingName(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getDefaultTextEncodingName();
		void setUserAgentString(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getUserAgentString();
		void setNeedInitialFocus(jboolean);
		void setRenderPriority(local_ref< android::webkit::WebSettings_::RenderPriority >  const&);
		void setCacheMode(jint);
		jint getCacheMode();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > LOAD_DEFAULT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > LOAD_NORMAL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > LOAD_CACHE_ELSE_NETWORK;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > LOAD_NO_CACHE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > LOAD_CACHE_ONLY;
	}; //class WebSettings

} //namespace webkit
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_WEBSETTINGS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_WEBSETTINGS_HPP_IMPL
#define J2CPP_ANDROID_WEBKIT_WEBSETTINGS_HPP_IMPL

namespace j2cpp {




android::webkit::WebSettings_::ZoomDensity::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

android::webkit::WebSettings_::ZoomDensity::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::webkit::WebSettings_::ZoomDensity::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

android::webkit::WebSettings_::ZoomDensity::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< android::webkit::WebSettings_::ZoomDensity >, 1> > android::webkit::WebSettings_::ZoomDensity::values()
{
	return call_static_method<
		android::webkit::WebSettings_::ZoomDensity::J2CPP_CLASS_NAME,
		android::webkit::WebSettings_::ZoomDensity::J2CPP_METHOD_NAME(0),
		android::webkit::WebSettings_::ZoomDensity::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< android::webkit::WebSettings_::ZoomDensity >, 1> >
	>();
}

local_ref< android::webkit::WebSettings_::ZoomDensity > android::webkit::WebSettings_::ZoomDensity::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::WebSettings_::ZoomDensity::J2CPP_CLASS_NAME,
		android::webkit::WebSettings_::ZoomDensity::J2CPP_METHOD_NAME(1),
		android::webkit::WebSettings_::ZoomDensity::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::webkit::WebSettings_::ZoomDensity >
	>(a0);
}




static_field<
	android::webkit::WebSettings_::ZoomDensity::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::ZoomDensity::J2CPP_FIELD_NAME(0),
	android::webkit::WebSettings_::ZoomDensity::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::webkit::WebSettings_::ZoomDensity >
> android::webkit::WebSettings_::ZoomDensity::CLOSE;

static_field<
	android::webkit::WebSettings_::ZoomDensity::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::ZoomDensity::J2CPP_FIELD_NAME(1),
	android::webkit::WebSettings_::ZoomDensity::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::webkit::WebSettings_::ZoomDensity >
> android::webkit::WebSettings_::ZoomDensity::FAR;

static_field<
	android::webkit::WebSettings_::ZoomDensity::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::ZoomDensity::J2CPP_FIELD_NAME(2),
	android::webkit::WebSettings_::ZoomDensity::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::webkit::WebSettings_::ZoomDensity >
> android::webkit::WebSettings_::ZoomDensity::MEDIUM;


J2CPP_DEFINE_CLASS(android::webkit::WebSettings_::ZoomDensity,"android/webkit/WebSettings$ZoomDensity")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::ZoomDensity,0,"values","()[android.webkit.WebSettings.ZoomDensity")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::ZoomDensity,1,"valueOf","(Ljava/lang/String;)Landroid/webkit/WebSettings$ZoomDensity;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::ZoomDensity,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::ZoomDensity,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::ZoomDensity,0,"CLOSE","Landroid/webkit/WebSettings$ZoomDensity;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::ZoomDensity,1,"FAR","Landroid/webkit/WebSettings$ZoomDensity;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::ZoomDensity,2,"MEDIUM","Landroid/webkit/WebSettings$ZoomDensity;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::ZoomDensity,3,"$VALUES","[android.webkit.WebSettings.ZoomDensity")


android::webkit::WebSettings_::PluginState::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

android::webkit::WebSettings_::PluginState::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::webkit::WebSettings_::PluginState::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

android::webkit::WebSettings_::PluginState::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< android::webkit::WebSettings_::PluginState >, 1> > android::webkit::WebSettings_::PluginState::values()
{
	return call_static_method<
		android::webkit::WebSettings_::PluginState::J2CPP_CLASS_NAME,
		android::webkit::WebSettings_::PluginState::J2CPP_METHOD_NAME(0),
		android::webkit::WebSettings_::PluginState::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< android::webkit::WebSettings_::PluginState >, 1> >
	>();
}

local_ref< android::webkit::WebSettings_::PluginState > android::webkit::WebSettings_::PluginState::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::WebSettings_::PluginState::J2CPP_CLASS_NAME,
		android::webkit::WebSettings_::PluginState::J2CPP_METHOD_NAME(1),
		android::webkit::WebSettings_::PluginState::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::webkit::WebSettings_::PluginState >
	>(a0);
}




static_field<
	android::webkit::WebSettings_::PluginState::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::PluginState::J2CPP_FIELD_NAME(0),
	android::webkit::WebSettings_::PluginState::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::webkit::WebSettings_::PluginState >
> android::webkit::WebSettings_::PluginState::OFF;

static_field<
	android::webkit::WebSettings_::PluginState::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::PluginState::J2CPP_FIELD_NAME(1),
	android::webkit::WebSettings_::PluginState::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::webkit::WebSettings_::PluginState >
> android::webkit::WebSettings_::PluginState::ON;

static_field<
	android::webkit::WebSettings_::PluginState::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::PluginState::J2CPP_FIELD_NAME(2),
	android::webkit::WebSettings_::PluginState::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::webkit::WebSettings_::PluginState >
> android::webkit::WebSettings_::PluginState::ON_DEMAND;


J2CPP_DEFINE_CLASS(android::webkit::WebSettings_::PluginState,"android/webkit/WebSettings$PluginState")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::PluginState,0,"values","()[android.webkit.WebSettings.PluginState")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::PluginState,1,"valueOf","(Ljava/lang/String;)Landroid/webkit/WebSettings$PluginState;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::PluginState,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::PluginState,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::PluginState,0,"OFF","Landroid/webkit/WebSettings$PluginState;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::PluginState,1,"ON","Landroid/webkit/WebSettings$PluginState;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::PluginState,2,"ON_DEMAND","Landroid/webkit/WebSettings$PluginState;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::PluginState,3,"$VALUES","[android.webkit.WebSettings.PluginState")


android::webkit::WebSettings_::LayoutAlgorithm::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

android::webkit::WebSettings_::LayoutAlgorithm::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::webkit::WebSettings_::LayoutAlgorithm::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

android::webkit::WebSettings_::LayoutAlgorithm::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< android::webkit::WebSettings_::LayoutAlgorithm >, 1> > android::webkit::WebSettings_::LayoutAlgorithm::values()
{
	return call_static_method<
		android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_CLASS_NAME,
		android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_METHOD_NAME(0),
		android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< android::webkit::WebSettings_::LayoutAlgorithm >, 1> >
	>();
}

local_ref< android::webkit::WebSettings_::LayoutAlgorithm > android::webkit::WebSettings_::LayoutAlgorithm::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_CLASS_NAME,
		android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_METHOD_NAME(1),
		android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::webkit::WebSettings_::LayoutAlgorithm >
	>(a0);
}




static_field<
	android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_FIELD_NAME(0),
	android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::webkit::WebSettings_::LayoutAlgorithm >
> android::webkit::WebSettings_::LayoutAlgorithm::NARROW_COLUMNS;

static_field<
	android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_FIELD_NAME(1),
	android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::webkit::WebSettings_::LayoutAlgorithm >
> android::webkit::WebSettings_::LayoutAlgorithm::NORMAL;

static_field<
	android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_FIELD_NAME(2),
	android::webkit::WebSettings_::LayoutAlgorithm::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::webkit::WebSettings_::LayoutAlgorithm >
> android::webkit::WebSettings_::LayoutAlgorithm::SINGLE_COLUMN;


J2CPP_DEFINE_CLASS(android::webkit::WebSettings_::LayoutAlgorithm,"android/webkit/WebSettings$LayoutAlgorithm")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::LayoutAlgorithm,0,"values","()[android.webkit.WebSettings.LayoutAlgorithm")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::LayoutAlgorithm,1,"valueOf","(Ljava/lang/String;)Landroid/webkit/WebSettings$LayoutAlgorithm;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::LayoutAlgorithm,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::LayoutAlgorithm,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::LayoutAlgorithm,0,"NARROW_COLUMNS","Landroid/webkit/WebSettings$LayoutAlgorithm;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::LayoutAlgorithm,1,"NORMAL","Landroid/webkit/WebSettings$LayoutAlgorithm;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::LayoutAlgorithm,2,"SINGLE_COLUMN","Landroid/webkit/WebSettings$LayoutAlgorithm;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::LayoutAlgorithm,3,"$VALUES","[android.webkit.WebSettings.LayoutAlgorithm")


android::webkit::WebSettings_::RenderPriority::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

android::webkit::WebSettings_::RenderPriority::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::webkit::WebSettings_::RenderPriority::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

android::webkit::WebSettings_::RenderPriority::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< android::webkit::WebSettings_::RenderPriority >, 1> > android::webkit::WebSettings_::RenderPriority::values()
{
	return call_static_method<
		android::webkit::WebSettings_::RenderPriority::J2CPP_CLASS_NAME,
		android::webkit::WebSettings_::RenderPriority::J2CPP_METHOD_NAME(0),
		android::webkit::WebSettings_::RenderPriority::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< android::webkit::WebSettings_::RenderPriority >, 1> >
	>();
}

local_ref< android::webkit::WebSettings_::RenderPriority > android::webkit::WebSettings_::RenderPriority::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::WebSettings_::RenderPriority::J2CPP_CLASS_NAME,
		android::webkit::WebSettings_::RenderPriority::J2CPP_METHOD_NAME(1),
		android::webkit::WebSettings_::RenderPriority::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::webkit::WebSettings_::RenderPriority >
	>(a0);
}




static_field<
	android::webkit::WebSettings_::RenderPriority::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::RenderPriority::J2CPP_FIELD_NAME(0),
	android::webkit::WebSettings_::RenderPriority::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::webkit::WebSettings_::RenderPriority >
> android::webkit::WebSettings_::RenderPriority::HIGH;

static_field<
	android::webkit::WebSettings_::RenderPriority::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::RenderPriority::J2CPP_FIELD_NAME(1),
	android::webkit::WebSettings_::RenderPriority::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::webkit::WebSettings_::RenderPriority >
> android::webkit::WebSettings_::RenderPriority::LOW;

static_field<
	android::webkit::WebSettings_::RenderPriority::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::RenderPriority::J2CPP_FIELD_NAME(2),
	android::webkit::WebSettings_::RenderPriority::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::webkit::WebSettings_::RenderPriority >
> android::webkit::WebSettings_::RenderPriority::NORMAL;


J2CPP_DEFINE_CLASS(android::webkit::WebSettings_::RenderPriority,"android/webkit/WebSettings$RenderPriority")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::RenderPriority,0,"values","()[android.webkit.WebSettings.RenderPriority")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::RenderPriority,1,"valueOf","(Ljava/lang/String;)Landroid/webkit/WebSettings$RenderPriority;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::RenderPriority,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::RenderPriority,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::RenderPriority,0,"HIGH","Landroid/webkit/WebSettings$RenderPriority;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::RenderPriority,1,"LOW","Landroid/webkit/WebSettings$RenderPriority;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::RenderPriority,2,"NORMAL","Landroid/webkit/WebSettings$RenderPriority;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::RenderPriority,3,"$VALUES","[android.webkit.WebSettings.RenderPriority")


android::webkit::WebSettings_::TextSize::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

android::webkit::WebSettings_::TextSize::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::webkit::WebSettings_::TextSize::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

android::webkit::WebSettings_::TextSize::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< android::webkit::WebSettings_::TextSize >, 1> > android::webkit::WebSettings_::TextSize::values()
{
	return call_static_method<
		android::webkit::WebSettings_::TextSize::J2CPP_CLASS_NAME,
		android::webkit::WebSettings_::TextSize::J2CPP_METHOD_NAME(0),
		android::webkit::WebSettings_::TextSize::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< android::webkit::WebSettings_::TextSize >, 1> >
	>();
}

local_ref< android::webkit::WebSettings_::TextSize > android::webkit::WebSettings_::TextSize::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::WebSettings_::TextSize::J2CPP_CLASS_NAME,
		android::webkit::WebSettings_::TextSize::J2CPP_METHOD_NAME(1),
		android::webkit::WebSettings_::TextSize::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::webkit::WebSettings_::TextSize >
	>(a0);
}




static_field<
	android::webkit::WebSettings_::TextSize::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::TextSize::J2CPP_FIELD_NAME(0),
	android::webkit::WebSettings_::TextSize::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::webkit::WebSettings_::TextSize >
> android::webkit::WebSettings_::TextSize::LARGER;

static_field<
	android::webkit::WebSettings_::TextSize::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::TextSize::J2CPP_FIELD_NAME(1),
	android::webkit::WebSettings_::TextSize::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::webkit::WebSettings_::TextSize >
> android::webkit::WebSettings_::TextSize::LARGEST;

static_field<
	android::webkit::WebSettings_::TextSize::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::TextSize::J2CPP_FIELD_NAME(2),
	android::webkit::WebSettings_::TextSize::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::webkit::WebSettings_::TextSize >
> android::webkit::WebSettings_::TextSize::NORMAL;

static_field<
	android::webkit::WebSettings_::TextSize::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::TextSize::J2CPP_FIELD_NAME(3),
	android::webkit::WebSettings_::TextSize::J2CPP_FIELD_SIGNATURE(3),
	local_ref< android::webkit::WebSettings_::TextSize >
> android::webkit::WebSettings_::TextSize::SMALLER;

static_field<
	android::webkit::WebSettings_::TextSize::J2CPP_CLASS_NAME,
	android::webkit::WebSettings_::TextSize::J2CPP_FIELD_NAME(4),
	android::webkit::WebSettings_::TextSize::J2CPP_FIELD_SIGNATURE(4),
	local_ref< android::webkit::WebSettings_::TextSize >
> android::webkit::WebSettings_::TextSize::SMALLEST;


J2CPP_DEFINE_CLASS(android::webkit::WebSettings_::TextSize,"android/webkit/WebSettings$TextSize")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::TextSize,0,"values","()[android.webkit.WebSettings.TextSize")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::TextSize,1,"valueOf","(Ljava/lang/String;)Landroid/webkit/WebSettings$TextSize;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::TextSize,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings_::TextSize,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::TextSize,0,"LARGER","Landroid/webkit/WebSettings$TextSize;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::TextSize,1,"LARGEST","Landroid/webkit/WebSettings$TextSize;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::TextSize,2,"NORMAL","Landroid/webkit/WebSettings$TextSize;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::TextSize,3,"SMALLER","Landroid/webkit/WebSettings$TextSize;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::TextSize,4,"SMALLEST","Landroid/webkit/WebSettings$TextSize;")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings_::TextSize,5,"$VALUES","[android.webkit.WebSettings.TextSize")



android::webkit::WebSettings::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


void android::webkit::WebSettings::setNavDump(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(1),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getNavDump()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(2),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(2), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setSupportZoom(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(3),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::supportZoom()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(4),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setBuiltInZoomControls(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(5),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getBuiltInZoomControls()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(6),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(6), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setAllowFileAccess(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(7),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getAllowFileAccess()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(8),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(8), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setLoadWithOverviewMode(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(9),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getLoadWithOverviewMode()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(10),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(10), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setSaveFormData(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(11),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getSaveFormData()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(12),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(12), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setSavePassword(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(13),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(13), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getSavePassword()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(14),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(14), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setTextSize(local_ref< android::webkit::WebSettings_::TextSize > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(15),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(15), 
		void
	>(get_jobject(), a0);
}

local_ref< android::webkit::WebSettings_::TextSize > android::webkit::WebSettings::getTextSize()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(16),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< android::webkit::WebSettings_::TextSize >
	>(get_jobject());
}

void android::webkit::WebSettings::setDefaultZoom(local_ref< android::webkit::WebSettings_::ZoomDensity > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(17),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(17), 
		void
	>(get_jobject(), a0);
}

local_ref< android::webkit::WebSettings_::ZoomDensity > android::webkit::WebSettings::getDefaultZoom()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(18),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(18), 
		local_ref< android::webkit::WebSettings_::ZoomDensity >
	>(get_jobject());
}

void android::webkit::WebSettings::setLightTouchEnabled(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(19),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(19), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getLightTouchEnabled()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(20),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(20), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setUseDoubleTree(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(21),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(21), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getUseDoubleTree()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(22),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(22), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setUserAgent(jint a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(23),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(23), 
		void
	>(get_jobject(), a0);
}

jint android::webkit::WebSettings::getUserAgent()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(24),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(24), 
		jint
	>(get_jobject());
}

void android::webkit::WebSettings::setUseWideViewPort(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(25),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(25), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getUseWideViewPort()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(26),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(26), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setSupportMultipleWindows(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(27),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(27), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::supportMultipleWindows()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(28),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(28), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setLayoutAlgorithm(local_ref< android::webkit::WebSettings_::LayoutAlgorithm > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(29),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(29), 
		void
	>(get_jobject(), a0);
}

local_ref< android::webkit::WebSettings_::LayoutAlgorithm > android::webkit::WebSettings::getLayoutAlgorithm()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(30),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(30), 
		local_ref< android::webkit::WebSettings_::LayoutAlgorithm >
	>(get_jobject());
}

void android::webkit::WebSettings::setStandardFontFamily(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(31),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(31), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > android::webkit::WebSettings::getStandardFontFamily()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(32),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(32), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void android::webkit::WebSettings::setFixedFontFamily(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(33),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(33), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > android::webkit::WebSettings::getFixedFontFamily()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(34),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(34), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void android::webkit::WebSettings::setSansSerifFontFamily(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(35),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(35), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > android::webkit::WebSettings::getSansSerifFontFamily()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(36),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(36), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void android::webkit::WebSettings::setSerifFontFamily(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(37),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(37), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > android::webkit::WebSettings::getSerifFontFamily()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(38),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(38), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void android::webkit::WebSettings::setCursiveFontFamily(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(39),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(39), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > android::webkit::WebSettings::getCursiveFontFamily()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(40),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(40), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void android::webkit::WebSettings::setFantasyFontFamily(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(41),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(41), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > android::webkit::WebSettings::getFantasyFontFamily()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(42),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(42), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void android::webkit::WebSettings::setMinimumFontSize(jint a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(43),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(43), 
		void
	>(get_jobject(), a0);
}

jint android::webkit::WebSettings::getMinimumFontSize()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(44),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(44), 
		jint
	>(get_jobject());
}

void android::webkit::WebSettings::setMinimumLogicalFontSize(jint a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(45),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(45), 
		void
	>(get_jobject(), a0);
}

jint android::webkit::WebSettings::getMinimumLogicalFontSize()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(46),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(46), 
		jint
	>(get_jobject());
}

void android::webkit::WebSettings::setDefaultFontSize(jint a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(47),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(47), 
		void
	>(get_jobject(), a0);
}

jint android::webkit::WebSettings::getDefaultFontSize()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(48),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(48), 
		jint
	>(get_jobject());
}

void android::webkit::WebSettings::setDefaultFixedFontSize(jint a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(49),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(49), 
		void
	>(get_jobject(), a0);
}

jint android::webkit::WebSettings::getDefaultFixedFontSize()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(50),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(50), 
		jint
	>(get_jobject());
}

void android::webkit::WebSettings::setLoadsImagesAutomatically(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(51),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(51), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getLoadsImagesAutomatically()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(52),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(52), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setBlockNetworkImage(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(53),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(53), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getBlockNetworkImage()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(54),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(54), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setBlockNetworkLoads(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(55),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(55), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getBlockNetworkLoads()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(56),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(56), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setJavaScriptEnabled(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(57),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(57), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setPluginsEnabled(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(58),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(58), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setPluginState(local_ref< android::webkit::WebSettings_::PluginState > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(59),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(59), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setPluginsPath(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(60),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(60), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setDatabasePath(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(61),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(61), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setGeolocationDatabasePath(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(62),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(62), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setAppCacheEnabled(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(63),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(63), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setAppCachePath(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(64),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(64), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setAppCacheMaxSize(jlong a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(65),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(65), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setDatabaseEnabled(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(66),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(66), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setDomStorageEnabled(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(67),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(67), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getDomStorageEnabled()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(68),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(68), 
		jboolean
	>(get_jobject());
}

local_ref< java::lang::String > android::webkit::WebSettings::getDatabasePath()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(69),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(69), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jboolean android::webkit::WebSettings::getDatabaseEnabled()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(70),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(70), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setGeolocationEnabled(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(71),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(71), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getJavaScriptEnabled()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(72),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(72), 
		jboolean
	>(get_jobject());
}

jboolean android::webkit::WebSettings::getPluginsEnabled()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(73),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(73), 
		jboolean
	>(get_jobject());
}

local_ref< android::webkit::WebSettings_::PluginState > android::webkit::WebSettings::getPluginState()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(74),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(74), 
		local_ref< android::webkit::WebSettings_::PluginState >
	>(get_jobject());
}

local_ref< java::lang::String > android::webkit::WebSettings::getPluginsPath()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(75),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(75), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void android::webkit::WebSettings::setJavaScriptCanOpenWindowsAutomatically(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(76),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(76), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebSettings::getJavaScriptCanOpenWindowsAutomatically()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(77),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(77), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebSettings::setDefaultTextEncodingName(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(78),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(78), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > android::webkit::WebSettings::getDefaultTextEncodingName()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(79),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(79), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void android::webkit::WebSettings::setUserAgentString(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(80),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(80), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > android::webkit::WebSettings::getUserAgentString()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(81),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(81), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void android::webkit::WebSettings::setNeedInitialFocus(jboolean a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(82),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(82), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setRenderPriority(local_ref< android::webkit::WebSettings_::RenderPriority > const &a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(83),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(83), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebSettings::setCacheMode(jint a0)
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(84),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(84), 
		void
	>(get_jobject(), a0);
}

jint android::webkit::WebSettings::getCacheMode()
{
	return call_method<
		android::webkit::WebSettings::J2CPP_CLASS_NAME,
		android::webkit::WebSettings::J2CPP_METHOD_NAME(85),
		android::webkit::WebSettings::J2CPP_METHOD_SIGNATURE(85), 
		jint
	>(get_jobject());
}


static_field<
	android::webkit::WebSettings::J2CPP_CLASS_NAME,
	android::webkit::WebSettings::J2CPP_FIELD_NAME(0),
	android::webkit::WebSettings::J2CPP_FIELD_SIGNATURE(0),
	jint
> android::webkit::WebSettings::LOAD_DEFAULT;

static_field<
	android::webkit::WebSettings::J2CPP_CLASS_NAME,
	android::webkit::WebSettings::J2CPP_FIELD_NAME(1),
	android::webkit::WebSettings::J2CPP_FIELD_SIGNATURE(1),
	jint
> android::webkit::WebSettings::LOAD_NORMAL;

static_field<
	android::webkit::WebSettings::J2CPP_CLASS_NAME,
	android::webkit::WebSettings::J2CPP_FIELD_NAME(2),
	android::webkit::WebSettings::J2CPP_FIELD_SIGNATURE(2),
	jint
> android::webkit::WebSettings::LOAD_CACHE_ELSE_NETWORK;

static_field<
	android::webkit::WebSettings::J2CPP_CLASS_NAME,
	android::webkit::WebSettings::J2CPP_FIELD_NAME(3),
	android::webkit::WebSettings::J2CPP_FIELD_SIGNATURE(3),
	jint
> android::webkit::WebSettings::LOAD_NO_CACHE;

static_field<
	android::webkit::WebSettings::J2CPP_CLASS_NAME,
	android::webkit::WebSettings::J2CPP_FIELD_NAME(4),
	android::webkit::WebSettings::J2CPP_FIELD_SIGNATURE(4),
	jint
> android::webkit::WebSettings::LOAD_CACHE_ONLY;


J2CPP_DEFINE_CLASS(android::webkit::WebSettings,"android/webkit/WebSettings")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,1,"setNavDump","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,2,"getNavDump","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,3,"setSupportZoom","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,4,"supportZoom","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,5,"setBuiltInZoomControls","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,6,"getBuiltInZoomControls","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,7,"setAllowFileAccess","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,8,"getAllowFileAccess","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,9,"setLoadWithOverviewMode","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,10,"getLoadWithOverviewMode","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,11,"setSaveFormData","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,12,"getSaveFormData","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,13,"setSavePassword","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,14,"getSavePassword","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,15,"setTextSize","(Landroid/webkit/WebSettings$TextSize;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,16,"getTextSize","()Landroid/webkit/WebSettings$TextSize;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,17,"setDefaultZoom","(Landroid/webkit/WebSettings$ZoomDensity;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,18,"getDefaultZoom","()Landroid/webkit/WebSettings$ZoomDensity;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,19,"setLightTouchEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,20,"getLightTouchEnabled","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,21,"setUseDoubleTree","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,22,"getUseDoubleTree","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,23,"setUserAgent","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,24,"getUserAgent","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,25,"setUseWideViewPort","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,26,"getUseWideViewPort","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,27,"setSupportMultipleWindows","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,28,"supportMultipleWindows","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,29,"setLayoutAlgorithm","(Landroid/webkit/WebSettings$LayoutAlgorithm;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,30,"getLayoutAlgorithm","()Landroid/webkit/WebSettings$LayoutAlgorithm;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,31,"setStandardFontFamily","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,32,"getStandardFontFamily","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,33,"setFixedFontFamily","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,34,"getFixedFontFamily","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,35,"setSansSerifFontFamily","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,36,"getSansSerifFontFamily","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,37,"setSerifFontFamily","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,38,"getSerifFontFamily","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,39,"setCursiveFontFamily","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,40,"getCursiveFontFamily","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,41,"setFantasyFontFamily","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,42,"getFantasyFontFamily","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,43,"setMinimumFontSize","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,44,"getMinimumFontSize","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,45,"setMinimumLogicalFontSize","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,46,"getMinimumLogicalFontSize","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,47,"setDefaultFontSize","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,48,"getDefaultFontSize","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,49,"setDefaultFixedFontSize","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,50,"getDefaultFixedFontSize","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,51,"setLoadsImagesAutomatically","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,52,"getLoadsImagesAutomatically","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,53,"setBlockNetworkImage","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,54,"getBlockNetworkImage","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,55,"setBlockNetworkLoads","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,56,"getBlockNetworkLoads","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,57,"setJavaScriptEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,58,"setPluginsEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,59,"setPluginState","(Landroid/webkit/WebSettings$PluginState;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,60,"setPluginsPath","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,61,"setDatabasePath","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,62,"setGeolocationDatabasePath","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,63,"setAppCacheEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,64,"setAppCachePath","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,65,"setAppCacheMaxSize","(J)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,66,"setDatabaseEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,67,"setDomStorageEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,68,"getDomStorageEnabled","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,69,"getDatabasePath","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,70,"getDatabaseEnabled","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,71,"setGeolocationEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,72,"getJavaScriptEnabled","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,73,"getPluginsEnabled","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,74,"getPluginState","()Landroid/webkit/WebSettings$PluginState;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,75,"getPluginsPath","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,76,"setJavaScriptCanOpenWindowsAutomatically","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,77,"getJavaScriptCanOpenWindowsAutomatically","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,78,"setDefaultTextEncodingName","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,79,"getDefaultTextEncodingName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,80,"setUserAgentString","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,81,"getUserAgentString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,82,"setNeedInitialFocus","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,83,"setRenderPriority","(Landroid/webkit/WebSettings$RenderPriority;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,84,"setCacheMode","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebSettings,85,"getCacheMode","()I")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings,0,"LOAD_DEFAULT","I")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings,1,"LOAD_NORMAL","I")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings,2,"LOAD_CACHE_ELSE_NETWORK","I")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings,3,"LOAD_NO_CACHE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebSettings,4,"LOAD_CACHE_ONLY","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_WEBSETTINGS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
