/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.text.method.Touch
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_METHOD_TOUCH_HPP_DECL
#define J2CPP_ANDROID_TEXT_METHOD_TOUCH_HPP_DECL


namespace j2cpp { namespace android { namespace widget { class TextView; } } }
namespace j2cpp { namespace android { namespace text { class Layout; } } }
namespace j2cpp { namespace android { namespace text { class Spannable; } } }
namespace j2cpp { namespace android { namespace view { class MotionEvent; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <android/text/Layout.hpp>
#include <android/text/Spannable.hpp>
#include <android/view/MotionEvent.hpp>
#include <android/widget/TextView.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace text { namespace method {

	class Touch;
	class Touch
		: public object<Touch>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)

		explicit Touch(jobject jobj)
		: object<Touch>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static void scrollTo(local_ref< android::widget::TextView >  const&, local_ref< android::text::Layout >  const&, jint, jint);
		static jboolean onTouchEvent(local_ref< android::widget::TextView >  const&, local_ref< android::text::Spannable >  const&, local_ref< android::view::MotionEvent >  const&);
		static jint getInitialScrollX(local_ref< android::widget::TextView >  const&, local_ref< android::text::Spannable >  const&);
		static jint getInitialScrollY(local_ref< android::widget::TextView >  const&, local_ref< android::text::Spannable >  const&);
	}; //class Touch

} //namespace method
} //namespace text
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_METHOD_TOUCH_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_METHOD_TOUCH_HPP_IMPL
#define J2CPP_ANDROID_TEXT_METHOD_TOUCH_HPP_IMPL

namespace j2cpp {



android::text::method::Touch::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


void android::text::method::Touch::scrollTo(local_ref< android::widget::TextView > const &a0, local_ref< android::text::Layout > const &a1, jint a2, jint a3)
{
	return call_static_method<
		android::text::method::Touch::J2CPP_CLASS_NAME,
		android::text::method::Touch::J2CPP_METHOD_NAME(1),
		android::text::method::Touch::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(a0, a1, a2, a3);
}

jboolean android::text::method::Touch::onTouchEvent(local_ref< android::widget::TextView > const &a0, local_ref< android::text::Spannable > const &a1, local_ref< android::view::MotionEvent > const &a2)
{
	return call_static_method<
		android::text::method::Touch::J2CPP_CLASS_NAME,
		android::text::method::Touch::J2CPP_METHOD_NAME(2),
		android::text::method::Touch::J2CPP_METHOD_SIGNATURE(2), 
		jboolean
	>(a0, a1, a2);
}

jint android::text::method::Touch::getInitialScrollX(local_ref< android::widget::TextView > const &a0, local_ref< android::text::Spannable > const &a1)
{
	return call_static_method<
		android::text::method::Touch::J2CPP_CLASS_NAME,
		android::text::method::Touch::J2CPP_METHOD_NAME(3),
		android::text::method::Touch::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(a0, a1);
}

jint android::text::method::Touch::getInitialScrollY(local_ref< android::widget::TextView > const &a0, local_ref< android::text::Spannable > const &a1)
{
	return call_static_method<
		android::text::method::Touch::J2CPP_CLASS_NAME,
		android::text::method::Touch::J2CPP_METHOD_NAME(4),
		android::text::method::Touch::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(a0, a1);
}


J2CPP_DEFINE_CLASS(android::text::method::Touch,"android/text/method/Touch")
J2CPP_DEFINE_METHOD(android::text::method::Touch,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::method::Touch,1,"scrollTo","(Landroid/widget/TextView;Landroid/text/Layout;II)V")
J2CPP_DEFINE_METHOD(android::text::method::Touch,2,"onTouchEvent","(Landroid/widget/TextView;Landroid/text/Spannable;Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::text::method::Touch,3,"getInitialScrollX","(Landroid/widget/TextView;Landroid/text/Spannable;)I")
J2CPP_DEFINE_METHOD(android::text::method::Touch,4,"getInitialScrollY","(Landroid/widget/TextView;Landroid/text/Spannable;)I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_METHOD_TOUCH_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
