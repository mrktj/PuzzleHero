/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.text.ClipboardManager
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_DECL
#define J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace text {

	class ClipboardManager;
	class ClipboardManager
		: public object<ClipboardManager>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		explicit ClipboardManager(jobject jobj)
		: object<ClipboardManager>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		local_ref< java::lang::CharSequence > getText();
		void setText(local_ref< java::lang::CharSequence >  const&);
		jboolean hasText();
	}; //class ClipboardManager

} //namespace text
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_IMPL
#define J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_IMPL

namespace j2cpp {



android::text::ClipboardManager::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< java::lang::CharSequence > android::text::ClipboardManager::getText()
{
	return call_method<
		android::text::ClipboardManager::J2CPP_CLASS_NAME,
		android::text::ClipboardManager::J2CPP_METHOD_NAME(1),
		android::text::ClipboardManager::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::CharSequence >
	>(get_jobject());
}

void android::text::ClipboardManager::setText(local_ref< java::lang::CharSequence > const &a0)
{
	return call_method<
		android::text::ClipboardManager::J2CPP_CLASS_NAME,
		android::text::ClipboardManager::J2CPP_METHOD_NAME(2),
		android::text::ClipboardManager::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject(), a0);
}

jboolean android::text::ClipboardManager::hasText()
{
	return call_method<
		android::text::ClipboardManager::J2CPP_CLASS_NAME,
		android::text::ClipboardManager::J2CPP_METHOD_NAME(3),
		android::text::ClipboardManager::J2CPP_METHOD_SIGNATURE(3), 
		jboolean
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(android::text::ClipboardManager,"android/text/ClipboardManager")
J2CPP_DEFINE_METHOD(android::text::ClipboardManager,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::ClipboardManager,1,"getText","()Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(android::text::ClipboardManager,2,"setText","(Ljava/lang/CharSequence;)V")
J2CPP_DEFINE_METHOD(android::text::ClipboardManager,3,"hasText","()Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
