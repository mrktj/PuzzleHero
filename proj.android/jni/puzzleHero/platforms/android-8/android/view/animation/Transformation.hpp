/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.view.animation.Transformation
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_ANIMATION_TRANSFORMATION_HPP_DECL
#define J2CPP_ANDROID_VIEW_ANIMATION_TRANSFORMATION_HPP_DECL


namespace j2cpp { namespace android { namespace graphics { class Matrix; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <android/graphics/Matrix.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace view { namespace animation {

	class Transformation;
	class Transformation
		: public object<Transformation>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)

		explicit Transformation(jobject jobj)
		: object<Transformation>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		Transformation();
		void clear();
		jint getTransformationType();
		void setTransformationType(jint);
		void set(local_ref< android::view::animation::Transformation >  const&);
		void compose(local_ref< android::view::animation::Transformation >  const&);
		local_ref< android::graphics::Matrix > getMatrix();
		void setAlpha(jfloat);
		jfloat getAlpha();
		local_ref< java::lang::String > toString();
		local_ref< java::lang::String > toShortString();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > TYPE_IDENTITY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > TYPE_ALPHA;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > TYPE_MATRIX;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > TYPE_BOTH;
	}; //class Transformation

} //namespace animation
} //namespace view
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_ANIMATION_TRANSFORMATION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_ANIMATION_TRANSFORMATION_HPP_IMPL
#define J2CPP_ANDROID_VIEW_ANIMATION_TRANSFORMATION_HPP_IMPL

namespace j2cpp {



android::view::animation::Transformation::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::view::animation::Transformation::Transformation()
: object<android::view::animation::Transformation>(
	call_new_object<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(0),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


void android::view::animation::Transformation::clear()
{
	return call_method<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(1),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject());
}

jint android::view::animation::Transformation::getTransformationType()
{
	return call_method<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(2),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(get_jobject());
}

void android::view::animation::Transformation::setTransformationType(jint a0)
{
	return call_method<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(3),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

void android::view::animation::Transformation::set(local_ref< android::view::animation::Transformation > const &a0)
{
	return call_method<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(4),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

void android::view::animation::Transformation::compose(local_ref< android::view::animation::Transformation > const &a0)
{
	return call_method<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(5),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

local_ref< android::graphics::Matrix > android::view::animation::Transformation::getMatrix()
{
	return call_method<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(6),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< android::graphics::Matrix >
	>(get_jobject());
}

void android::view::animation::Transformation::setAlpha(jfloat a0)
{
	return call_method<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(7),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0);
}

jfloat android::view::animation::Transformation::getAlpha()
{
	return call_method<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(8),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(8), 
		jfloat
	>(get_jobject());
}

local_ref< java::lang::String > android::view::animation::Transformation::toString()
{
	return call_method<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(9),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > android::view::animation::Transformation::toShortString()
{
	return call_method<
		android::view::animation::Transformation::J2CPP_CLASS_NAME,
		android::view::animation::Transformation::J2CPP_METHOD_NAME(10),
		android::view::animation::Transformation::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::lang::String >
	>(get_jobject());
}


static_field<
	android::view::animation::Transformation::J2CPP_CLASS_NAME,
	android::view::animation::Transformation::J2CPP_FIELD_NAME(0),
	android::view::animation::Transformation::J2CPP_FIELD_SIGNATURE(0),
	jint
> android::view::animation::Transformation::TYPE_IDENTITY;

static_field<
	android::view::animation::Transformation::J2CPP_CLASS_NAME,
	android::view::animation::Transformation::J2CPP_FIELD_NAME(1),
	android::view::animation::Transformation::J2CPP_FIELD_SIGNATURE(1),
	jint
> android::view::animation::Transformation::TYPE_ALPHA;

static_field<
	android::view::animation::Transformation::J2CPP_CLASS_NAME,
	android::view::animation::Transformation::J2CPP_FIELD_NAME(2),
	android::view::animation::Transformation::J2CPP_FIELD_SIGNATURE(2),
	jint
> android::view::animation::Transformation::TYPE_MATRIX;

static_field<
	android::view::animation::Transformation::J2CPP_CLASS_NAME,
	android::view::animation::Transformation::J2CPP_FIELD_NAME(3),
	android::view::animation::Transformation::J2CPP_FIELD_SIGNATURE(3),
	jint
> android::view::animation::Transformation::TYPE_BOTH;


J2CPP_DEFINE_CLASS(android::view::animation::Transformation,"android/view/animation/Transformation")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,1,"clear","()V")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,2,"getTransformationType","()I")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,3,"setTransformationType","(I)V")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,4,"set","(Landroid/view/animation/Transformation;)V")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,5,"compose","(Landroid/view/animation/Transformation;)V")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,6,"getMatrix","()Landroid/graphics/Matrix;")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,7,"setAlpha","(F)V")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,8,"getAlpha","()F")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,9,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::view::animation::Transformation,10,"toShortString","()Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::view::animation::Transformation,0,"TYPE_IDENTITY","I")
J2CPP_DEFINE_FIELD(android::view::animation::Transformation,1,"TYPE_ALPHA","I")
J2CPP_DEFINE_FIELD(android::view::animation::Transformation,2,"TYPE_MATRIX","I")
J2CPP_DEFINE_FIELD(android::view::animation::Transformation,3,"TYPE_BOTH","I")
J2CPP_DEFINE_FIELD(android::view::animation::Transformation,4,"mMatrix","Landroid/graphics/Matrix;")
J2CPP_DEFINE_FIELD(android::view::animation::Transformation,5,"mAlpha","F")
J2CPP_DEFINE_FIELD(android::view::animation::Transformation,6,"mTransformationType","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_ANIMATION_TRANSFORMATION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
