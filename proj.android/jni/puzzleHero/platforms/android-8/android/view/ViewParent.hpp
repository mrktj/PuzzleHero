/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.view.ViewParent
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_VIEWPARENT_HPP_DECL
#define J2CPP_ANDROID_VIEW_VIEWPARENT_HPP_DECL


namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace view { class ContextMenu; } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace android { namespace graphics { class Point; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <android/graphics/Point.hpp>
#include <android/graphics/Rect.hpp>
#include <android/view/ContextMenu.hpp>
#include <android/view/View.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace view {

	class ViewParent;
	class ViewParent
		: public object<ViewParent>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)

		explicit ViewParent(jobject jobj)
		: object<ViewParent>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void requestLayout();
		jboolean isLayoutRequested();
		void requestTransparentRegion(local_ref< android::view::View >  const&);
		void invalidateChild(local_ref< android::view::View >  const&, local_ref< android::graphics::Rect >  const&);
		local_ref< android::view::ViewParent > invalidateChildInParent(local_ref< array<jint,1> >  const&, local_ref< android::graphics::Rect >  const&);
		local_ref< android::view::ViewParent > getParent();
		void requestChildFocus(local_ref< android::view::View >  const&, local_ref< android::view::View >  const&);
		void recomputeViewAttributes(local_ref< android::view::View >  const&);
		void clearChildFocus(local_ref< android::view::View >  const&);
		jboolean getChildVisibleRect(local_ref< android::view::View >  const&, local_ref< android::graphics::Rect >  const&, local_ref< android::graphics::Point >  const&);
		local_ref< android::view::View > focusSearch(local_ref< android::view::View >  const&, jint);
		void bringChildToFront(local_ref< android::view::View >  const&);
		void focusableViewAvailable(local_ref< android::view::View >  const&);
		jboolean showContextMenuForChild(local_ref< android::view::View >  const&);
		void createContextMenu(local_ref< android::view::ContextMenu >  const&);
		void childDrawableStateChanged(local_ref< android::view::View >  const&);
		void requestDisallowInterceptTouchEvent(jboolean);
		jboolean requestChildRectangleOnScreen(local_ref< android::view::View >  const&, local_ref< android::graphics::Rect >  const&, jboolean);
	}; //class ViewParent

} //namespace view
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_VIEWPARENT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_VIEWPARENT_HPP_IMPL
#define J2CPP_ANDROID_VIEW_VIEWPARENT_HPP_IMPL

namespace j2cpp {



android::view::ViewParent::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void android::view::ViewParent::requestLayout()
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(0),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject());
}

jboolean android::view::ViewParent::isLayoutRequested()
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(1),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(1), 
		jboolean
	>(get_jobject());
}

void android::view::ViewParent::requestTransparentRegion(local_ref< android::view::View > const &a0)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(2),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject(), a0);
}

void android::view::ViewParent::invalidateChild(local_ref< android::view::View > const &a0, local_ref< android::graphics::Rect > const &a1)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(3),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0, a1);
}

local_ref< android::view::ViewParent > android::view::ViewParent::invalidateChildInParent(local_ref< array<jint,1> > const &a0, local_ref< android::graphics::Rect > const &a1)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(4),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< android::view::ViewParent >
	>(get_jobject(), a0, a1);
}

local_ref< android::view::ViewParent > android::view::ViewParent::getParent()
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(5),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< android::view::ViewParent >
	>(get_jobject());
}

void android::view::ViewParent::requestChildFocus(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(6),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0, a1);
}

void android::view::ViewParent::recomputeViewAttributes(local_ref< android::view::View > const &a0)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(7),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0);
}

void android::view::ViewParent::clearChildFocus(local_ref< android::view::View > const &a0)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(8),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::ViewParent::getChildVisibleRect(local_ref< android::view::View > const &a0, local_ref< android::graphics::Rect > const &a1, local_ref< android::graphics::Point > const &a2)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(9),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(get_jobject(), a0, a1, a2);
}

local_ref< android::view::View > android::view::ViewParent::focusSearch(local_ref< android::view::View > const &a0, jint a1)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(10),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< android::view::View >
	>(get_jobject(), a0, a1);
}

void android::view::ViewParent::bringChildToFront(local_ref< android::view::View > const &a0)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(11),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0);
}

void android::view::ViewParent::focusableViewAvailable(local_ref< android::view::View > const &a0)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(12),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(12), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::ViewParent::showContextMenuForChild(local_ref< android::view::View > const &a0)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(13),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(get_jobject(), a0);
}

void android::view::ViewParent::createContextMenu(local_ref< android::view::ContextMenu > const &a0)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(14),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(14), 
		void
	>(get_jobject(), a0);
}

void android::view::ViewParent::childDrawableStateChanged(local_ref< android::view::View > const &a0)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(15),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(15), 
		void
	>(get_jobject(), a0);
}

void android::view::ViewParent::requestDisallowInterceptTouchEvent(jboolean a0)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(16),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(16), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::ViewParent::requestChildRectangleOnScreen(local_ref< android::view::View > const &a0, local_ref< android::graphics::Rect > const &a1, jboolean a2)
{
	return call_method<
		android::view::ViewParent::J2CPP_CLASS_NAME,
		android::view::ViewParent::J2CPP_METHOD_NAME(17),
		android::view::ViewParent::J2CPP_METHOD_SIGNATURE(17), 
		jboolean
	>(get_jobject(), a0, a1, a2);
}


J2CPP_DEFINE_CLASS(android::view::ViewParent,"android/view/ViewParent")
J2CPP_DEFINE_METHOD(android::view::ViewParent,0,"requestLayout","()V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,1,"isLayoutRequested","()Z")
J2CPP_DEFINE_METHOD(android::view::ViewParent,2,"requestTransparentRegion","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,3,"invalidateChild","(Landroid/view/View;Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,4,"invalidateChildInParent","([ILandroid/graphics/Rect;)Landroid/view/ViewParent;")
J2CPP_DEFINE_METHOD(android::view::ViewParent,5,"getParent","()Landroid/view/ViewParent;")
J2CPP_DEFINE_METHOD(android::view::ViewParent,6,"requestChildFocus","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,7,"recomputeViewAttributes","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,8,"clearChildFocus","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,9,"getChildVisibleRect","(Landroid/view/View;Landroid/graphics/Rect;Landroid/graphics/Point;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewParent,10,"focusSearch","(Landroid/view/View;I)Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::ViewParent,11,"bringChildToFront","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,12,"focusableViewAvailable","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,13,"showContextMenuForChild","(Landroid/view/View;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewParent,14,"createContextMenu","(Landroid/view/ContextMenu;)V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,15,"childDrawableStateChanged","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,16,"requestDisallowInterceptTouchEvent","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewParent,17,"requestChildRectangleOnScreen","(Landroid/view/View;Landroid/graphics/Rect;Z)Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_VIEWPARENT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
