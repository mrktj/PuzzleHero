/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.util.EventLog
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_EVENTLOG_HPP_DECL
#define J2CPP_ANDROID_UTIL_EVENTLOG_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Collection; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/Collection.hpp>


namespace j2cpp {

namespace android { namespace util {

	class EventLog;
	namespace EventLog_ {

		class Event;
		class Event
			: public object<Event>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)

			explicit Event(jobject jobj)
			: object<Event>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			jint getProcessId();
			jint getThreadId();
			jlong getTimeNanos();
			jint getTag();
			local_ref< java::lang::Object > getData();
		}; //class Event

	} //namespace EventLog_

	class EventLog
		: public object<EventLog>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)

		typedef EventLog_::Event Event;

		explicit EventLog(jobject jobj)
		: object<EventLog>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		EventLog();
		static jint writeEvent(jint, jint);
		static jint writeEvent(jint, jlong);
		static jint writeEvent(jint, local_ref< java::lang::String >  const&);
		static jint writeEvent(jint, local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		static void readEvents(local_ref< array<jint,1> >  const&, local_ref< java::util::Collection >  const&);
		static local_ref< java::lang::String > getTagName(jint);
		static jint getTagCode(local_ref< java::lang::String >  const&);
	}; //class EventLog

} //namespace util
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_EVENTLOG_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_EVENTLOG_HPP_IMPL
#define J2CPP_ANDROID_UTIL_EVENTLOG_HPP_IMPL

namespace j2cpp {




android::util::EventLog_::Event::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


jint android::util::EventLog_::Event::getProcessId()
{
	return call_method<
		android::util::EventLog_::Event::J2CPP_CLASS_NAME,
		android::util::EventLog_::Event::J2CPP_METHOD_NAME(1),
		android::util::EventLog_::Event::J2CPP_METHOD_SIGNATURE(1), 
		jint
	>(get_jobject());
}

jint android::util::EventLog_::Event::getThreadId()
{
	return call_method<
		android::util::EventLog_::Event::J2CPP_CLASS_NAME,
		android::util::EventLog_::Event::J2CPP_METHOD_NAME(2),
		android::util::EventLog_::Event::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(get_jobject());
}

jlong android::util::EventLog_::Event::getTimeNanos()
{
	return call_method<
		android::util::EventLog_::Event::J2CPP_CLASS_NAME,
		android::util::EventLog_::Event::J2CPP_METHOD_NAME(3),
		android::util::EventLog_::Event::J2CPP_METHOD_SIGNATURE(3), 
		jlong
	>(get_jobject());
}

jint android::util::EventLog_::Event::getTag()
{
	return call_method<
		android::util::EventLog_::Event::J2CPP_CLASS_NAME,
		android::util::EventLog_::Event::J2CPP_METHOD_NAME(4),
		android::util::EventLog_::Event::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

local_ref< java::lang::Object > android::util::EventLog_::Event::getData()
{
	return call_method<
		android::util::EventLog_::Event::J2CPP_CLASS_NAME,
		android::util::EventLog_::Event::J2CPP_METHOD_NAME(5),
		android::util::EventLog_::Event::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::lang::Object >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(android::util::EventLog_::Event,"android/util/EventLog$Event")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,1,"getProcessId","()I")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,2,"getThreadId","()I")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,3,"getTimeNanos","()J")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,4,"getTag","()I")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,5,"getData","()Ljava/lang/Object;")



android::util::EventLog::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::util::EventLog::EventLog()
: object<android::util::EventLog>(
	call_new_object<
		android::util::EventLog::J2CPP_CLASS_NAME,
		android::util::EventLog::J2CPP_METHOD_NAME(0),
		android::util::EventLog::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


jint android::util::EventLog::writeEvent(jint a0, jint a1)
{
	return call_static_method<
		android::util::EventLog::J2CPP_CLASS_NAME,
		android::util::EventLog::J2CPP_METHOD_NAME(1),
		android::util::EventLog::J2CPP_METHOD_SIGNATURE(1), 
		jint
	>(a0, a1);
}

jint android::util::EventLog::writeEvent(jint a0, jlong a1)
{
	return call_static_method<
		android::util::EventLog::J2CPP_CLASS_NAME,
		android::util::EventLog::J2CPP_METHOD_NAME(2),
		android::util::EventLog::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(a0, a1);
}

jint android::util::EventLog::writeEvent(jint a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		android::util::EventLog::J2CPP_CLASS_NAME,
		android::util::EventLog::J2CPP_METHOD_NAME(3),
		android::util::EventLog::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(a0, a1);
}

jint android::util::EventLog::writeEvent(jint a0, local_ref< array< local_ref< java::lang::Object >, 1> > const &a1)
{
	return call_static_method<
		android::util::EventLog::J2CPP_CLASS_NAME,
		android::util::EventLog::J2CPP_METHOD_NAME(4),
		android::util::EventLog::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(a0, a1);
}

void android::util::EventLog::readEvents(local_ref< array<jint,1> > const &a0, local_ref< java::util::Collection > const &a1)
{
	return call_static_method<
		android::util::EventLog::J2CPP_CLASS_NAME,
		android::util::EventLog::J2CPP_METHOD_NAME(5),
		android::util::EventLog::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(a0, a1);
}

local_ref< java::lang::String > android::util::EventLog::getTagName(jint a0)
{
	return call_static_method<
		android::util::EventLog::J2CPP_CLASS_NAME,
		android::util::EventLog::J2CPP_METHOD_NAME(6),
		android::util::EventLog::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::lang::String >
	>(a0);
}

jint android::util::EventLog::getTagCode(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::util::EventLog::J2CPP_CLASS_NAME,
		android::util::EventLog::J2CPP_METHOD_NAME(7),
		android::util::EventLog::J2CPP_METHOD_SIGNATURE(7), 
		jint
	>(a0);
}


J2CPP_DEFINE_CLASS(android::util::EventLog,"android/util/EventLog")
J2CPP_DEFINE_METHOD(android::util::EventLog,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::util::EventLog,1,"writeEvent","(II)I")
J2CPP_DEFINE_METHOD(android::util::EventLog,2,"writeEvent","(IJ)I")
J2CPP_DEFINE_METHOD(android::util::EventLog,3,"writeEvent","(ILjava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::util::EventLog,4,"writeEvent","(I[java.lang.Object)I")
J2CPP_DEFINE_METHOD(android::util::EventLog,5,"readEvents","([ILjava/util/Collection;)V")
J2CPP_DEFINE_METHOD(android::util::EventLog,6,"getTagName","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::util::EventLog,7,"getTagCode","(Ljava/lang/String;)I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_EVENTLOG_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
