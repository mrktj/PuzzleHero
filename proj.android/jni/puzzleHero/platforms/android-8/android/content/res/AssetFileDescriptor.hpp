/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.content.res.AssetFileDescriptor
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_RES_ASSETFILEDESCRIPTOR_HPP_DECL
#define J2CPP_ANDROID_CONTENT_RES_ASSETFILEDESCRIPTOR_HPP_DECL


namespace j2cpp { namespace android { namespace os { class Parcelable; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { class ParcelFileDescriptor; } } }
namespace j2cpp { namespace android { namespace os { namespace ParcelFileDescriptor_ { class AutoCloseInputStream; } } } }
namespace j2cpp { namespace android { namespace os { namespace ParcelFileDescriptor_ { class AutoCloseOutputStream; } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }
namespace j2cpp { namespace java { namespace io { class FileDescriptor; } } }
namespace j2cpp { namespace java { namespace io { class FileOutputStream; } } }
namespace j2cpp { namespace java { namespace io { class FileInputStream; } } }
namespace j2cpp { namespace java { namespace io { class Closeable; } } }
namespace j2cpp { namespace java { namespace io { class Flushable; } } }
namespace j2cpp { namespace java { namespace io { class OutputStream; } } }


#include <android/os/Parcel.hpp>
#include <android/os/ParcelFileDescriptor.hpp>
#include <android/os/Parcelable.hpp>
#include <java/io/Closeable.hpp>
#include <java/io/FileDescriptor.hpp>
#include <java/io/FileInputStream.hpp>
#include <java/io/FileOutputStream.hpp>
#include <java/io/Flushable.hpp>
#include <java/io/InputStream.hpp>
#include <java/io/OutputStream.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace content { namespace res {

	class AssetFileDescriptor;
	namespace AssetFileDescriptor_ {

		class AutoCloseInputStream;
		class AutoCloseInputStream
			: public object<AutoCloseInputStream>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)
			J2CPP_DECLARE_METHOD(6)
			J2CPP_DECLARE_METHOD(7)
			J2CPP_DECLARE_METHOD(8)

			explicit AutoCloseInputStream(jobject jobj)
			: object<AutoCloseInputStream>(jobj)
			{
			}

			operator local_ref<android::os::ParcelFileDescriptor_::AutoCloseInputStream>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::io::InputStream>() const;
			operator local_ref<java::io::FileInputStream>() const;
			operator local_ref<java::io::Closeable>() const;


			AutoCloseInputStream(local_ref< android::content::res::AssetFileDescriptor > const&);
			jint available();
			jint read();
			jint read(local_ref< array<jbyte,1> >  const&, jint, jint);
			jint read(local_ref< array<jbyte,1> >  const&);
			jlong skip(jlong);
			void mark(jint);
			jboolean markSupported();
			void reset();
		}; //class AutoCloseInputStream

		class AutoCloseOutputStream;
		class AutoCloseOutputStream
			: public object<AutoCloseOutputStream>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)

			explicit AutoCloseOutputStream(jobject jobj)
			: object<AutoCloseOutputStream>(jobj)
			{
			}

			operator local_ref<android::os::ParcelFileDescriptor_::AutoCloseOutputStream>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::io::FileOutputStream>() const;
			operator local_ref<java::io::Closeable>() const;
			operator local_ref<java::io::Flushable>() const;
			operator local_ref<java::io::OutputStream>() const;


			AutoCloseOutputStream(local_ref< android::content::res::AssetFileDescriptor > const&);
			void write(local_ref< array<jbyte,1> >  const&, jint, jint);
			void write(local_ref< array<jbyte,1> >  const&);
			void write(jint);
		}; //class AutoCloseOutputStream

	} //namespace AssetFileDescriptor_

	class AssetFileDescriptor
		: public object<AssetFileDescriptor>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)

		typedef AssetFileDescriptor_::AutoCloseInputStream AutoCloseInputStream;
		typedef AssetFileDescriptor_::AutoCloseOutputStream AutoCloseOutputStream;

		explicit AssetFileDescriptor(jobject jobj)
		: object<AssetFileDescriptor>(jobj)
		{
		}

		operator local_ref<android::os::Parcelable>() const;
		operator local_ref<java::lang::Object>() const;


		AssetFileDescriptor(local_ref< android::os::ParcelFileDescriptor > const&, jlong, jlong);
		local_ref< android::os::ParcelFileDescriptor > getParcelFileDescriptor();
		local_ref< java::io::FileDescriptor > getFileDescriptor();
		jlong getStartOffset();
		jlong getLength();
		jlong getDeclaredLength();
		void close();
		local_ref< java::io::FileInputStream > createInputStream();
		local_ref< java::io::FileOutputStream > createOutputStream();
		local_ref< java::lang::String > toString();
		jint describeContents();
		void writeToParcel(local_ref< android::os::Parcel >  const&, jint);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jlong > UNKNOWN_LENGTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class AssetFileDescriptor

} //namespace res
} //namespace content
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_RES_ASSETFILEDESCRIPTOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_RES_ASSETFILEDESCRIPTOR_HPP_IMPL
#define J2CPP_ANDROID_CONTENT_RES_ASSETFILEDESCRIPTOR_HPP_IMPL

namespace j2cpp {




android::content::res::AssetFileDescriptor_::AutoCloseInputStream::operator local_ref<android::os::ParcelFileDescriptor_::AutoCloseInputStream>() const
{
	return local_ref<android::os::ParcelFileDescriptor_::AutoCloseInputStream>(get_jobject());
}

android::content::res::AssetFileDescriptor_::AutoCloseInputStream::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::content::res::AssetFileDescriptor_::AutoCloseInputStream::operator local_ref<java::io::InputStream>() const
{
	return local_ref<java::io::InputStream>(get_jobject());
}

android::content::res::AssetFileDescriptor_::AutoCloseInputStream::operator local_ref<java::io::FileInputStream>() const
{
	return local_ref<java::io::FileInputStream>(get_jobject());
}

android::content::res::AssetFileDescriptor_::AutoCloseInputStream::operator local_ref<java::io::Closeable>() const
{
	return local_ref<java::io::Closeable>(get_jobject());
}


android::content::res::AssetFileDescriptor_::AutoCloseInputStream::AutoCloseInputStream(local_ref< android::content::res::AssetFileDescriptor > const &a0)
: object<android::content::res::AssetFileDescriptor_::AutoCloseInputStream>(
	call_new_object<
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_NAME(0),
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


jint android::content::res::AssetFileDescriptor_::AutoCloseInputStream::available()
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_NAME(1),
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_SIGNATURE(1), 
		jint
	>(get_jobject());
}

jint android::content::res::AssetFileDescriptor_::AutoCloseInputStream::read()
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_NAME(2),
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(get_jobject());
}

jint android::content::res::AssetFileDescriptor_::AutoCloseInputStream::read(local_ref< array<jbyte,1> > const &a0, jint a1, jint a2)
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_NAME(3),
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(get_jobject(), a0, a1, a2);
}

jint android::content::res::AssetFileDescriptor_::AutoCloseInputStream::read(local_ref< array<jbyte,1> > const &a0)
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_NAME(4),
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject(), a0);
}

jlong android::content::res::AssetFileDescriptor_::AutoCloseInputStream::skip(jlong a0)
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_NAME(5),
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_SIGNATURE(5), 
		jlong
	>(get_jobject(), a0);
}

void android::content::res::AssetFileDescriptor_::AutoCloseInputStream::mark(jint a0)
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_NAME(6),
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0);
}

jboolean android::content::res::AssetFileDescriptor_::AutoCloseInputStream::markSupported()
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_NAME(7),
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject());
}

void android::content::res::AssetFileDescriptor_::AutoCloseInputStream::reset()
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_NAME(8),
		android::content::res::AssetFileDescriptor_::AutoCloseInputStream::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(android::content::res::AssetFileDescriptor_::AutoCloseInputStream,"android/content/res/AssetFileDescriptor$AutoCloseInputStream")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseInputStream,0,"<init>","(Landroid/content/res/AssetFileDescriptor;)V")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseInputStream,1,"available","()I")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseInputStream,2,"read","()I")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseInputStream,3,"read","([BII)I")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseInputStream,4,"read","([B)I")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseInputStream,5,"skip","(J)J")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseInputStream,6,"mark","(I)V")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseInputStream,7,"markSupported","()Z")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseInputStream,8,"reset","()V")


android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::operator local_ref<android::os::ParcelFileDescriptor_::AutoCloseOutputStream>() const
{
	return local_ref<android::os::ParcelFileDescriptor_::AutoCloseOutputStream>(get_jobject());
}

android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::operator local_ref<java::io::FileOutputStream>() const
{
	return local_ref<java::io::FileOutputStream>(get_jobject());
}

android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::operator local_ref<java::io::Closeable>() const
{
	return local_ref<java::io::Closeable>(get_jobject());
}

android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::operator local_ref<java::io::Flushable>() const
{
	return local_ref<java::io::Flushable>(get_jobject());
}

android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::operator local_ref<java::io::OutputStream>() const
{
	return local_ref<java::io::OutputStream>(get_jobject());
}


android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::AutoCloseOutputStream(local_ref< android::content::res::AssetFileDescriptor > const &a0)
: object<android::content::res::AssetFileDescriptor_::AutoCloseOutputStream>(
	call_new_object<
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_METHOD_NAME(0),
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


void android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::write(local_ref< array<jbyte,1> > const &a0, jint a1, jint a2)
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_METHOD_NAME(1),
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0, a1, a2);
}

void android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::write(local_ref< array<jbyte,1> > const &a0)
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_METHOD_NAME(2),
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject(), a0);
}

void android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::write(jint a0)
{
	return call_method<
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_METHOD_NAME(3),
		android::content::res::AssetFileDescriptor_::AutoCloseOutputStream::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(android::content::res::AssetFileDescriptor_::AutoCloseOutputStream,"android/content/res/AssetFileDescriptor$AutoCloseOutputStream")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseOutputStream,0,"<init>","(Landroid/content/res/AssetFileDescriptor;)V")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseOutputStream,1,"write","([BII)V")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseOutputStream,2,"write","([B)V")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor_::AutoCloseOutputStream,3,"write","(I)V")



android::content::res::AssetFileDescriptor::operator local_ref<android::os::Parcelable>() const
{
	return local_ref<android::os::Parcelable>(get_jobject());
}

android::content::res::AssetFileDescriptor::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::content::res::AssetFileDescriptor::AssetFileDescriptor(local_ref< android::os::ParcelFileDescriptor > const &a0, jlong a1, jlong a2)
: object<android::content::res::AssetFileDescriptor>(
	call_new_object<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(0),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1, a2)
)
{
}


local_ref< android::os::ParcelFileDescriptor > android::content::res::AssetFileDescriptor::getParcelFileDescriptor()
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(1),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::os::ParcelFileDescriptor >
	>(get_jobject());
}

local_ref< java::io::FileDescriptor > android::content::res::AssetFileDescriptor::getFileDescriptor()
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(2),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::io::FileDescriptor >
	>(get_jobject());
}

jlong android::content::res::AssetFileDescriptor::getStartOffset()
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(3),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(3), 
		jlong
	>(get_jobject());
}

jlong android::content::res::AssetFileDescriptor::getLength()
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(4),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(4), 
		jlong
	>(get_jobject());
}

jlong android::content::res::AssetFileDescriptor::getDeclaredLength()
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(5),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(5), 
		jlong
	>(get_jobject());
}

void android::content::res::AssetFileDescriptor::close()
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(6),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject());
}

local_ref< java::io::FileInputStream > android::content::res::AssetFileDescriptor::createInputStream()
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(7),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::io::FileInputStream >
	>(get_jobject());
}

local_ref< java::io::FileOutputStream > android::content::res::AssetFileDescriptor::createOutputStream()
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(8),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::io::FileOutputStream >
	>(get_jobject());
}

local_ref< java::lang::String > android::content::res::AssetFileDescriptor::toString()
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(9),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint android::content::res::AssetFileDescriptor::describeContents()
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(10),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(10), 
		jint
	>(get_jobject());
}

void android::content::res::AssetFileDescriptor::writeToParcel(local_ref< android::os::Parcel > const &a0, jint a1)
{
	return call_method<
		android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_NAME(11),
		android::content::res::AssetFileDescriptor::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0, a1);
}



static_field<
	android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
	android::content::res::AssetFileDescriptor::J2CPP_FIELD_NAME(0),
	android::content::res::AssetFileDescriptor::J2CPP_FIELD_SIGNATURE(0),
	jlong
> android::content::res::AssetFileDescriptor::UNKNOWN_LENGTH;

static_field<
	android::content::res::AssetFileDescriptor::J2CPP_CLASS_NAME,
	android::content::res::AssetFileDescriptor::J2CPP_FIELD_NAME(1),
	android::content::res::AssetFileDescriptor::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::os::Parcelable_::Creator >
> android::content::res::AssetFileDescriptor::CREATOR;


J2CPP_DEFINE_CLASS(android::content::res::AssetFileDescriptor,"android/content/res/AssetFileDescriptor")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,0,"<init>","(Landroid/os/ParcelFileDescriptor;JJ)V")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,1,"getParcelFileDescriptor","()Landroid/os/ParcelFileDescriptor;")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,2,"getFileDescriptor","()Ljava/io/FileDescriptor;")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,3,"getStartOffset","()J")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,4,"getLength","()J")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,5,"getDeclaredLength","()J")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,6,"close","()V")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,7,"createInputStream","()Ljava/io/FileInputStream;")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,8,"createOutputStream","()Ljava/io/FileOutputStream;")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,9,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,10,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,11,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::content::res::AssetFileDescriptor,12,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::content::res::AssetFileDescriptor,0,"UNKNOWN_LENGTH","J")
J2CPP_DEFINE_FIELD(android::content::res::AssetFileDescriptor,1,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_RES_ASSETFILEDESCRIPTOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
