/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.content.UriMatcher
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_DECL
#define J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_DECL


namespace j2cpp { namespace android { namespace net { class Uri; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <android/net/Uri.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace content {

	class UriMatcher;
	class UriMatcher
		: public object<UriMatcher>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_FIELD(0)

		explicit UriMatcher(jobject jobj)
		: object<UriMatcher>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		UriMatcher(jint);
		void addURI(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, jint);
		jint match(local_ref< android::net::Uri >  const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > NO_MATCH;
	}; //class UriMatcher

} //namespace content
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_IMPL
#define J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_IMPL

namespace j2cpp {



android::content::UriMatcher::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::content::UriMatcher::UriMatcher(jint a0)
: object<android::content::UriMatcher>(
	call_new_object<
		android::content::UriMatcher::J2CPP_CLASS_NAME,
		android::content::UriMatcher::J2CPP_METHOD_NAME(0),
		android::content::UriMatcher::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


void android::content::UriMatcher::addURI(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, jint a2)
{
	return call_method<
		android::content::UriMatcher::J2CPP_CLASS_NAME,
		android::content::UriMatcher::J2CPP_METHOD_NAME(1),
		android::content::UriMatcher::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0, a1, a2);
}

jint android::content::UriMatcher::match(local_ref< android::net::Uri > const &a0)
{
	return call_method<
		android::content::UriMatcher::J2CPP_CLASS_NAME,
		android::content::UriMatcher::J2CPP_METHOD_NAME(2),
		android::content::UriMatcher::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(get_jobject(), a0);
}


static_field<
	android::content::UriMatcher::J2CPP_CLASS_NAME,
	android::content::UriMatcher::J2CPP_FIELD_NAME(0),
	android::content::UriMatcher::J2CPP_FIELD_SIGNATURE(0),
	jint
> android::content::UriMatcher::NO_MATCH;


J2CPP_DEFINE_CLASS(android::content::UriMatcher,"android/content/UriMatcher")
J2CPP_DEFINE_METHOD(android::content::UriMatcher,0,"<init>","(I)V")
J2CPP_DEFINE_METHOD(android::content::UriMatcher,1,"addURI","(Ljava/lang/String;Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::content::UriMatcher,2,"match","(Landroid/net/Uri;)I")
J2CPP_DEFINE_FIELD(android::content::UriMatcher,0,"NO_MATCH","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
