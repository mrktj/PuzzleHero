/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.widget.TimePicker
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_DECL
#define J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_DECL


namespace j2cpp { namespace android { namespace widget { class FrameLayout; } } }
namespace j2cpp { namespace android { namespace widget { namespace TimePicker_ { class OnTimeChangedListener; } } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }
namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace view { class ViewGroup; } } }
namespace j2cpp { namespace android { namespace view { class ViewManager; } } }
namespace j2cpp { namespace android { namespace view { namespace accessibility { class AccessibilityEventSource; } } } }
namespace j2cpp { namespace android { namespace view { class ViewParent; } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { namespace Drawable_ { class Callback; } } } } }
namespace j2cpp { namespace java { namespace lang { class Integer; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Boolean; } } }


#include <android/content/Context.hpp>
#include <android/graphics/drawable/Drawable.hpp>
#include <android/util/AttributeSet.hpp>
#include <android/view/View.hpp>
#include <android/view/ViewGroup.hpp>
#include <android/view/ViewManager.hpp>
#include <android/view/ViewParent.hpp>
#include <android/view/accessibility/AccessibilityEventSource.hpp>
#include <android/widget/FrameLayout.hpp>
#include <android/widget/TimePicker.hpp>
#include <java/lang/Boolean.hpp>
#include <java/lang/Integer.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace widget {

	class TimePicker;
	namespace TimePicker_ {

		class OnTimeChangedListener;
		class OnTimeChangedListener
			: public object<OnTimeChangedListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit OnTimeChangedListener(jobject jobj)
			: object<OnTimeChangedListener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			void onTimeChanged(local_ref< android::widget::TimePicker >  const&, jint, jint);
		}; //class OnTimeChangedListener

	} //namespace TimePicker_

	class TimePicker
		: public object<TimePicker>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)

		typedef TimePicker_::OnTimeChangedListener OnTimeChangedListener;

		explicit TimePicker(jobject jobj)
		: object<TimePicker>(jobj)
		{
		}

		operator local_ref<android::widget::FrameLayout>() const;
		operator local_ref<android::view::View>() const;
		operator local_ref<android::view::ViewGroup>() const;
		operator local_ref<android::view::ViewManager>() const;
		operator local_ref<android::view::accessibility::AccessibilityEventSource>() const;
		operator local_ref<android::view::ViewParent>() const;
		operator local_ref<android::graphics::drawable::Drawable_::Callback>() const;
		operator local_ref<java::lang::Object>() const;


		TimePicker(local_ref< android::content::Context > const&);
		TimePicker(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&);
		TimePicker(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&, jint);
		void setEnabled(jboolean);
		void setOnTimeChangedListener(local_ref< android::widget::TimePicker_::OnTimeChangedListener >  const&);
		local_ref< java::lang::Integer > getCurrentHour();
		void setCurrentHour(local_ref< java::lang::Integer >  const&);
		void setIs24HourView(local_ref< java::lang::Boolean >  const&);
		jboolean is24HourView();
		local_ref< java::lang::Integer > getCurrentMinute();
		void setCurrentMinute(local_ref< java::lang::Integer >  const&);
		jint getBaseline();
	}; //class TimePicker

} //namespace widget
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_IMPL
#define J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_IMPL

namespace j2cpp {




android::widget::TimePicker_::OnTimeChangedListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void android::widget::TimePicker_::OnTimeChangedListener::onTimeChanged(local_ref< android::widget::TimePicker > const &a0, jint a1, jint a2)
{
	return call_method<
		android::widget::TimePicker_::OnTimeChangedListener::J2CPP_CLASS_NAME,
		android::widget::TimePicker_::OnTimeChangedListener::J2CPP_METHOD_NAME(0),
		android::widget::TimePicker_::OnTimeChangedListener::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject(), a0, a1, a2);
}


J2CPP_DEFINE_CLASS(android::widget::TimePicker_::OnTimeChangedListener,"android/widget/TimePicker$OnTimeChangedListener")
J2CPP_DEFINE_METHOD(android::widget::TimePicker_::OnTimeChangedListener,0,"onTimeChanged","(Landroid/widget/TimePicker;II)V")



android::widget::TimePicker::operator local_ref<android::widget::FrameLayout>() const
{
	return local_ref<android::widget::FrameLayout>(get_jobject());
}

android::widget::TimePicker::operator local_ref<android::view::View>() const
{
	return local_ref<android::view::View>(get_jobject());
}

android::widget::TimePicker::operator local_ref<android::view::ViewGroup>() const
{
	return local_ref<android::view::ViewGroup>(get_jobject());
}

android::widget::TimePicker::operator local_ref<android::view::ViewManager>() const
{
	return local_ref<android::view::ViewManager>(get_jobject());
}

android::widget::TimePicker::operator local_ref<android::view::accessibility::AccessibilityEventSource>() const
{
	return local_ref<android::view::accessibility::AccessibilityEventSource>(get_jobject());
}

android::widget::TimePicker::operator local_ref<android::view::ViewParent>() const
{
	return local_ref<android::view::ViewParent>(get_jobject());
}

android::widget::TimePicker::operator local_ref<android::graphics::drawable::Drawable_::Callback>() const
{
	return local_ref<android::graphics::drawable::Drawable_::Callback>(get_jobject());
}

android::widget::TimePicker::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::widget::TimePicker::TimePicker(local_ref< android::content::Context > const &a0)
: object<android::widget::TimePicker>(
	call_new_object<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(0),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



android::widget::TimePicker::TimePicker(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
: object<android::widget::TimePicker>(
	call_new_object<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(1),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1)
)
{
}



android::widget::TimePicker::TimePicker(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1, jint a2)
: object<android::widget::TimePicker>(
	call_new_object<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(2),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1, a2)
)
{
}


void android::widget::TimePicker::setEnabled(jboolean a0)
{
	return call_method<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(3),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}



void android::widget::TimePicker::setOnTimeChangedListener(local_ref< android::widget::TimePicker_::OnTimeChangedListener > const &a0)
{
	return call_method<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(6),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::Integer > android::widget::TimePicker::getCurrentHour()
{
	return call_method<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(7),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::lang::Integer >
	>(get_jobject());
}

void android::widget::TimePicker::setCurrentHour(local_ref< java::lang::Integer > const &a0)
{
	return call_method<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(8),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0);
}

void android::widget::TimePicker::setIs24HourView(local_ref< java::lang::Boolean > const &a0)
{
	return call_method<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(9),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject(), a0);
}

jboolean android::widget::TimePicker::is24HourView()
{
	return call_method<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(10),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(10), 
		jboolean
	>(get_jobject());
}

local_ref< java::lang::Integer > android::widget::TimePicker::getCurrentMinute()
{
	return call_method<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(11),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::lang::Integer >
	>(get_jobject());
}

void android::widget::TimePicker::setCurrentMinute(local_ref< java::lang::Integer > const &a0)
{
	return call_method<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(12),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(12), 
		void
	>(get_jobject(), a0);
}

jint android::widget::TimePicker::getBaseline()
{
	return call_method<
		android::widget::TimePicker::J2CPP_CLASS_NAME,
		android::widget::TimePicker::J2CPP_METHOD_NAME(13),
		android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(13), 
		jint
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(android::widget::TimePicker,"android/widget/TimePicker")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,1,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,2,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;I)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,3,"setEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,4,"onSaveInstanceState","()Landroid/os/Parcelable;")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,5,"onRestoreInstanceState","(Landroid/os/Parcelable;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,6,"setOnTimeChangedListener","(Landroid/widget/TimePicker$OnTimeChangedListener;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,7,"getCurrentHour","()Ljava/lang/Integer;")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,8,"setCurrentHour","(Ljava/lang/Integer;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,9,"setIs24HourView","(Ljava/lang/Boolean;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,10,"is24HourView","()Z")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,11,"getCurrentMinute","()Ljava/lang/Integer;")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,12,"setCurrentMinute","(Ljava/lang/Integer;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,13,"getBaseline","()I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
