/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.json.JSONArray
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_JSON_JSONARRAY_HPP_DECL
#define J2CPP_ORG_JSON_JSONARRAY_HPP_DECL


namespace j2cpp { namespace org { namespace json { class JSONTokener; } } }
namespace j2cpp { namespace org { namespace json { class JSONObject; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Collection; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/Collection.hpp>
#include <org/json/JSONObject.hpp>
#include <org/json/JSONTokener.hpp>


namespace j2cpp {

namespace org { namespace json {

	class JSONArray;
	class JSONArray
		: public object<JSONArray>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)

		explicit JSONArray(jobject jobj)
		: object<JSONArray>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		JSONArray();
		JSONArray(local_ref< java::util::Collection > const&);
		JSONArray(local_ref< org::json::JSONTokener > const&);
		JSONArray(local_ref< java::lang::String > const&);
		jint length();
		local_ref< org::json::JSONArray > put(jboolean);
		local_ref< org::json::JSONArray > put(jdouble);
		local_ref< org::json::JSONArray > put(jint);
		local_ref< org::json::JSONArray > put(jlong);
		local_ref< org::json::JSONArray > put(local_ref< java::lang::Object >  const&);
		local_ref< org::json::JSONArray > put(jint, jboolean);
		local_ref< org::json::JSONArray > put(jint, jdouble);
		local_ref< org::json::JSONArray > put(jint, jint);
		local_ref< org::json::JSONArray > put(jint, jlong);
		local_ref< org::json::JSONArray > put(jint, local_ref< java::lang::Object >  const&);
		jboolean isNull(jint);
		local_ref< java::lang::Object > get(jint);
		local_ref< java::lang::Object > opt(jint);
		jboolean getBoolean(jint);
		jboolean optBoolean(jint);
		jboolean optBoolean(jint, jboolean);
		jdouble getDouble(jint);
		jdouble optDouble(jint);
		jdouble optDouble(jint, jdouble);
		jint getInt(jint);
		jint optInt(jint);
		jint optInt(jint, jint);
		jlong getLong(jint);
		jlong optLong(jint);
		jlong optLong(jint, jlong);
		local_ref< java::lang::String > getString(jint);
		local_ref< java::lang::String > optString(jint);
		local_ref< java::lang::String > optString(jint, local_ref< java::lang::String >  const&);
		local_ref< org::json::JSONArray > getJSONArray(jint);
		local_ref< org::json::JSONArray > optJSONArray(jint);
		local_ref< org::json::JSONObject > getJSONObject(jint);
		local_ref< org::json::JSONObject > optJSONObject(jint);
		local_ref< org::json::JSONObject > toJSONObject(local_ref< org::json::JSONArray >  const&);
		local_ref< java::lang::String > join(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > toString();
		local_ref< java::lang::String > toString(jint);
		jboolean equals(local_ref< java::lang::Object >  const&);
		jint hashCode();
	}; //class JSONArray

} //namespace json
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_JSON_JSONARRAY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_JSON_JSONARRAY_HPP_IMPL
#define J2CPP_ORG_JSON_JSONARRAY_HPP_IMPL

namespace j2cpp {



org::json::JSONArray::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


org::json::JSONArray::JSONArray()
: object<org::json::JSONArray>(
	call_new_object<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(0),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



org::json::JSONArray::JSONArray(local_ref< java::util::Collection > const &a0)
: object<org::json::JSONArray>(
	call_new_object<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(1),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



org::json::JSONArray::JSONArray(local_ref< org::json::JSONTokener > const &a0)
: object<org::json::JSONArray>(
	call_new_object<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(2),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(2)
	>(a0)
)
{
}



org::json::JSONArray::JSONArray(local_ref< java::lang::String > const &a0)
: object<org::json::JSONArray>(
	call_new_object<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(3),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(3)
	>(a0)
)
{
}


jint org::json::JSONArray::length()
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(4),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

local_ref< org::json::JSONArray > org::json::JSONArray::put(jboolean a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(5),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0);
}

local_ref< org::json::JSONArray > org::json::JSONArray::put(jdouble a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(6),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0);
}

local_ref< org::json::JSONArray > org::json::JSONArray::put(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(7),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0);
}

local_ref< org::json::JSONArray > org::json::JSONArray::put(jlong a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(8),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0);
}

local_ref< org::json::JSONArray > org::json::JSONArray::put(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(9),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0);
}

local_ref< org::json::JSONArray > org::json::JSONArray::put(jint a0, jboolean a1)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(10),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0, a1);
}

local_ref< org::json::JSONArray > org::json::JSONArray::put(jint a0, jdouble a1)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(11),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0, a1);
}

local_ref< org::json::JSONArray > org::json::JSONArray::put(jint a0, jint a1)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(12),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0, a1);
}

local_ref< org::json::JSONArray > org::json::JSONArray::put(jint a0, jlong a1)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(13),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(13), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0, a1);
}

local_ref< org::json::JSONArray > org::json::JSONArray::put(jint a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(14),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(14), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0, a1);
}

jboolean org::json::JSONArray::isNull(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(15),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(15), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::lang::Object > org::json::JSONArray::get(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(16),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

local_ref< java::lang::Object > org::json::JSONArray::opt(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(17),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(17), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

jboolean org::json::JSONArray::getBoolean(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(18),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(18), 
		jboolean
	>(get_jobject(), a0);
}

jboolean org::json::JSONArray::optBoolean(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(19),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(19), 
		jboolean
	>(get_jobject(), a0);
}

jboolean org::json::JSONArray::optBoolean(jint a0, jboolean a1)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(20),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(20), 
		jboolean
	>(get_jobject(), a0, a1);
}

jdouble org::json::JSONArray::getDouble(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(21),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(21), 
		jdouble
	>(get_jobject(), a0);
}

jdouble org::json::JSONArray::optDouble(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(22),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(22), 
		jdouble
	>(get_jobject(), a0);
}

jdouble org::json::JSONArray::optDouble(jint a0, jdouble a1)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(23),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(23), 
		jdouble
	>(get_jobject(), a0, a1);
}

jint org::json::JSONArray::getInt(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(24),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(24), 
		jint
	>(get_jobject(), a0);
}

jint org::json::JSONArray::optInt(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(25),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(25), 
		jint
	>(get_jobject(), a0);
}

jint org::json::JSONArray::optInt(jint a0, jint a1)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(26),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(26), 
		jint
	>(get_jobject(), a0, a1);
}

jlong org::json::JSONArray::getLong(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(27),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(27), 
		jlong
	>(get_jobject(), a0);
}

jlong org::json::JSONArray::optLong(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(28),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(28), 
		jlong
	>(get_jobject(), a0);
}

jlong org::json::JSONArray::optLong(jint a0, jlong a1)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(29),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(29), 
		jlong
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::String > org::json::JSONArray::getString(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(30),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(30), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

local_ref< java::lang::String > org::json::JSONArray::optString(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(31),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(31), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

local_ref< java::lang::String > org::json::JSONArray::optString(jint a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(32),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(32), 
		local_ref< java::lang::String >
	>(get_jobject(), a0, a1);
}

local_ref< org::json::JSONArray > org::json::JSONArray::getJSONArray(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(33),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(33), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0);
}

local_ref< org::json::JSONArray > org::json::JSONArray::optJSONArray(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(34),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(34), 
		local_ref< org::json::JSONArray >
	>(get_jobject(), a0);
}

local_ref< org::json::JSONObject > org::json::JSONArray::getJSONObject(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(35),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(35), 
		local_ref< org::json::JSONObject >
	>(get_jobject(), a0);
}

local_ref< org::json::JSONObject > org::json::JSONArray::optJSONObject(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(36),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(36), 
		local_ref< org::json::JSONObject >
	>(get_jobject(), a0);
}

local_ref< org::json::JSONObject > org::json::JSONArray::toJSONObject(local_ref< org::json::JSONArray > const &a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(37),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(37), 
		local_ref< org::json::JSONObject >
	>(get_jobject(), a0);
}

local_ref< java::lang::String > org::json::JSONArray::join(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(38),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(38), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

local_ref< java::lang::String > org::json::JSONArray::toString()
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(39),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(39), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > org::json::JSONArray::toString(jint a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(40),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(40), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jboolean org::json::JSONArray::equals(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(41),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(41), 
		jboolean
	>(get_jobject(), a0);
}

jint org::json::JSONArray::hashCode()
{
	return call_method<
		org::json::JSONArray::J2CPP_CLASS_NAME,
		org::json::JSONArray::J2CPP_METHOD_NAME(42),
		org::json::JSONArray::J2CPP_METHOD_SIGNATURE(42), 
		jint
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(org::json::JSONArray,"org/json/JSONArray")
J2CPP_DEFINE_METHOD(org::json::JSONArray,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::json::JSONArray,1,"<init>","(Ljava/util/Collection;)V")
J2CPP_DEFINE_METHOD(org::json::JSONArray,2,"<init>","(Lorg/json/JSONTokener;)V")
J2CPP_DEFINE_METHOD(org::json::JSONArray,3,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::json::JSONArray,4,"length","()I")
J2CPP_DEFINE_METHOD(org::json::JSONArray,5,"put","(Z)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,6,"put","(D)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,7,"put","(I)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,8,"put","(J)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,9,"put","(Ljava/lang/Object;)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,10,"put","(IZ)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,11,"put","(ID)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,12,"put","(II)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,13,"put","(IJ)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,14,"put","(ILjava/lang/Object;)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,15,"isNull","(I)Z")
J2CPP_DEFINE_METHOD(org::json::JSONArray,16,"get","(I)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,17,"opt","(I)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,18,"getBoolean","(I)Z")
J2CPP_DEFINE_METHOD(org::json::JSONArray,19,"optBoolean","(I)Z")
J2CPP_DEFINE_METHOD(org::json::JSONArray,20,"optBoolean","(IZ)Z")
J2CPP_DEFINE_METHOD(org::json::JSONArray,21,"getDouble","(I)D")
J2CPP_DEFINE_METHOD(org::json::JSONArray,22,"optDouble","(I)D")
J2CPP_DEFINE_METHOD(org::json::JSONArray,23,"optDouble","(ID)D")
J2CPP_DEFINE_METHOD(org::json::JSONArray,24,"getInt","(I)I")
J2CPP_DEFINE_METHOD(org::json::JSONArray,25,"optInt","(I)I")
J2CPP_DEFINE_METHOD(org::json::JSONArray,26,"optInt","(II)I")
J2CPP_DEFINE_METHOD(org::json::JSONArray,27,"getLong","(I)J")
J2CPP_DEFINE_METHOD(org::json::JSONArray,28,"optLong","(I)J")
J2CPP_DEFINE_METHOD(org::json::JSONArray,29,"optLong","(IJ)J")
J2CPP_DEFINE_METHOD(org::json::JSONArray,30,"getString","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,31,"optString","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,32,"optString","(ILjava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,33,"getJSONArray","(I)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,34,"optJSONArray","(I)Lorg/json/JSONArray;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,35,"getJSONObject","(I)Lorg/json/JSONObject;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,36,"optJSONObject","(I)Lorg/json/JSONObject;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,37,"toJSONObject","(Lorg/json/JSONArray;)Lorg/json/JSONObject;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,38,"join","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,39,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,40,"toString","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::json::JSONArray,41,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(org::json::JSONArray,42,"hashCode","()I")

} //namespace j2cpp

#endif //J2CPP_ORG_JSON_JSONARRAY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
