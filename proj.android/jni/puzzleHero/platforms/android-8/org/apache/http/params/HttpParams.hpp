/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.params.HttpParams
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPARAMS_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPARAMS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace params {

	class HttpParams;
	class HttpParams
		: public object<HttpParams>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)

		explicit HttpParams(jobject jobj)
		: object<HttpParams>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		local_ref< java::lang::Object > getParameter(local_ref< java::lang::String >  const&);
		local_ref< org::apache::http::params::HttpParams > setParameter(local_ref< java::lang::String >  const&, local_ref< java::lang::Object >  const&);
		local_ref< org::apache::http::params::HttpParams > copy();
		jboolean removeParameter(local_ref< java::lang::String >  const&);
		jlong getLongParameter(local_ref< java::lang::String >  const&, jlong);
		local_ref< org::apache::http::params::HttpParams > setLongParameter(local_ref< java::lang::String >  const&, jlong);
		jint getIntParameter(local_ref< java::lang::String >  const&, jint);
		local_ref< org::apache::http::params::HttpParams > setIntParameter(local_ref< java::lang::String >  const&, jint);
		jdouble getDoubleParameter(local_ref< java::lang::String >  const&, jdouble);
		local_ref< org::apache::http::params::HttpParams > setDoubleParameter(local_ref< java::lang::String >  const&, jdouble);
		jboolean getBooleanParameter(local_ref< java::lang::String >  const&, jboolean);
		local_ref< org::apache::http::params::HttpParams > setBooleanParameter(local_ref< java::lang::String >  const&, jboolean);
		jboolean isParameterTrue(local_ref< java::lang::String >  const&);
		jboolean isParameterFalse(local_ref< java::lang::String >  const&);
	}; //class HttpParams

} //namespace params
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPARAMS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPARAMS_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPARAMS_HPP_IMPL

namespace j2cpp {



org::apache::http::params::HttpParams::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

local_ref< java::lang::Object > org::apache::http::params::HttpParams::getParameter(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(0),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

local_ref< org::apache::http::params::HttpParams > org::apache::http::params::HttpParams::setParameter(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(1),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< org::apache::http::params::HttpParams >
	>(get_jobject(), a0, a1);
}

local_ref< org::apache::http::params::HttpParams > org::apache::http::params::HttpParams::copy()
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(2),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< org::apache::http::params::HttpParams >
	>(get_jobject());
}

jboolean org::apache::http::params::HttpParams::removeParameter(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(3),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(3), 
		jboolean
	>(get_jobject(), a0);
}

jlong org::apache::http::params::HttpParams::getLongParameter(local_ref< java::lang::String > const &a0, jlong a1)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(4),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(4), 
		jlong
	>(get_jobject(), a0, a1);
}

local_ref< org::apache::http::params::HttpParams > org::apache::http::params::HttpParams::setLongParameter(local_ref< java::lang::String > const &a0, jlong a1)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(5),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< org::apache::http::params::HttpParams >
	>(get_jobject(), a0, a1);
}

jint org::apache::http::params::HttpParams::getIntParameter(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(6),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(6), 
		jint
	>(get_jobject(), a0, a1);
}

local_ref< org::apache::http::params::HttpParams > org::apache::http::params::HttpParams::setIntParameter(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(7),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< org::apache::http::params::HttpParams >
	>(get_jobject(), a0, a1);
}

jdouble org::apache::http::params::HttpParams::getDoubleParameter(local_ref< java::lang::String > const &a0, jdouble a1)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(8),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(8), 
		jdouble
	>(get_jobject(), a0, a1);
}

local_ref< org::apache::http::params::HttpParams > org::apache::http::params::HttpParams::setDoubleParameter(local_ref< java::lang::String > const &a0, jdouble a1)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(9),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< org::apache::http::params::HttpParams >
	>(get_jobject(), a0, a1);
}

jboolean org::apache::http::params::HttpParams::getBooleanParameter(local_ref< java::lang::String > const &a0, jboolean a1)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(10),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(10), 
		jboolean
	>(get_jobject(), a0, a1);
}

local_ref< org::apache::http::params::HttpParams > org::apache::http::params::HttpParams::setBooleanParameter(local_ref< java::lang::String > const &a0, jboolean a1)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(11),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< org::apache::http::params::HttpParams >
	>(get_jobject(), a0, a1);
}

jboolean org::apache::http::params::HttpParams::isParameterTrue(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(12),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(12), 
		jboolean
	>(get_jobject(), a0);
}

jboolean org::apache::http::params::HttpParams::isParameterFalse(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::params::HttpParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpParams::J2CPP_METHOD_NAME(13),
		org::apache::http::params::HttpParams::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(org::apache::http::params::HttpParams,"org/apache/http/params/HttpParams")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,0,"getParameter","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,1,"setParameter","(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,2,"copy","()Lorg/apache/http/params/HttpParams;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,3,"removeParameter","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,4,"getLongParameter","(Ljava/lang/String;J)J")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,5,"setLongParameter","(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,6,"getIntParameter","(Ljava/lang/String;I)I")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,7,"setIntParameter","(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,8,"getDoubleParameter","(Ljava/lang/String;D)D")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,9,"setDoubleParameter","(Ljava/lang/String;D)Lorg/apache/http/params/HttpParams;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,10,"getBooleanParameter","(Ljava/lang/String;Z)Z")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,11,"setBooleanParameter","(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,12,"isParameterTrue","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpParams,13,"isParameterFalse","(Ljava/lang/String;)Z")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPARAMS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
