/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.client.methods.AbortableHttpRequest
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CLIENT_METHODS_ABORTABLEHTTPREQUEST_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_CLIENT_METHODS_ABORTABLEHTTPREQUEST_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { class ClientConnectionRequest; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { class ConnectionReleaseTrigger; } } } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <org/apache/http/conn/ClientConnectionRequest.hpp>
#include <org/apache/http/conn/ConnectionReleaseTrigger.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace client { namespace methods {

	class AbortableHttpRequest;
	class AbortableHttpRequest
		: public object<AbortableHttpRequest>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		explicit AbortableHttpRequest(jobject jobj)
		: object<AbortableHttpRequest>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void setConnectionRequest(local_ref< org::apache::http::conn::ClientConnectionRequest >  const&);
		void setReleaseTrigger(local_ref< org::apache::http::conn::ConnectionReleaseTrigger >  const&);
		void abort();
	}; //class AbortableHttpRequest

} //namespace methods
} //namespace client
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CLIENT_METHODS_ABORTABLEHTTPREQUEST_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CLIENT_METHODS_ABORTABLEHTTPREQUEST_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_CLIENT_METHODS_ABORTABLEHTTPREQUEST_HPP_IMPL

namespace j2cpp {



org::apache::http::client::methods::AbortableHttpRequest::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void org::apache::http::client::methods::AbortableHttpRequest::setConnectionRequest(local_ref< org::apache::http::conn::ClientConnectionRequest > const &a0)
{
	return call_method<
		org::apache::http::client::methods::AbortableHttpRequest::J2CPP_CLASS_NAME,
		org::apache::http::client::methods::AbortableHttpRequest::J2CPP_METHOD_NAME(0),
		org::apache::http::client::methods::AbortableHttpRequest::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject(), a0);
}

void org::apache::http::client::methods::AbortableHttpRequest::setReleaseTrigger(local_ref< org::apache::http::conn::ConnectionReleaseTrigger > const &a0)
{
	return call_method<
		org::apache::http::client::methods::AbortableHttpRequest::J2CPP_CLASS_NAME,
		org::apache::http::client::methods::AbortableHttpRequest::J2CPP_METHOD_NAME(1),
		org::apache::http::client::methods::AbortableHttpRequest::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0);
}

void org::apache::http::client::methods::AbortableHttpRequest::abort()
{
	return call_method<
		org::apache::http::client::methods::AbortableHttpRequest::J2CPP_CLASS_NAME,
		org::apache::http::client::methods::AbortableHttpRequest::J2CPP_METHOD_NAME(2),
		org::apache::http::client::methods::AbortableHttpRequest::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(org::apache::http::client::methods::AbortableHttpRequest,"org/apache/http/client/methods/AbortableHttpRequest")
J2CPP_DEFINE_METHOD(org::apache::http::client::methods::AbortableHttpRequest,0,"setConnectionRequest","(Lorg/apache/http/conn/ClientConnectionRequest;)V")
J2CPP_DEFINE_METHOD(org::apache::http::client::methods::AbortableHttpRequest,1,"setReleaseTrigger","(Lorg/apache/http/conn/ConnectionReleaseTrigger;)V")
J2CPP_DEFINE_METHOD(org::apache::http::client::methods::AbortableHttpRequest,2,"abort","()V")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CLIENT_METHODS_ABORTABLEHTTPREQUEST_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
