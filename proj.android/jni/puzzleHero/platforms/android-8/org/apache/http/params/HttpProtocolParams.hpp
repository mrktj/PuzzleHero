/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.params.HttpProtocolParams
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPROTOCOLPARAMS_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPROTOCOLPARAMS_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { class ProtocolVersion; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace params { class HttpParams; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace params { class CoreProtocolPNames; } } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <org/apache/http/ProtocolVersion.hpp>
#include <org/apache/http/params/CoreProtocolPNames.hpp>
#include <org/apache/http/params/HttpParams.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace params {

	class HttpProtocolParams;
	class HttpProtocolParams
		: public object<HttpProtocolParams>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)

		explicit HttpProtocolParams(jobject jobj)
		: object<HttpProtocolParams>(jobj)
		{
		}

		operator local_ref<org::apache::http::params::CoreProtocolPNames>() const;
		operator local_ref<java::lang::Object>() const;


		static local_ref< java::lang::String > getHttpElementCharset(local_ref< org::apache::http::params::HttpParams >  const&);
		static void setHttpElementCharset(local_ref< org::apache::http::params::HttpParams >  const&, local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > getContentCharset(local_ref< org::apache::http::params::HttpParams >  const&);
		static void setContentCharset(local_ref< org::apache::http::params::HttpParams >  const&, local_ref< java::lang::String >  const&);
		static local_ref< org::apache::http::ProtocolVersion > getVersion(local_ref< org::apache::http::params::HttpParams >  const&);
		static void setVersion(local_ref< org::apache::http::params::HttpParams >  const&, local_ref< org::apache::http::ProtocolVersion >  const&);
		static local_ref< java::lang::String > getUserAgent(local_ref< org::apache::http::params::HttpParams >  const&);
		static void setUserAgent(local_ref< org::apache::http::params::HttpParams >  const&, local_ref< java::lang::String >  const&);
		static jboolean useExpectContinue(local_ref< org::apache::http::params::HttpParams >  const&);
		static void setUseExpectContinue(local_ref< org::apache::http::params::HttpParams >  const&, jboolean);
	}; //class HttpProtocolParams

} //namespace params
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPROTOCOLPARAMS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPROTOCOLPARAMS_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPROTOCOLPARAMS_HPP_IMPL

namespace j2cpp {



org::apache::http::params::HttpProtocolParams::operator local_ref<org::apache::http::params::CoreProtocolPNames>() const
{
	return local_ref<org::apache::http::params::CoreProtocolPNames>(get_jobject());
}

org::apache::http::params::HttpProtocolParams::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< java::lang::String > org::apache::http::params::HttpProtocolParams::getHttpElementCharset(local_ref< org::apache::http::params::HttpParams > const &a0)
{
	return call_static_method<
		org::apache::http::params::HttpProtocolParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_NAME(1),
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(a0);
}

void org::apache::http::params::HttpProtocolParams::setHttpElementCharset(local_ref< org::apache::http::params::HttpParams > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		org::apache::http::params::HttpProtocolParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_NAME(2),
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(a0, a1);
}

local_ref< java::lang::String > org::apache::http::params::HttpProtocolParams::getContentCharset(local_ref< org::apache::http::params::HttpParams > const &a0)
{
	return call_static_method<
		org::apache::http::params::HttpProtocolParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_NAME(3),
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::String >
	>(a0);
}

void org::apache::http::params::HttpProtocolParams::setContentCharset(local_ref< org::apache::http::params::HttpParams > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		org::apache::http::params::HttpProtocolParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_NAME(4),
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(a0, a1);
}

local_ref< org::apache::http::ProtocolVersion > org::apache::http::params::HttpProtocolParams::getVersion(local_ref< org::apache::http::params::HttpParams > const &a0)
{
	return call_static_method<
		org::apache::http::params::HttpProtocolParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_NAME(5),
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< org::apache::http::ProtocolVersion >
	>(a0);
}

void org::apache::http::params::HttpProtocolParams::setVersion(local_ref< org::apache::http::params::HttpParams > const &a0, local_ref< org::apache::http::ProtocolVersion > const &a1)
{
	return call_static_method<
		org::apache::http::params::HttpProtocolParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_NAME(6),
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(a0, a1);
}

local_ref< java::lang::String > org::apache::http::params::HttpProtocolParams::getUserAgent(local_ref< org::apache::http::params::HttpParams > const &a0)
{
	return call_static_method<
		org::apache::http::params::HttpProtocolParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_NAME(7),
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::lang::String >
	>(a0);
}

void org::apache::http::params::HttpProtocolParams::setUserAgent(local_ref< org::apache::http::params::HttpParams > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		org::apache::http::params::HttpProtocolParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_NAME(8),
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(a0, a1);
}

jboolean org::apache::http::params::HttpProtocolParams::useExpectContinue(local_ref< org::apache::http::params::HttpParams > const &a0)
{
	return call_static_method<
		org::apache::http::params::HttpProtocolParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_NAME(9),
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(a0);
}

void org::apache::http::params::HttpProtocolParams::setUseExpectContinue(local_ref< org::apache::http::params::HttpParams > const &a0, jboolean a1)
{
	return call_static_method<
		org::apache::http::params::HttpProtocolParams::J2CPP_CLASS_NAME,
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_NAME(10),
		org::apache::http::params::HttpProtocolParams::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(a0, a1);
}


J2CPP_DEFINE_CLASS(org::apache::http::params::HttpProtocolParams,"org/apache/http/params/HttpProtocolParams")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,1,"getHttpElementCharset","(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,2,"setHttpElementCharset","(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,3,"getContentCharset","(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,4,"setContentCharset","(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,5,"getVersion","(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/ProtocolVersion;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,6,"setVersion","(Lorg/apache/http/params/HttpParams;Lorg/apache/http/ProtocolVersion;)V")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,7,"getUserAgent","(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,8,"setUserAgent","(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,9,"useExpectContinue","(Lorg/apache/http/params/HttpParams;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::params::HttpProtocolParams,10,"setUseExpectContinue","(Lorg/apache/http/params/HttpParams;Z)V")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_PARAMS_HTTPPROTOCOLPARAMS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
