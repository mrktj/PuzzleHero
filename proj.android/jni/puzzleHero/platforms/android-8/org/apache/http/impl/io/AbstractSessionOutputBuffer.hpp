/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.impl.io.AbstractSessionOutputBuffer
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTSESSIONOUTPUTBUFFER_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTSESSIONOUTPUTBUFFER_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { namespace util { class CharArrayBuffer; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace io { class HttpTransportMetrics; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace io { class SessionOutputBuffer; } } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <org/apache/http/io/HttpTransportMetrics.hpp>
#include <org/apache/http/io/SessionOutputBuffer.hpp>
#include <org/apache/http/util/CharArrayBuffer.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace impl { namespace io {

	class AbstractSessionOutputBuffer;
	class AbstractSessionOutputBuffer
		: public object<AbstractSessionOutputBuffer>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)

		explicit AbstractSessionOutputBuffer(jobject jobj)
		: object<AbstractSessionOutputBuffer>(jobj)
		{
		}

		operator local_ref<org::apache::http::io::SessionOutputBuffer>() const;
		operator local_ref<java::lang::Object>() const;


		AbstractSessionOutputBuffer();
		void flush();
		void write(local_ref< array<jbyte,1> >  const&, jint, jint);
		void write(local_ref< array<jbyte,1> >  const&);
		void write(jint);
		void writeLine(local_ref< java::lang::String >  const&);
		void writeLine(local_ref< org::apache::http::util::CharArrayBuffer >  const&);
		local_ref< org::apache::http::io::HttpTransportMetrics > getMetrics();
	}; //class AbstractSessionOutputBuffer

} //namespace io
} //namespace impl
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTSESSIONOUTPUTBUFFER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTSESSIONOUTPUTBUFFER_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTSESSIONOUTPUTBUFFER_HPP_IMPL

namespace j2cpp {



org::apache::http::impl::io::AbstractSessionOutputBuffer::operator local_ref<org::apache::http::io::SessionOutputBuffer>() const
{
	return local_ref<org::apache::http::io::SessionOutputBuffer>(get_jobject());
}

org::apache::http::impl::io::AbstractSessionOutputBuffer::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


org::apache::http::impl::io::AbstractSessionOutputBuffer::AbstractSessionOutputBuffer()
: object<org::apache::http::impl::io::AbstractSessionOutputBuffer>(
	call_new_object<
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_CLASS_NAME,
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_NAME(0),
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}




void org::apache::http::impl::io::AbstractSessionOutputBuffer::flush()
{
	return call_method<
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_CLASS_NAME,
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_NAME(3),
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject());
}

void org::apache::http::impl::io::AbstractSessionOutputBuffer::write(local_ref< array<jbyte,1> > const &a0, jint a1, jint a2)
{
	return call_method<
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_CLASS_NAME,
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_NAME(4),
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0, a1, a2);
}

void org::apache::http::impl::io::AbstractSessionOutputBuffer::write(local_ref< array<jbyte,1> > const &a0)
{
	return call_method<
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_CLASS_NAME,
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_NAME(5),
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

void org::apache::http::impl::io::AbstractSessionOutputBuffer::write(jint a0)
{
	return call_method<
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_CLASS_NAME,
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_NAME(6),
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0);
}

void org::apache::http::impl::io::AbstractSessionOutputBuffer::writeLine(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_CLASS_NAME,
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_NAME(7),
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0);
}

void org::apache::http::impl::io::AbstractSessionOutputBuffer::writeLine(local_ref< org::apache::http::util::CharArrayBuffer > const &a0)
{
	return call_method<
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_CLASS_NAME,
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_NAME(8),
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0);
}

local_ref< org::apache::http::io::HttpTransportMetrics > org::apache::http::impl::io::AbstractSessionOutputBuffer::getMetrics()
{
	return call_method<
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_CLASS_NAME,
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_NAME(9),
		org::apache::http::impl::io::AbstractSessionOutputBuffer::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< org::apache::http::io::HttpTransportMetrics >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(org::apache::http::impl::io::AbstractSessionOutputBuffer,"org/apache/http/impl/io/AbstractSessionOutputBuffer")
J2CPP_DEFINE_METHOD(org::apache::http::impl::io::AbstractSessionOutputBuffer,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::io::AbstractSessionOutputBuffer,1,"init","(Ljava/io/OutputStream;ILorg/apache/http/params/HttpParams;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::io::AbstractSessionOutputBuffer,2,"flushBuffer","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::io::AbstractSessionOutputBuffer,3,"flush","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::io::AbstractSessionOutputBuffer,4,"write","([BII)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::io::AbstractSessionOutputBuffer,5,"write","([B)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::io::AbstractSessionOutputBuffer,6,"write","(I)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::io::AbstractSessionOutputBuffer,7,"writeLine","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::io::AbstractSessionOutputBuffer,8,"writeLine","(Lorg/apache/http/util/CharArrayBuffer;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::io::AbstractSessionOutputBuffer,9,"getMetrics","()Lorg/apache/http/io/HttpTransportMetrics;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTSESSIONOUTPUTBUFFER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
