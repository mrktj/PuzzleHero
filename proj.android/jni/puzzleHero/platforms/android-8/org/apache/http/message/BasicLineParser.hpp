/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.message.BasicLineParser
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICLINEPARSER_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICLINEPARSER_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { class ProtocolVersion; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class StatusLine; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace message { class LineParser; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace message { class ParserCursor; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class Header; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class RequestLine; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace util { class CharArrayBuffer; } } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <org/apache/http/Header.hpp>
#include <org/apache/http/ProtocolVersion.hpp>
#include <org/apache/http/RequestLine.hpp>
#include <org/apache/http/StatusLine.hpp>
#include <org/apache/http/message/LineParser.hpp>
#include <org/apache/http/message/ParserCursor.hpp>
#include <org/apache/http/util/CharArrayBuffer.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace message {

	class BasicLineParser;
	class BasicLineParser
		: public object<BasicLineParser>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)

		explicit BasicLineParser(jobject jobj)
		: object<BasicLineParser>(jobj)
		{
		}

		operator local_ref<org::apache::http::message::LineParser>() const;
		operator local_ref<java::lang::Object>() const;


		BasicLineParser(local_ref< org::apache::http::ProtocolVersion > const&);
		BasicLineParser();
		static local_ref< org::apache::http::ProtocolVersion > parseProtocolVersion(local_ref< java::lang::String >  const&, local_ref< org::apache::http::message::LineParser >  const&);
		local_ref< org::apache::http::ProtocolVersion > parseProtocolVersion(local_ref< org::apache::http::util::CharArrayBuffer >  const&, local_ref< org::apache::http::message::ParserCursor >  const&);
		jboolean hasProtocolVersion(local_ref< org::apache::http::util::CharArrayBuffer >  const&, local_ref< org::apache::http::message::ParserCursor >  const&);
		static local_ref< org::apache::http::RequestLine > parseRequestLine(local_ref< java::lang::String >  const&, local_ref< org::apache::http::message::LineParser >  const&);
		local_ref< org::apache::http::RequestLine > parseRequestLine(local_ref< org::apache::http::util::CharArrayBuffer >  const&, local_ref< org::apache::http::message::ParserCursor >  const&);
		static local_ref< org::apache::http::StatusLine > parseStatusLine(local_ref< java::lang::String >  const&, local_ref< org::apache::http::message::LineParser >  const&);
		local_ref< org::apache::http::StatusLine > parseStatusLine(local_ref< org::apache::http::util::CharArrayBuffer >  const&, local_ref< org::apache::http::message::ParserCursor >  const&);
		static local_ref< org::apache::http::Header > parseHeader(local_ref< java::lang::String >  const&, local_ref< org::apache::http::message::LineParser >  const&);
		local_ref< org::apache::http::Header > parseHeader(local_ref< org::apache::http::util::CharArrayBuffer >  const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< org::apache::http::message::BasicLineParser > > DEFAULT;
	}; //class BasicLineParser

} //namespace message
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICLINEPARSER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICLINEPARSER_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICLINEPARSER_HPP_IMPL

namespace j2cpp {



org::apache::http::message::BasicLineParser::operator local_ref<org::apache::http::message::LineParser>() const
{
	return local_ref<org::apache::http::message::LineParser>(get_jobject());
}

org::apache::http::message::BasicLineParser::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


org::apache::http::message::BasicLineParser::BasicLineParser(local_ref< org::apache::http::ProtocolVersion > const &a0)
: object<org::apache::http::message::BasicLineParser>(
	call_new_object<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(0),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



org::apache::http::message::BasicLineParser::BasicLineParser()
: object<org::apache::http::message::BasicLineParser>(
	call_new_object<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(1),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(1)
	>()
)
{
}


local_ref< org::apache::http::ProtocolVersion > org::apache::http::message::BasicLineParser::parseProtocolVersion(local_ref< java::lang::String > const &a0, local_ref< org::apache::http::message::LineParser > const &a1)
{
	return call_static_method<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(2),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< org::apache::http::ProtocolVersion >
	>(a0, a1);
}

local_ref< org::apache::http::ProtocolVersion > org::apache::http::message::BasicLineParser::parseProtocolVersion(local_ref< org::apache::http::util::CharArrayBuffer > const &a0, local_ref< org::apache::http::message::ParserCursor > const &a1)
{
	return call_method<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(3),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< org::apache::http::ProtocolVersion >
	>(get_jobject(), a0, a1);
}


jboolean org::apache::http::message::BasicLineParser::hasProtocolVersion(local_ref< org::apache::http::util::CharArrayBuffer > const &a0, local_ref< org::apache::http::message::ParserCursor > const &a1)
{
	return call_method<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(5),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>(get_jobject(), a0, a1);
}

local_ref< org::apache::http::RequestLine > org::apache::http::message::BasicLineParser::parseRequestLine(local_ref< java::lang::String > const &a0, local_ref< org::apache::http::message::LineParser > const &a1)
{
	return call_static_method<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(6),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< org::apache::http::RequestLine >
	>(a0, a1);
}

local_ref< org::apache::http::RequestLine > org::apache::http::message::BasicLineParser::parseRequestLine(local_ref< org::apache::http::util::CharArrayBuffer > const &a0, local_ref< org::apache::http::message::ParserCursor > const &a1)
{
	return call_method<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(7),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< org::apache::http::RequestLine >
	>(get_jobject(), a0, a1);
}


local_ref< org::apache::http::StatusLine > org::apache::http::message::BasicLineParser::parseStatusLine(local_ref< java::lang::String > const &a0, local_ref< org::apache::http::message::LineParser > const &a1)
{
	return call_static_method<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(9),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< org::apache::http::StatusLine >
	>(a0, a1);
}

local_ref< org::apache::http::StatusLine > org::apache::http::message::BasicLineParser::parseStatusLine(local_ref< org::apache::http::util::CharArrayBuffer > const &a0, local_ref< org::apache::http::message::ParserCursor > const &a1)
{
	return call_method<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(10),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< org::apache::http::StatusLine >
	>(get_jobject(), a0, a1);
}


local_ref< org::apache::http::Header > org::apache::http::message::BasicLineParser::parseHeader(local_ref< java::lang::String > const &a0, local_ref< org::apache::http::message::LineParser > const &a1)
{
	return call_static_method<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(12),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< org::apache::http::Header >
	>(a0, a1);
}

local_ref< org::apache::http::Header > org::apache::http::message::BasicLineParser::parseHeader(local_ref< org::apache::http::util::CharArrayBuffer > const &a0)
{
	return call_method<
		org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_NAME(13),
		org::apache::http::message::BasicLineParser::J2CPP_METHOD_SIGNATURE(13), 
		local_ref< org::apache::http::Header >
	>(get_jobject(), a0);
}




static_field<
	org::apache::http::message::BasicLineParser::J2CPP_CLASS_NAME,
	org::apache::http::message::BasicLineParser::J2CPP_FIELD_NAME(0),
	org::apache::http::message::BasicLineParser::J2CPP_FIELD_SIGNATURE(0),
	local_ref< org::apache::http::message::BasicLineParser >
> org::apache::http::message::BasicLineParser::DEFAULT;


J2CPP_DEFINE_CLASS(org::apache::http::message::BasicLineParser,"org/apache/http/message/BasicLineParser")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,0,"<init>","(Lorg/apache/http/ProtocolVersion;)V")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,1,"<init>","()V")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,2,"parseProtocolVersion","(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/ProtocolVersion;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,3,"parseProtocolVersion","(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/ProtocolVersion;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,4,"createProtocolVersion","(II)Lorg/apache/http/ProtocolVersion;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,5,"hasProtocolVersion","(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,6,"parseRequestLine","(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/RequestLine;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,7,"parseRequestLine","(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/RequestLine;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,8,"createRequestLine","(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)Lorg/apache/http/RequestLine;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,9,"parseStatusLine","(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/StatusLine;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,10,"parseStatusLine","(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/StatusLine;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,11,"createStatusLine","(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)Lorg/apache/http/StatusLine;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,12,"parseHeader","(Ljava/lang/String;Lorg/apache/http/message/LineParser;)Lorg/apache/http/Header;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,13,"parseHeader","(Lorg/apache/http/util/CharArrayBuffer;)Lorg/apache/http/Header;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,14,"skipWhitespace","(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)V")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicLineParser,15,"<clinit>","()V")
J2CPP_DEFINE_FIELD(org::apache::http::message::BasicLineParser,0,"DEFAULT","Lorg/apache/http/message/BasicLineParser;")
J2CPP_DEFINE_FIELD(org::apache::http::message::BasicLineParser,1,"protocol","Lorg/apache/http/ProtocolVersion;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICLINEPARSER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
