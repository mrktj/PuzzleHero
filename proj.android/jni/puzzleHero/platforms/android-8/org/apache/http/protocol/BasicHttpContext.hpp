/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.protocol.BasicHttpContext
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_PROTOCOL_BASICHTTPCONTEXT_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_PROTOCOL_BASICHTTPCONTEXT_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { namespace protocol { class HttpContext; } } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <org/apache/http/protocol/HttpContext.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace protocol {

	class BasicHttpContext;
	class BasicHttpContext
		: public object<BasicHttpContext>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)

		explicit BasicHttpContext(jobject jobj)
		: object<BasicHttpContext>(jobj)
		{
		}

		operator local_ref<org::apache::http::protocol::HttpContext>() const;
		operator local_ref<java::lang::Object>() const;


		BasicHttpContext();
		BasicHttpContext(local_ref< org::apache::http::protocol::HttpContext > const&);
		local_ref< java::lang::Object > getAttribute(local_ref< java::lang::String >  const&);
		void setAttribute(local_ref< java::lang::String >  const&, local_ref< java::lang::Object >  const&);
		local_ref< java::lang::Object > removeAttribute(local_ref< java::lang::String >  const&);
	}; //class BasicHttpContext

} //namespace protocol
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_PROTOCOL_BASICHTTPCONTEXT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_PROTOCOL_BASICHTTPCONTEXT_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_PROTOCOL_BASICHTTPCONTEXT_HPP_IMPL

namespace j2cpp {



org::apache::http::protocol::BasicHttpContext::operator local_ref<org::apache::http::protocol::HttpContext>() const
{
	return local_ref<org::apache::http::protocol::HttpContext>(get_jobject());
}

org::apache::http::protocol::BasicHttpContext::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


org::apache::http::protocol::BasicHttpContext::BasicHttpContext()
: object<org::apache::http::protocol::BasicHttpContext>(
	call_new_object<
		org::apache::http::protocol::BasicHttpContext::J2CPP_CLASS_NAME,
		org::apache::http::protocol::BasicHttpContext::J2CPP_METHOD_NAME(0),
		org::apache::http::protocol::BasicHttpContext::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



org::apache::http::protocol::BasicHttpContext::BasicHttpContext(local_ref< org::apache::http::protocol::HttpContext > const &a0)
: object<org::apache::http::protocol::BasicHttpContext>(
	call_new_object<
		org::apache::http::protocol::BasicHttpContext::J2CPP_CLASS_NAME,
		org::apache::http::protocol::BasicHttpContext::J2CPP_METHOD_NAME(1),
		org::apache::http::protocol::BasicHttpContext::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}


local_ref< java::lang::Object > org::apache::http::protocol::BasicHttpContext::getAttribute(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::protocol::BasicHttpContext::J2CPP_CLASS_NAME,
		org::apache::http::protocol::BasicHttpContext::J2CPP_METHOD_NAME(2),
		org::apache::http::protocol::BasicHttpContext::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

void org::apache::http::protocol::BasicHttpContext::setAttribute(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		org::apache::http::protocol::BasicHttpContext::J2CPP_CLASS_NAME,
		org::apache::http::protocol::BasicHttpContext::J2CPP_METHOD_NAME(3),
		org::apache::http::protocol::BasicHttpContext::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::Object > org::apache::http::protocol::BasicHttpContext::removeAttribute(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::protocol::BasicHttpContext::J2CPP_CLASS_NAME,
		org::apache::http::protocol::BasicHttpContext::J2CPP_METHOD_NAME(4),
		org::apache::http::protocol::BasicHttpContext::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(org::apache::http::protocol::BasicHttpContext,"org/apache/http/protocol/BasicHttpContext")
J2CPP_DEFINE_METHOD(org::apache::http::protocol::BasicHttpContext,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::apache::http::protocol::BasicHttpContext,1,"<init>","(Lorg/apache/http/protocol/HttpContext;)V")
J2CPP_DEFINE_METHOD(org::apache::http::protocol::BasicHttpContext,2,"getAttribute","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(org::apache::http::protocol::BasicHttpContext,3,"setAttribute","(Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(org::apache::http::protocol::BasicHttpContext,4,"removeAttribute","(Ljava/lang/String;)Ljava/lang/Object;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_PROTOCOL_BASICHTTPCONTEXT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
