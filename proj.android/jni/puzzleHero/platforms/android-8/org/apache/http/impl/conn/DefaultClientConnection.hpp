/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.impl.conn.DefaultClientConnection
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CONN_DEFAULTCLIENTCONNECTION_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CONN_DEFAULTCLIENTCONNECTION_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { namespace impl { class SocketHttpClientConnection; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace impl { class AbstractHttpClientConnection; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace params { class HttpParams; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpResponse; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpHost; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpConnection; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpRequest; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpClientConnection; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { class OperatedClientConnection; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpInetConnection; } } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace net { class Socket; } } }


#include <java/lang/Object.hpp>
#include <java/net/Socket.hpp>
#include <org/apache/http/HttpClientConnection.hpp>
#include <org/apache/http/HttpConnection.hpp>
#include <org/apache/http/HttpHost.hpp>
#include <org/apache/http/HttpInetConnection.hpp>
#include <org/apache/http/HttpRequest.hpp>
#include <org/apache/http/HttpResponse.hpp>
#include <org/apache/http/conn/OperatedClientConnection.hpp>
#include <org/apache/http/impl/AbstractHttpClientConnection.hpp>
#include <org/apache/http/impl/SocketHttpClientConnection.hpp>
#include <org/apache/http/params/HttpParams.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace impl { namespace conn {

	class DefaultClientConnection;
	class DefaultClientConnection
		: public object<DefaultClientConnection>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)

		explicit DefaultClientConnection(jobject jobj)
		: object<DefaultClientConnection>(jobj)
		{
		}

		operator local_ref<org::apache::http::impl::SocketHttpClientConnection>() const;
		operator local_ref<org::apache::http::impl::AbstractHttpClientConnection>() const;
		operator local_ref<org::apache::http::HttpConnection>() const;
		operator local_ref<org::apache::http::HttpClientConnection>() const;
		operator local_ref<org::apache::http::conn::OperatedClientConnection>() const;
		operator local_ref<org::apache::http::HttpInetConnection>() const;
		operator local_ref<java::lang::Object>() const;


		DefaultClientConnection();
		local_ref< org::apache::http::HttpHost > getTargetHost();
		jboolean isSecure();
		local_ref< java::net::Socket > getSocket();
		void opening(local_ref< java::net::Socket >  const&, local_ref< org::apache::http::HttpHost >  const&);
		void openCompleted(jboolean, local_ref< org::apache::http::params::HttpParams >  const&);
		void shutdown();
		void close();
		void update(local_ref< java::net::Socket >  const&, local_ref< org::apache::http::HttpHost >  const&, jboolean, local_ref< org::apache::http::params::HttpParams >  const&);
		local_ref< org::apache::http::HttpResponse > receiveResponseHeader();
		void sendRequestHeader(local_ref< org::apache::http::HttpRequest >  const&);
	}; //class DefaultClientConnection

} //namespace conn
} //namespace impl
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CONN_DEFAULTCLIENTCONNECTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CONN_DEFAULTCLIENTCONNECTION_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CONN_DEFAULTCLIENTCONNECTION_HPP_IMPL

namespace j2cpp {



org::apache::http::impl::conn::DefaultClientConnection::operator local_ref<org::apache::http::impl::SocketHttpClientConnection>() const
{
	return local_ref<org::apache::http::impl::SocketHttpClientConnection>(get_jobject());
}

org::apache::http::impl::conn::DefaultClientConnection::operator local_ref<org::apache::http::impl::AbstractHttpClientConnection>() const
{
	return local_ref<org::apache::http::impl::AbstractHttpClientConnection>(get_jobject());
}

org::apache::http::impl::conn::DefaultClientConnection::operator local_ref<org::apache::http::HttpConnection>() const
{
	return local_ref<org::apache::http::HttpConnection>(get_jobject());
}

org::apache::http::impl::conn::DefaultClientConnection::operator local_ref<org::apache::http::HttpClientConnection>() const
{
	return local_ref<org::apache::http::HttpClientConnection>(get_jobject());
}

org::apache::http::impl::conn::DefaultClientConnection::operator local_ref<org::apache::http::conn::OperatedClientConnection>() const
{
	return local_ref<org::apache::http::conn::OperatedClientConnection>(get_jobject());
}

org::apache::http::impl::conn::DefaultClientConnection::operator local_ref<org::apache::http::HttpInetConnection>() const
{
	return local_ref<org::apache::http::HttpInetConnection>(get_jobject());
}

org::apache::http::impl::conn::DefaultClientConnection::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


org::apache::http::impl::conn::DefaultClientConnection::DefaultClientConnection()
: object<org::apache::http::impl::conn::DefaultClientConnection>(
	call_new_object<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(0),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


local_ref< org::apache::http::HttpHost > org::apache::http::impl::conn::DefaultClientConnection::getTargetHost()
{
	return call_method<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(1),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< org::apache::http::HttpHost >
	>(get_jobject());
}

jboolean org::apache::http::impl::conn::DefaultClientConnection::isSecure()
{
	return call_method<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(2),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(2), 
		jboolean
	>(get_jobject());
}

local_ref< java::net::Socket > org::apache::http::impl::conn::DefaultClientConnection::getSocket()
{
	return call_method<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(3),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::net::Socket >
	>(get_jobject());
}

void org::apache::http::impl::conn::DefaultClientConnection::opening(local_ref< java::net::Socket > const &a0, local_ref< org::apache::http::HttpHost > const &a1)
{
	return call_method<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(4),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0, a1);
}

void org::apache::http::impl::conn::DefaultClientConnection::openCompleted(jboolean a0, local_ref< org::apache::http::params::HttpParams > const &a1)
{
	return call_method<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(5),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0, a1);
}

void org::apache::http::impl::conn::DefaultClientConnection::shutdown()
{
	return call_method<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(6),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject());
}

void org::apache::http::impl::conn::DefaultClientConnection::close()
{
	return call_method<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(7),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject());
}




void org::apache::http::impl::conn::DefaultClientConnection::update(local_ref< java::net::Socket > const &a0, local_ref< org::apache::http::HttpHost > const &a1, jboolean a2, local_ref< org::apache::http::params::HttpParams > const &a3)
{
	return call_method<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(11),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< org::apache::http::HttpResponse > org::apache::http::impl::conn::DefaultClientConnection::receiveResponseHeader()
{
	return call_method<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(12),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< org::apache::http::HttpResponse >
	>(get_jobject());
}

void org::apache::http::impl::conn::DefaultClientConnection::sendRequestHeader(local_ref< org::apache::http::HttpRequest > const &a0)
{
	return call_method<
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_NAME(13),
		org::apache::http::impl::conn::DefaultClientConnection::J2CPP_METHOD_SIGNATURE(13), 
		void
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(org::apache::http::impl::conn::DefaultClientConnection,"org/apache/http/impl/conn/DefaultClientConnection")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,1,"getTargetHost","()Lorg/apache/http/HttpHost;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,2,"isSecure","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,3,"getSocket","()Ljava/net/Socket;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,4,"opening","(Ljava/net/Socket;Lorg/apache/http/HttpHost;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,5,"openCompleted","(ZLorg/apache/http/params/HttpParams;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,6,"shutdown","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,7,"close","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,8,"createSessionInputBuffer","(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,9,"createSessionOutputBuffer","(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,10,"createResponseParser","(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageParser;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,11,"update","(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,12,"receiveResponseHeader","()Lorg/apache/http/HttpResponse;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::DefaultClientConnection,13,"sendRequestHeader","(Lorg/apache/http/HttpRequest;)V")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CONN_DEFAULTCLIENTCONNECTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
