/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.message.BasicHttpRequest
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICHTTPREQUEST_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICHTTPREQUEST_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { class ProtocolVersion; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace message { class AbstractHttpMessage; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpMessage; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class RequestLine; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpRequest; } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <org/apache/http/HttpMessage.hpp>
#include <org/apache/http/HttpRequest.hpp>
#include <org/apache/http/ProtocolVersion.hpp>
#include <org/apache/http/RequestLine.hpp>
#include <org/apache/http/message/AbstractHttpMessage.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace message {

	class BasicHttpRequest;
	class BasicHttpRequest
		: public object<BasicHttpRequest>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)

		explicit BasicHttpRequest(jobject jobj)
		: object<BasicHttpRequest>(jobj)
		{
		}

		operator local_ref<org::apache::http::message::AbstractHttpMessage>() const;
		operator local_ref<org::apache::http::HttpMessage>() const;
		operator local_ref<org::apache::http::HttpRequest>() const;
		operator local_ref<java::lang::Object>() const;


		BasicHttpRequest(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		BasicHttpRequest(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< org::apache::http::ProtocolVersion > const&);
		BasicHttpRequest(local_ref< org::apache::http::RequestLine > const&);
		local_ref< org::apache::http::ProtocolVersion > getProtocolVersion();
		local_ref< org::apache::http::RequestLine > getRequestLine();
	}; //class BasicHttpRequest

} //namespace message
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICHTTPREQUEST_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICHTTPREQUEST_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICHTTPREQUEST_HPP_IMPL

namespace j2cpp {



org::apache::http::message::BasicHttpRequest::operator local_ref<org::apache::http::message::AbstractHttpMessage>() const
{
	return local_ref<org::apache::http::message::AbstractHttpMessage>(get_jobject());
}

org::apache::http::message::BasicHttpRequest::operator local_ref<org::apache::http::HttpMessage>() const
{
	return local_ref<org::apache::http::HttpMessage>(get_jobject());
}

org::apache::http::message::BasicHttpRequest::operator local_ref<org::apache::http::HttpRequest>() const
{
	return local_ref<org::apache::http::HttpRequest>(get_jobject());
}

org::apache::http::message::BasicHttpRequest::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


org::apache::http::message::BasicHttpRequest::BasicHttpRequest(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
: object<org::apache::http::message::BasicHttpRequest>(
	call_new_object<
		org::apache::http::message::BasicHttpRequest::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicHttpRequest::J2CPP_METHOD_NAME(0),
		org::apache::http::message::BasicHttpRequest::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1)
)
{
}



org::apache::http::message::BasicHttpRequest::BasicHttpRequest(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< org::apache::http::ProtocolVersion > const &a2)
: object<org::apache::http::message::BasicHttpRequest>(
	call_new_object<
		org::apache::http::message::BasicHttpRequest::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicHttpRequest::J2CPP_METHOD_NAME(1),
		org::apache::http::message::BasicHttpRequest::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1, a2)
)
{
}



org::apache::http::message::BasicHttpRequest::BasicHttpRequest(local_ref< org::apache::http::RequestLine > const &a0)
: object<org::apache::http::message::BasicHttpRequest>(
	call_new_object<
		org::apache::http::message::BasicHttpRequest::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicHttpRequest::J2CPP_METHOD_NAME(2),
		org::apache::http::message::BasicHttpRequest::J2CPP_METHOD_SIGNATURE(2)
	>(a0)
)
{
}


local_ref< org::apache::http::ProtocolVersion > org::apache::http::message::BasicHttpRequest::getProtocolVersion()
{
	return call_method<
		org::apache::http::message::BasicHttpRequest::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicHttpRequest::J2CPP_METHOD_NAME(3),
		org::apache::http::message::BasicHttpRequest::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< org::apache::http::ProtocolVersion >
	>(get_jobject());
}

local_ref< org::apache::http::RequestLine > org::apache::http::message::BasicHttpRequest::getRequestLine()
{
	return call_method<
		org::apache::http::message::BasicHttpRequest::J2CPP_CLASS_NAME,
		org::apache::http::message::BasicHttpRequest::J2CPP_METHOD_NAME(4),
		org::apache::http::message::BasicHttpRequest::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< org::apache::http::RequestLine >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(org::apache::http::message::BasicHttpRequest,"org/apache/http/message/BasicHttpRequest")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicHttpRequest,0,"<init>","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicHttpRequest,1,"<init>","(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)V")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicHttpRequest,2,"<init>","(Lorg/apache/http/RequestLine;)V")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicHttpRequest,3,"getProtocolVersion","()Lorg/apache/http/ProtocolVersion;")
J2CPP_DEFINE_METHOD(org::apache::http::message::BasicHttpRequest,4,"getRequestLine","()Lorg/apache/http/RequestLine;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_MESSAGE_BASICHTTPREQUEST_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
