/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.auth.params.AuthParams
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_AUTH_PARAMS_AUTHPARAMS_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_AUTH_PARAMS_AUTHPARAMS_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { namespace params { class HttpParams; } } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <org/apache/http/params/HttpParams.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace auth { namespace params {

	class AuthParams;
	class AuthParams
		: public object<AuthParams>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		explicit AuthParams(jobject jobj)
		: object<AuthParams>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static local_ref< java::lang::String > getCredentialCharset(local_ref< org::apache::http::params::HttpParams >  const&);
		static void setCredentialCharset(local_ref< org::apache::http::params::HttpParams >  const&, local_ref< java::lang::String >  const&);
	}; //class AuthParams

} //namespace params
} //namespace auth
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_AUTH_PARAMS_AUTHPARAMS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_AUTH_PARAMS_AUTHPARAMS_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_AUTH_PARAMS_AUTHPARAMS_HPP_IMPL

namespace j2cpp {



org::apache::http::auth::params::AuthParams::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< java::lang::String > org::apache::http::auth::params::AuthParams::getCredentialCharset(local_ref< org::apache::http::params::HttpParams > const &a0)
{
	return call_static_method<
		org::apache::http::auth::params::AuthParams::J2CPP_CLASS_NAME,
		org::apache::http::auth::params::AuthParams::J2CPP_METHOD_NAME(1),
		org::apache::http::auth::params::AuthParams::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(a0);
}

void org::apache::http::auth::params::AuthParams::setCredentialCharset(local_ref< org::apache::http::params::HttpParams > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		org::apache::http::auth::params::AuthParams::J2CPP_CLASS_NAME,
		org::apache::http::auth::params::AuthParams::J2CPP_METHOD_NAME(2),
		org::apache::http::auth::params::AuthParams::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(a0, a1);
}


J2CPP_DEFINE_CLASS(org::apache::http::auth::params::AuthParams,"org/apache/http/auth/params/AuthParams")
J2CPP_DEFINE_METHOD(org::apache::http::auth::params::AuthParams,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::apache::http::auth::params::AuthParams,1,"getCredentialCharset","(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::auth::params::AuthParams,2,"setCredentialCharset","(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_AUTH_PARAMS_AUTHPARAMS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
