/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.cookie.CookieOrigin
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace cookie {

	class CookieOrigin;
	class CookieOrigin
		: public object<CookieOrigin>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		explicit CookieOrigin(jobject jobj)
		: object<CookieOrigin>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		CookieOrigin(local_ref< java::lang::String > const&, jint, local_ref< java::lang::String > const&, jboolean);
		local_ref< java::lang::String > getHost();
		local_ref< java::lang::String > getPath();
		jint getPort();
		jboolean isSecure();
		local_ref< java::lang::String > toString();
	}; //class CookieOrigin

} //namespace cookie
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_IMPL

namespace j2cpp {



org::apache::http::cookie::CookieOrigin::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


org::apache::http::cookie::CookieOrigin::CookieOrigin(local_ref< java::lang::String > const &a0, jint a1, local_ref< java::lang::String > const &a2, jboolean a3)
: object<org::apache::http::cookie::CookieOrigin>(
	call_new_object<
		org::apache::http::cookie::CookieOrigin::J2CPP_CLASS_NAME,
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_NAME(0),
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1, a2, a3)
)
{
}


local_ref< java::lang::String > org::apache::http::cookie::CookieOrigin::getHost()
{
	return call_method<
		org::apache::http::cookie::CookieOrigin::J2CPP_CLASS_NAME,
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_NAME(1),
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > org::apache::http::cookie::CookieOrigin::getPath()
{
	return call_method<
		org::apache::http::cookie::CookieOrigin::J2CPP_CLASS_NAME,
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_NAME(2),
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint org::apache::http::cookie::CookieOrigin::getPort()
{
	return call_method<
		org::apache::http::cookie::CookieOrigin::J2CPP_CLASS_NAME,
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_NAME(3),
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(get_jobject());
}

jboolean org::apache::http::cookie::CookieOrigin::isSecure()
{
	return call_method<
		org::apache::http::cookie::CookieOrigin::J2CPP_CLASS_NAME,
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_NAME(4),
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(get_jobject());
}

local_ref< java::lang::String > org::apache::http::cookie::CookieOrigin::toString()
{
	return call_method<
		org::apache::http::cookie::CookieOrigin::J2CPP_CLASS_NAME,
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_NAME(5),
		org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::lang::String >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(org::apache::http::cookie::CookieOrigin,"org/apache/http/cookie/CookieOrigin")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,0,"<init>","(Ljava/lang/String;ILjava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,1,"getHost","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,2,"getPath","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,3,"getPort","()I")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,4,"isSecure","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,5,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
