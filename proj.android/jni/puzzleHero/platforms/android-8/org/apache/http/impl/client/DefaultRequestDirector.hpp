/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.impl.client.DefaultRequestDirector
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTREQUESTDIRECTOR_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTREQUESTDIRECTOR_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { namespace client { class AuthenticationHandler; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace client { class RequestDirector; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace client { class UserTokenHandler; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace client { class HttpRequestRetryHandler; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace client { class RedirectHandler; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class ConnectionReuseStrategy; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace params { class HttpParams; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpResponse; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpHost; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpRequest; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { class ClientConnectionManager; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { namespace routing { class HttpRoutePlanner; } } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { class ConnectionKeepAliveStrategy; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace protocol { class HttpRequestExecutor; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace protocol { class HttpProcessor; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace protocol { class HttpContext; } } } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <org/apache/http/ConnectionReuseStrategy.hpp>
#include <org/apache/http/HttpHost.hpp>
#include <org/apache/http/HttpRequest.hpp>
#include <org/apache/http/HttpResponse.hpp>
#include <org/apache/http/client/AuthenticationHandler.hpp>
#include <org/apache/http/client/HttpRequestRetryHandler.hpp>
#include <org/apache/http/client/RedirectHandler.hpp>
#include <org/apache/http/client/RequestDirector.hpp>
#include <org/apache/http/client/UserTokenHandler.hpp>
#include <org/apache/http/conn/ClientConnectionManager.hpp>
#include <org/apache/http/conn/ConnectionKeepAliveStrategy.hpp>
#include <org/apache/http/conn/routing/HttpRoutePlanner.hpp>
#include <org/apache/http/params/HttpParams.hpp>
#include <org/apache/http/protocol/HttpContext.hpp>
#include <org/apache/http/protocol/HttpProcessor.hpp>
#include <org/apache/http/protocol/HttpRequestExecutor.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace impl { namespace client {

	class DefaultRequestDirector;
	class DefaultRequestDirector
		: public object<DefaultRequestDirector>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)
		J2CPP_DECLARE_FIELD(8)
		J2CPP_DECLARE_FIELD(9)

		explicit DefaultRequestDirector(jobject jobj)
		: object<DefaultRequestDirector>(jobj)
		{
		}

		operator local_ref<org::apache::http::client::RequestDirector>() const;
		operator local_ref<java::lang::Object>() const;


		DefaultRequestDirector(local_ref< org::apache::http::protocol::HttpRequestExecutor > const&, local_ref< org::apache::http::conn::ClientConnectionManager > const&, local_ref< org::apache::http::ConnectionReuseStrategy > const&, local_ref< org::apache::http::conn::ConnectionKeepAliveStrategy > const&, local_ref< org::apache::http::conn::routing::HttpRoutePlanner > const&, local_ref< org::apache::http::protocol::HttpProcessor > const&, local_ref< org::apache::http::client::HttpRequestRetryHandler > const&, local_ref< org::apache::http::client::RedirectHandler > const&, local_ref< org::apache::http::client::AuthenticationHandler > const&, local_ref< org::apache::http::client::AuthenticationHandler > const&, local_ref< org::apache::http::client::UserTokenHandler > const&, local_ref< org::apache::http::params::HttpParams > const&);
		local_ref< org::apache::http::HttpResponse > execute(local_ref< org::apache::http::HttpHost >  const&, local_ref< org::apache::http::HttpRequest >  const&, local_ref< org::apache::http::protocol::HttpContext >  const&);

	}; //class DefaultRequestDirector

} //namespace client
} //namespace impl
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTREQUESTDIRECTOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTREQUESTDIRECTOR_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTREQUESTDIRECTOR_HPP_IMPL

namespace j2cpp {



org::apache::http::impl::client::DefaultRequestDirector::operator local_ref<org::apache::http::client::RequestDirector>() const
{
	return local_ref<org::apache::http::client::RequestDirector>(get_jobject());
}

org::apache::http::impl::client::DefaultRequestDirector::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


org::apache::http::impl::client::DefaultRequestDirector::DefaultRequestDirector(local_ref< org::apache::http::protocol::HttpRequestExecutor > const &a0, local_ref< org::apache::http::conn::ClientConnectionManager > const &a1, local_ref< org::apache::http::ConnectionReuseStrategy > const &a2, local_ref< org::apache::http::conn::ConnectionKeepAliveStrategy > const &a3, local_ref< org::apache::http::conn::routing::HttpRoutePlanner > const &a4, local_ref< org::apache::http::protocol::HttpProcessor > const &a5, local_ref< org::apache::http::client::HttpRequestRetryHandler > const &a6, local_ref< org::apache::http::client::RedirectHandler > const &a7, local_ref< org::apache::http::client::AuthenticationHandler > const &a8, local_ref< org::apache::http::client::AuthenticationHandler > const &a9, local_ref< org::apache::http::client::UserTokenHandler > const &a10, local_ref< org::apache::http::params::HttpParams > const &a11)
: object<org::apache::http::impl::client::DefaultRequestDirector>(
	call_new_object<
		org::apache::http::impl::client::DefaultRequestDirector::J2CPP_CLASS_NAME,
		org::apache::http::impl::client::DefaultRequestDirector::J2CPP_METHOD_NAME(0),
		org::apache::http::impl::client::DefaultRequestDirector::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11)
)
{
}



local_ref< org::apache::http::HttpResponse > org::apache::http::impl::client::DefaultRequestDirector::execute(local_ref< org::apache::http::HttpHost > const &a0, local_ref< org::apache::http::HttpRequest > const &a1, local_ref< org::apache::http::protocol::HttpContext > const &a2)
{
	return call_method<
		org::apache::http::impl::client::DefaultRequestDirector::J2CPP_CLASS_NAME,
		org::apache::http::impl::client::DefaultRequestDirector::J2CPP_METHOD_NAME(2),
		org::apache::http::impl::client::DefaultRequestDirector::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< org::apache::http::HttpResponse >
	>(get_jobject(), a0, a1, a2);
}










J2CPP_DEFINE_CLASS(org::apache::http::impl::client::DefaultRequestDirector,"org/apache/http/impl/client/DefaultRequestDirector")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultRequestDirector,0,"<init>","(Lorg/apache/http/protocol/HttpRequestExecutor;Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;Lorg/apache/http/conn/routing/HttpRoutePlanner;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/client/HttpRequestRetryHandler;Lorg/apache/http/client/RedirectHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/UserTokenHandler;Lorg/apache/http/params/HttpParams;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultRequestDirector,1,"rewriteRequestURI","(Lorg/apache/http/impl/client/RequestWrapper;Lorg/apache/http/conn/routing/HttpRoute;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultRequestDirector,2,"execute","(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultRequestDirector,3,"releaseConnection","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultRequestDirector,4,"determineRoute","(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultRequestDirector,5,"establishRoute","(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultRequestDirector,6,"createTunnelToTarget","(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultRequestDirector,7,"createTunnelToProxy","(Lorg/apache/http/conn/routing/HttpRoute;ILorg/apache/http/protocol/HttpContext;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultRequestDirector,8,"createConnectRequest","(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpRequest;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultRequestDirector,9,"handleResponse","(Lorg/apache/http/impl/client/RoutedRequest;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/impl/client/RoutedRequest;")
J2CPP_DEFINE_FIELD(org::apache::http::impl::client::DefaultRequestDirector,0,"connManager","Lorg/apache/http/conn/ClientConnectionManager;")
J2CPP_DEFINE_FIELD(org::apache::http::impl::client::DefaultRequestDirector,1,"routePlanner","Lorg/apache/http/conn/routing/HttpRoutePlanner;")
J2CPP_DEFINE_FIELD(org::apache::http::impl::client::DefaultRequestDirector,2,"reuseStrategy","Lorg/apache/http/ConnectionReuseStrategy;")
J2CPP_DEFINE_FIELD(org::apache::http::impl::client::DefaultRequestDirector,3,"keepAliveStrategy","Lorg/apache/http/conn/ConnectionKeepAliveStrategy;")
J2CPP_DEFINE_FIELD(org::apache::http::impl::client::DefaultRequestDirector,4,"requestExec","Lorg/apache/http/protocol/HttpRequestExecutor;")
J2CPP_DEFINE_FIELD(org::apache::http::impl::client::DefaultRequestDirector,5,"httpProcessor","Lorg/apache/http/protocol/HttpProcessor;")
J2CPP_DEFINE_FIELD(org::apache::http::impl::client::DefaultRequestDirector,6,"retryHandler","Lorg/apache/http/client/HttpRequestRetryHandler;")
J2CPP_DEFINE_FIELD(org::apache::http::impl::client::DefaultRequestDirector,7,"redirectHandler","Lorg/apache/http/client/RedirectHandler;")
J2CPP_DEFINE_FIELD(org::apache::http::impl::client::DefaultRequestDirector,8,"params","Lorg/apache/http/params/HttpParams;")
J2CPP_DEFINE_FIELD(org::apache::http::impl::client::DefaultRequestDirector,9,"managedConn","Lorg/apache/http/conn/ManagedClientConnection;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTREQUESTDIRECTOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
