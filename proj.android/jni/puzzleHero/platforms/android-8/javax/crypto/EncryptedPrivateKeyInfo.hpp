/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.crypto.EncryptedPrivateKeyInfo
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_ENCRYPTEDPRIVATEKEYINFO_HPP_DECL
#define J2CPP_JAVAX_CRYPTO_ENCRYPTEDPRIVATEKEYINFO_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { namespace spec { class PKCS8EncodedKeySpec; } } } }
namespace j2cpp { namespace java { namespace security { class Provider; } } }
namespace j2cpp { namespace java { namespace security { class Key; } } }
namespace j2cpp { namespace java { namespace security { class AlgorithmParameters; } } }
namespace j2cpp { namespace javax { namespace crypto { class Cipher; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/security/AlgorithmParameters.hpp>
#include <java/security/Key.hpp>
#include <java/security/Provider.hpp>
#include <java/security/spec/PKCS8EncodedKeySpec.hpp>
#include <javax/crypto/Cipher.hpp>


namespace j2cpp {

namespace javax { namespace crypto {

	class EncryptedPrivateKeyInfo;
	class EncryptedPrivateKeyInfo
		: public object<EncryptedPrivateKeyInfo>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)

		explicit EncryptedPrivateKeyInfo(jobject jobj)
		: object<EncryptedPrivateKeyInfo>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		EncryptedPrivateKeyInfo(local_ref< array<jbyte,1> > const&);
		EncryptedPrivateKeyInfo(local_ref< java::lang::String > const&, local_ref< array<jbyte,1> > const&);
		EncryptedPrivateKeyInfo(local_ref< java::security::AlgorithmParameters > const&, local_ref< array<jbyte,1> > const&);
		local_ref< java::lang::String > getAlgName();
		local_ref< java::security::AlgorithmParameters > getAlgParameters();
		local_ref< array<jbyte,1> > getEncryptedData();
		local_ref< java::security::spec::PKCS8EncodedKeySpec > getKeySpec(local_ref< javax::crypto::Cipher >  const&);
		local_ref< java::security::spec::PKCS8EncodedKeySpec > getKeySpec(local_ref< java::security::Key >  const&);
		local_ref< java::security::spec::PKCS8EncodedKeySpec > getKeySpec(local_ref< java::security::Key >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::security::spec::PKCS8EncodedKeySpec > getKeySpec(local_ref< java::security::Key >  const&, local_ref< java::security::Provider >  const&);
		local_ref< array<jbyte,1> > getEncoded();
	}; //class EncryptedPrivateKeyInfo

} //namespace crypto
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_ENCRYPTEDPRIVATEKEYINFO_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_ENCRYPTEDPRIVATEKEYINFO_HPP_IMPL
#define J2CPP_JAVAX_CRYPTO_ENCRYPTEDPRIVATEKEYINFO_HPP_IMPL

namespace j2cpp {



javax::crypto::EncryptedPrivateKeyInfo::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


javax::crypto::EncryptedPrivateKeyInfo::EncryptedPrivateKeyInfo(local_ref< array<jbyte,1> > const &a0)
: object<javax::crypto::EncryptedPrivateKeyInfo>(
	call_new_object<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(0),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



javax::crypto::EncryptedPrivateKeyInfo::EncryptedPrivateKeyInfo(local_ref< java::lang::String > const &a0, local_ref< array<jbyte,1> > const &a1)
: object<javax::crypto::EncryptedPrivateKeyInfo>(
	call_new_object<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(1),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1)
)
{
}



javax::crypto::EncryptedPrivateKeyInfo::EncryptedPrivateKeyInfo(local_ref< java::security::AlgorithmParameters > const &a0, local_ref< array<jbyte,1> > const &a1)
: object<javax::crypto::EncryptedPrivateKeyInfo>(
	call_new_object<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(2),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1)
)
{
}


local_ref< java::lang::String > javax::crypto::EncryptedPrivateKeyInfo::getAlgName()
{
	return call_method<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(3),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::security::AlgorithmParameters > javax::crypto::EncryptedPrivateKeyInfo::getAlgParameters()
{
	return call_method<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(4),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::security::AlgorithmParameters >
	>(get_jobject());
}

local_ref< array<jbyte,1> > javax::crypto::EncryptedPrivateKeyInfo::getEncryptedData()
{
	return call_method<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(5),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< array<jbyte,1> >
	>(get_jobject());
}

local_ref< java::security::spec::PKCS8EncodedKeySpec > javax::crypto::EncryptedPrivateKeyInfo::getKeySpec(local_ref< javax::crypto::Cipher > const &a0)
{
	return call_method<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(6),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::security::spec::PKCS8EncodedKeySpec >
	>(get_jobject(), a0);
}

local_ref< java::security::spec::PKCS8EncodedKeySpec > javax::crypto::EncryptedPrivateKeyInfo::getKeySpec(local_ref< java::security::Key > const &a0)
{
	return call_method<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(7),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::security::spec::PKCS8EncodedKeySpec >
	>(get_jobject(), a0);
}

local_ref< java::security::spec::PKCS8EncodedKeySpec > javax::crypto::EncryptedPrivateKeyInfo::getKeySpec(local_ref< java::security::Key > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(8),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::security::spec::PKCS8EncodedKeySpec >
	>(get_jobject(), a0, a1);
}

local_ref< java::security::spec::PKCS8EncodedKeySpec > javax::crypto::EncryptedPrivateKeyInfo::getKeySpec(local_ref< java::security::Key > const &a0, local_ref< java::security::Provider > const &a1)
{
	return call_method<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(9),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::security::spec::PKCS8EncodedKeySpec >
	>(get_jobject(), a0, a1);
}

local_ref< array<jbyte,1> > javax::crypto::EncryptedPrivateKeyInfo::getEncoded()
{
	return call_method<
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_CLASS_NAME,
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_NAME(10),
		javax::crypto::EncryptedPrivateKeyInfo::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< array<jbyte,1> >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(javax::crypto::EncryptedPrivateKeyInfo,"javax/crypto/EncryptedPrivateKeyInfo")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,0,"<init>","([B)V")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,1,"<init>","(Ljava/lang/String;[B)V")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,2,"<init>","(Ljava/security/AlgorithmParameters;[B)V")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,3,"getAlgName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,4,"getAlgParameters","()Ljava/security/AlgorithmParameters;")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,5,"getEncryptedData","()[B")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,6,"getKeySpec","(Ljavax/crypto/Cipher;)Ljava/security/spec/PKCS8EncodedKeySpec;")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,7,"getKeySpec","(Ljava/security/Key;)Ljava/security/spec/PKCS8EncodedKeySpec;")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,8,"getKeySpec","(Ljava/security/Key;Ljava/lang/String;)Ljava/security/spec/PKCS8EncodedKeySpec;")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,9,"getKeySpec","(Ljava/security/Key;Ljava/security/Provider;)Ljava/security/spec/PKCS8EncodedKeySpec;")
J2CPP_DEFINE_METHOD(javax::crypto::EncryptedPrivateKeyInfo,10,"getEncoded","()[B")

} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_ENCRYPTEDPRIVATEKEYINFO_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
