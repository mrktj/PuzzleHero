/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.crypto.MacSpi
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_MACSPI_HPP_DECL
#define J2CPP_JAVAX_CRYPTO_MACSPI_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace javax { namespace crypto {

	class MacSpi;
	class MacSpi
		: public object<MacSpi>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)

		explicit MacSpi(jobject jobj)
		: object<MacSpi>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		MacSpi();
		local_ref< java::lang::Object > clone();
	}; //class MacSpi

} //namespace crypto
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_MACSPI_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_MACSPI_HPP_IMPL
#define J2CPP_JAVAX_CRYPTO_MACSPI_HPP_IMPL

namespace j2cpp {



javax::crypto::MacSpi::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


javax::crypto::MacSpi::MacSpi()
: object<javax::crypto::MacSpi>(
	call_new_object<
		javax::crypto::MacSpi::J2CPP_CLASS_NAME,
		javax::crypto::MacSpi::J2CPP_METHOD_NAME(0),
		javax::crypto::MacSpi::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}









local_ref< java::lang::Object > javax::crypto::MacSpi::clone()
{
	return call_method<
		javax::crypto::MacSpi::J2CPP_CLASS_NAME,
		javax::crypto::MacSpi::J2CPP_METHOD_NAME(8),
		javax::crypto::MacSpi::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::lang::Object >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(javax::crypto::MacSpi,"javax/crypto/MacSpi")
J2CPP_DEFINE_METHOD(javax::crypto::MacSpi,0,"<init>","()V")
J2CPP_DEFINE_METHOD(javax::crypto::MacSpi,1,"engineGetMacLength","()I")
J2CPP_DEFINE_METHOD(javax::crypto::MacSpi,2,"engineInit","(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V")
J2CPP_DEFINE_METHOD(javax::crypto::MacSpi,3,"engineUpdate","(B)V")
J2CPP_DEFINE_METHOD(javax::crypto::MacSpi,4,"engineUpdate","([BII)V")
J2CPP_DEFINE_METHOD(javax::crypto::MacSpi,5,"engineUpdate","(Ljava/nio/ByteBuffer;)V")
J2CPP_DEFINE_METHOD(javax::crypto::MacSpi,6,"engineDoFinal","()[B")
J2CPP_DEFINE_METHOD(javax::crypto::MacSpi,7,"engineReset","()V")
J2CPP_DEFINE_METHOD(javax::crypto::MacSpi,8,"clone","()Ljava/lang/Object;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_MACSPI_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
