/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.xml.validation.SchemaFactoryLoader
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_VALIDATION_SCHEMAFACTORYLOADER_HPP_DECL
#define J2CPP_JAVAX_XML_VALIDATION_SCHEMAFACTORYLOADER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace javax { namespace xml { namespace validation { class SchemaFactory; } } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <javax/xml/validation/SchemaFactory.hpp>


namespace j2cpp {

namespace javax { namespace xml { namespace validation {

	class SchemaFactoryLoader;
	class SchemaFactoryLoader
		: public object<SchemaFactoryLoader>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit SchemaFactoryLoader(jobject jobj)
		: object<SchemaFactoryLoader>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		local_ref< javax::xml::validation::SchemaFactory > newFactory(local_ref< java::lang::String >  const&);
	}; //class SchemaFactoryLoader

} //namespace validation
} //namespace xml
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_VALIDATION_SCHEMAFACTORYLOADER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_VALIDATION_SCHEMAFACTORYLOADER_HPP_IMPL
#define J2CPP_JAVAX_XML_VALIDATION_SCHEMAFACTORYLOADER_HPP_IMPL

namespace j2cpp {



javax::xml::validation::SchemaFactoryLoader::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< javax::xml::validation::SchemaFactory > javax::xml::validation::SchemaFactoryLoader::newFactory(local_ref< java::lang::String > const &a0)
{
	return call_method<
		javax::xml::validation::SchemaFactoryLoader::J2CPP_CLASS_NAME,
		javax::xml::validation::SchemaFactoryLoader::J2CPP_METHOD_NAME(1),
		javax::xml::validation::SchemaFactoryLoader::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< javax::xml::validation::SchemaFactory >
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(javax::xml::validation::SchemaFactoryLoader,"javax/xml/validation/SchemaFactoryLoader")
J2CPP_DEFINE_METHOD(javax::xml::validation::SchemaFactoryLoader,0,"<init>","()V")
J2CPP_DEFINE_METHOD(javax::xml::validation::SchemaFactoryLoader,1,"newFactory","(Ljava/lang/String;)Ljavax/xml/validation/SchemaFactory;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_VALIDATION_SCHEMAFACTORYLOADER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
