/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.net.ssl.SSLSession
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_SSLSESSION_HPP_DECL
#define J2CPP_JAVAX_NET_SSL_SSLSESSION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { class Principal; } } }
namespace j2cpp { namespace java { namespace security { namespace cert { class Certificate; } } } }
namespace j2cpp { namespace javax { namespace security { namespace cert { class X509Certificate; } } } }
namespace j2cpp { namespace javax { namespace net { namespace ssl { class SSLSessionContext; } } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/security/Principal.hpp>
#include <java/security/cert/Certificate.hpp>
#include <javax/net/ssl/SSLSessionContext.hpp>
#include <javax/security/cert/X509Certificate.hpp>


namespace j2cpp {

namespace javax { namespace net { namespace ssl {

	class SSLSession;
	class SSLSession
		: public object<SSLSession>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)

		explicit SSLSession(jobject jobj)
		: object<SSLSession>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		jint getApplicationBufferSize();
		local_ref< java::lang::String > getCipherSuite();
		jlong getCreationTime();
		local_ref< array<jbyte,1> > getId();
		jlong getLastAccessedTime();
		local_ref< array< local_ref< java::security::cert::Certificate >, 1> > getLocalCertificates();
		local_ref< java::security::Principal > getLocalPrincipal();
		jint getPacketBufferSize();
		local_ref< array< local_ref< javax::security::cert::X509Certificate >, 1> > getPeerCertificateChain();
		local_ref< array< local_ref< java::security::cert::Certificate >, 1> > getPeerCertificates();
		local_ref< java::lang::String > getPeerHost();
		jint getPeerPort();
		local_ref< java::security::Principal > getPeerPrincipal();
		local_ref< java::lang::String > getProtocol();
		local_ref< javax::net::ssl::SSLSessionContext > getSessionContext();
		local_ref< java::lang::Object > getValue(local_ref< java::lang::String >  const&);
		local_ref< array< local_ref< java::lang::String >, 1> > getValueNames();
		void invalidate();
		jboolean isValid();
		void putValue(local_ref< java::lang::String >  const&, local_ref< java::lang::Object >  const&);
		void removeValue(local_ref< java::lang::String >  const&);
	}; //class SSLSession

} //namespace ssl
} //namespace net
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_SSLSESSION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_SSLSESSION_HPP_IMPL
#define J2CPP_JAVAX_NET_SSL_SSLSESSION_HPP_IMPL

namespace j2cpp {



javax::net::ssl::SSLSession::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

jint javax::net::ssl::SSLSession::getApplicationBufferSize()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(0),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(0), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > javax::net::ssl::SSLSession::getCipherSuite()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(1),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jlong javax::net::ssl::SSLSession::getCreationTime()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(2),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(2), 
		jlong
	>(get_jobject());
}

local_ref< array<jbyte,1> > javax::net::ssl::SSLSession::getId()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(3),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< array<jbyte,1> >
	>(get_jobject());
}

jlong javax::net::ssl::SSLSession::getLastAccessedTime()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(4),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(4), 
		jlong
	>(get_jobject());
}

local_ref< array< local_ref< java::security::cert::Certificate >, 1> > javax::net::ssl::SSLSession::getLocalCertificates()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(5),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< array< local_ref< java::security::cert::Certificate >, 1> >
	>(get_jobject());
}

local_ref< java::security::Principal > javax::net::ssl::SSLSession::getLocalPrincipal()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(6),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::security::Principal >
	>(get_jobject());
}

jint javax::net::ssl::SSLSession::getPacketBufferSize()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(7),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(7), 
		jint
	>(get_jobject());
}

local_ref< array< local_ref< javax::security::cert::X509Certificate >, 1> > javax::net::ssl::SSLSession::getPeerCertificateChain()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(8),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< array< local_ref< javax::security::cert::X509Certificate >, 1> >
	>(get_jobject());
}

local_ref< array< local_ref< java::security::cert::Certificate >, 1> > javax::net::ssl::SSLSession::getPeerCertificates()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(9),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< array< local_ref< java::security::cert::Certificate >, 1> >
	>(get_jobject());
}

local_ref< java::lang::String > javax::net::ssl::SSLSession::getPeerHost()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(10),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint javax::net::ssl::SSLSession::getPeerPort()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(11),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(11), 
		jint
	>(get_jobject());
}

local_ref< java::security::Principal > javax::net::ssl::SSLSession::getPeerPrincipal()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(12),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::security::Principal >
	>(get_jobject());
}

local_ref< java::lang::String > javax::net::ssl::SSLSession::getProtocol()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(13),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(13), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< javax::net::ssl::SSLSessionContext > javax::net::ssl::SSLSession::getSessionContext()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(14),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(14), 
		local_ref< javax::net::ssl::SSLSessionContext >
	>(get_jobject());
}

local_ref< java::lang::Object > javax::net::ssl::SSLSession::getValue(local_ref< java::lang::String > const &a0)
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(15),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(15), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

local_ref< array< local_ref< java::lang::String >, 1> > javax::net::ssl::SSLSession::getValueNames()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(16),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject());
}

void javax::net::ssl::SSLSession::invalidate()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(17),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(17), 
		void
	>(get_jobject());
}

jboolean javax::net::ssl::SSLSession::isValid()
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(18),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(18), 
		jboolean
	>(get_jobject());
}

void javax::net::ssl::SSLSession::putValue(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(19),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(19), 
		void
	>(get_jobject(), a0, a1);
}

void javax::net::ssl::SSLSession::removeValue(local_ref< java::lang::String > const &a0)
{
	return call_method<
		javax::net::ssl::SSLSession::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLSession::J2CPP_METHOD_NAME(20),
		javax::net::ssl::SSLSession::J2CPP_METHOD_SIGNATURE(20), 
		void
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(javax::net::ssl::SSLSession,"javax/net/ssl/SSLSession")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,0,"getApplicationBufferSize","()I")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,1,"getCipherSuite","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,2,"getCreationTime","()J")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,3,"getId","()[B")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,4,"getLastAccessedTime","()J")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,5,"getLocalCertificates","()[java.security.cert.Certificate")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,6,"getLocalPrincipal","()Ljava/security/Principal;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,7,"getPacketBufferSize","()I")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,8,"getPeerCertificateChain","()[javax.security.cert.X509Certificate")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,9,"getPeerCertificates","()[java.security.cert.Certificate")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,10,"getPeerHost","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,11,"getPeerPort","()I")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,12,"getPeerPrincipal","()Ljava/security/Principal;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,13,"getProtocol","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,14,"getSessionContext","()Ljavax/net/ssl/SSLSessionContext;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,15,"getValue","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,16,"getValueNames","()[java.lang.String")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,17,"invalidate","()V")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,18,"isValid","()Z")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,19,"putValue","(Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSession,20,"removeValue","(Ljava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_SSLSESSION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
