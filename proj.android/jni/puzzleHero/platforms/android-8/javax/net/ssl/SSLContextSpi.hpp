/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.net.ssl.SSLContextSpi
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_SSLCONTEXTSPI_HPP_DECL
#define J2CPP_JAVAX_NET_SSL_SSLCONTEXTSPI_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace javax { namespace net { namespace ssl {

	class SSLContextSpi;
	class SSLContextSpi
		: public object<SSLContextSpi>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)

		explicit SSLContextSpi(jobject jobj)
		: object<SSLContextSpi>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		SSLContextSpi();
	}; //class SSLContextSpi

} //namespace ssl
} //namespace net
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_SSLCONTEXTSPI_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_SSLCONTEXTSPI_HPP_IMPL
#define J2CPP_JAVAX_NET_SSL_SSLCONTEXTSPI_HPP_IMPL

namespace j2cpp {



javax::net::ssl::SSLContextSpi::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


javax::net::ssl::SSLContextSpi::SSLContextSpi()
: object<javax::net::ssl::SSLContextSpi>(
	call_new_object<
		javax::net::ssl::SSLContextSpi::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLContextSpi::J2CPP_METHOD_NAME(0),
		javax::net::ssl::SSLContextSpi::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}










J2CPP_DEFINE_CLASS(javax::net::ssl::SSLContextSpi,"javax/net/ssl/SSLContextSpi")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLContextSpi,0,"<init>","()V")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLContextSpi,1,"engineInit","([javax.net.ssl.KeyManager[javax.net.ssl.TrustManagerLjava/security/SecureRandom;)V")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLContextSpi,2,"engineGetSocketFactory","()Ljavax/net/ssl/SSLSocketFactory;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLContextSpi,3,"engineGetServerSocketFactory","()Ljavax/net/ssl/SSLServerSocketFactory;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLContextSpi,4,"engineCreateSSLEngine","(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLContextSpi,5,"engineCreateSSLEngine","()Ljavax/net/ssl/SSLEngine;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLContextSpi,6,"engineGetServerSessionContext","()Ljavax/net/ssl/SSLSessionContext;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLContextSpi,7,"engineGetClientSessionContext","()Ljavax/net/ssl/SSLSessionContext;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_SSLCONTEXTSPI_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
