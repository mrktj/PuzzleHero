/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.net.ssl.SSLEngineResult
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_SSLENGINERESULT_HPP_DECL
#define J2CPP_JAVAX_NET_SSL_SSLENGINERESULT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Enum; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Comparable; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }
namespace j2cpp { namespace javax { namespace net { namespace ssl { namespace SSLEngineResult_ { class Status; } } } } }
namespace j2cpp { namespace javax { namespace net { namespace ssl { namespace SSLEngineResult_ { class HandshakeStatus; } } } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Comparable.hpp>
#include <java/lang/Enum.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <javax/net/ssl/SSLEngineResult.hpp>


namespace j2cpp {

namespace javax { namespace net { namespace ssl {

	class SSLEngineResult;
	namespace SSLEngineResult_ {

		class Status;
		class Status
			: public object<Status>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)

			explicit Status(jobject jobj)
			: object<Status>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< javax::net::ssl::SSLEngineResult_::Status >, 1> > values();
			static local_ref< javax::net::ssl::SSLEngineResult_::Status > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< javax::net::ssl::SSLEngineResult_::Status > > BUFFER_OVERFLOW;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< javax::net::ssl::SSLEngineResult_::Status > > BUFFER_UNDERFLOW;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< javax::net::ssl::SSLEngineResult_::Status > > CLOSED;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), local_ref< javax::net::ssl::SSLEngineResult_::Status > > OK;
		}; //class Status

		class HandshakeStatus;
		class HandshakeStatus
			: public object<HandshakeStatus>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)
			J2CPP_DECLARE_FIELD(5)

			explicit HandshakeStatus(jobject jobj)
			: object<HandshakeStatus>(jobj)
			{
			}

			operator local_ref<java::lang::Enum>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::Comparable>() const;
			operator local_ref<java::io::Serializable>() const;


			static local_ref< array< local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus >, 1> > values();
			static local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > valueOf(local_ref< java::lang::String >  const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > > FINISHED;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > > NEED_TASK;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > > NEED_UNWRAP;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > > NEED_WRAP;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > > NOT_HANDSHAKING;
		}; //class HandshakeStatus

	} //namespace SSLEngineResult_

	class SSLEngineResult
		: public object<SSLEngineResult>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		typedef SSLEngineResult_::Status Status;
		typedef SSLEngineResult_::HandshakeStatus HandshakeStatus;

		explicit SSLEngineResult(jobject jobj)
		: object<SSLEngineResult>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		SSLEngineResult(local_ref< javax::net::ssl::SSLEngineResult_::Status > const&, local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > const&, jint, jint);
		local_ref< javax::net::ssl::SSLEngineResult_::Status > getStatus();
		local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > getHandshakeStatus();
		jint bytesConsumed();
		jint bytesProduced();
		local_ref< java::lang::String > toString();
	}; //class SSLEngineResult

} //namespace ssl
} //namespace net
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_SSLENGINERESULT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_SSLENGINERESULT_HPP_IMPL
#define J2CPP_JAVAX_NET_SSL_SSLENGINERESULT_HPP_IMPL

namespace j2cpp {




javax::net::ssl::SSLEngineResult_::Status::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

javax::net::ssl::SSLEngineResult_::Status::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

javax::net::ssl::SSLEngineResult_::Status::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

javax::net::ssl::SSLEngineResult_::Status::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< javax::net::ssl::SSLEngineResult_::Status >, 1> > javax::net::ssl::SSLEngineResult_::Status::values()
{
	return call_static_method<
		javax::net::ssl::SSLEngineResult_::Status::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLEngineResult_::Status::J2CPP_METHOD_NAME(0),
		javax::net::ssl::SSLEngineResult_::Status::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< javax::net::ssl::SSLEngineResult_::Status >, 1> >
	>();
}

local_ref< javax::net::ssl::SSLEngineResult_::Status > javax::net::ssl::SSLEngineResult_::Status::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		javax::net::ssl::SSLEngineResult_::Status::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLEngineResult_::Status::J2CPP_METHOD_NAME(1),
		javax::net::ssl::SSLEngineResult_::Status::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< javax::net::ssl::SSLEngineResult_::Status >
	>(a0);
}




static_field<
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_CLASS_NAME,
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_FIELD_NAME(0),
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_FIELD_SIGNATURE(0),
	local_ref< javax::net::ssl::SSLEngineResult_::Status >
> javax::net::ssl::SSLEngineResult_::Status::BUFFER_OVERFLOW;

static_field<
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_CLASS_NAME,
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_FIELD_NAME(1),
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_FIELD_SIGNATURE(1),
	local_ref< javax::net::ssl::SSLEngineResult_::Status >
> javax::net::ssl::SSLEngineResult_::Status::BUFFER_UNDERFLOW;

static_field<
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_CLASS_NAME,
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_FIELD_NAME(2),
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_FIELD_SIGNATURE(2),
	local_ref< javax::net::ssl::SSLEngineResult_::Status >
> javax::net::ssl::SSLEngineResult_::Status::CLOSED;

static_field<
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_CLASS_NAME,
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_FIELD_NAME(3),
	javax::net::ssl::SSLEngineResult_::Status::J2CPP_FIELD_SIGNATURE(3),
	local_ref< javax::net::ssl::SSLEngineResult_::Status >
> javax::net::ssl::SSLEngineResult_::Status::OK;


J2CPP_DEFINE_CLASS(javax::net::ssl::SSLEngineResult_::Status,"javax/net/ssl/SSLEngineResult$Status")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult_::Status,0,"values","()[javax.net.ssl.SSLEngineResult.Status")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult_::Status,1,"valueOf","(Ljava/lang/String;)Ljavax/net/ssl/SSLEngineResult$Status;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult_::Status,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult_::Status,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::Status,0,"BUFFER_OVERFLOW","Ljavax/net/ssl/SSLEngineResult$Status;")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::Status,1,"BUFFER_UNDERFLOW","Ljavax/net/ssl/SSLEngineResult$Status;")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::Status,2,"CLOSED","Ljavax/net/ssl/SSLEngineResult$Status;")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::Status,3,"OK","Ljavax/net/ssl/SSLEngineResult$Status;")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::Status,4,"$VALUES","[javax.net.ssl.SSLEngineResult.Status")


javax::net::ssl::SSLEngineResult_::HandshakeStatus::operator local_ref<java::lang::Enum>() const
{
	return local_ref<java::lang::Enum>(get_jobject());
}

javax::net::ssl::SSLEngineResult_::HandshakeStatus::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

javax::net::ssl::SSLEngineResult_::HandshakeStatus::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

javax::net::ssl::SSLEngineResult_::HandshakeStatus::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

local_ref< array< local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus >, 1> > javax::net::ssl::SSLEngineResult_::HandshakeStatus::values()
{
	return call_static_method<
		javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_METHOD_NAME(0),
		javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< array< local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus >, 1> >
	>();
}

local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > javax::net::ssl::SSLEngineResult_::HandshakeStatus::valueOf(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_METHOD_NAME(1),
		javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus >
	>(a0);
}




static_field<
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_CLASS_NAME,
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_FIELD_NAME(0),
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_FIELD_SIGNATURE(0),
	local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus >
> javax::net::ssl::SSLEngineResult_::HandshakeStatus::FINISHED;

static_field<
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_CLASS_NAME,
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_FIELD_NAME(1),
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_FIELD_SIGNATURE(1),
	local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus >
> javax::net::ssl::SSLEngineResult_::HandshakeStatus::NEED_TASK;

static_field<
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_CLASS_NAME,
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_FIELD_NAME(2),
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_FIELD_SIGNATURE(2),
	local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus >
> javax::net::ssl::SSLEngineResult_::HandshakeStatus::NEED_UNWRAP;

static_field<
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_CLASS_NAME,
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_FIELD_NAME(3),
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_FIELD_SIGNATURE(3),
	local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus >
> javax::net::ssl::SSLEngineResult_::HandshakeStatus::NEED_WRAP;

static_field<
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_CLASS_NAME,
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_FIELD_NAME(4),
	javax::net::ssl::SSLEngineResult_::HandshakeStatus::J2CPP_FIELD_SIGNATURE(4),
	local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus >
> javax::net::ssl::SSLEngineResult_::HandshakeStatus::NOT_HANDSHAKING;


J2CPP_DEFINE_CLASS(javax::net::ssl::SSLEngineResult_::HandshakeStatus,"javax/net/ssl/SSLEngineResult$HandshakeStatus")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult_::HandshakeStatus,0,"values","()[javax.net.ssl.SSLEngineResult.HandshakeStatus")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult_::HandshakeStatus,1,"valueOf","(Ljava/lang/String;)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult_::HandshakeStatus,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult_::HandshakeStatus,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::HandshakeStatus,0,"FINISHED","Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::HandshakeStatus,1,"NEED_TASK","Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::HandshakeStatus,2,"NEED_UNWRAP","Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::HandshakeStatus,3,"NEED_WRAP","Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::HandshakeStatus,4,"NOT_HANDSHAKING","Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;")
J2CPP_DEFINE_FIELD(javax::net::ssl::SSLEngineResult_::HandshakeStatus,5,"$VALUES","[javax.net.ssl.SSLEngineResult.HandshakeStatus")



javax::net::ssl::SSLEngineResult::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


javax::net::ssl::SSLEngineResult::SSLEngineResult(local_ref< javax::net::ssl::SSLEngineResult_::Status > const &a0, local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > const &a1, jint a2, jint a3)
: object<javax::net::ssl::SSLEngineResult>(
	call_new_object<
		javax::net::ssl::SSLEngineResult::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_NAME(0),
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1, a2, a3)
)
{
}


local_ref< javax::net::ssl::SSLEngineResult_::Status > javax::net::ssl::SSLEngineResult::getStatus()
{
	return call_method<
		javax::net::ssl::SSLEngineResult::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_NAME(1),
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< javax::net::ssl::SSLEngineResult_::Status >
	>(get_jobject());
}

local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus > javax::net::ssl::SSLEngineResult::getHandshakeStatus()
{
	return call_method<
		javax::net::ssl::SSLEngineResult::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_NAME(2),
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< javax::net::ssl::SSLEngineResult_::HandshakeStatus >
	>(get_jobject());
}

jint javax::net::ssl::SSLEngineResult::bytesConsumed()
{
	return call_method<
		javax::net::ssl::SSLEngineResult::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_NAME(3),
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(get_jobject());
}

jint javax::net::ssl::SSLEngineResult::bytesProduced()
{
	return call_method<
		javax::net::ssl::SSLEngineResult::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_NAME(4),
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > javax::net::ssl::SSLEngineResult::toString()
{
	return call_method<
		javax::net::ssl::SSLEngineResult::J2CPP_CLASS_NAME,
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_NAME(5),
		javax::net::ssl::SSLEngineResult::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::lang::String >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(javax::net::ssl::SSLEngineResult,"javax/net/ssl/SSLEngineResult")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult,0,"<init>","(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult,1,"getStatus","()Ljavax/net/ssl/SSLEngineResult$Status;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult,2,"getHandshakeStatus","()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult,3,"bytesConsumed","()I")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult,4,"bytesProduced","()I")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLEngineResult,5,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_SSLENGINERESULT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
