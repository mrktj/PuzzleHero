/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.sql.RowSet
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_SQL_ROWSET_HPP_DECL
#define J2CPP_JAVAX_SQL_ROWSET_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace math { class BigDecimal; } } }
namespace j2cpp { namespace java { namespace util { class Calendar; } } }
namespace j2cpp { namespace java { namespace util { class Map; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }
namespace j2cpp { namespace java { namespace io { class Reader; } } }
namespace j2cpp { namespace java { namespace sql { class Array; } } }
namespace j2cpp { namespace java { namespace sql { class Blob; } } }
namespace j2cpp { namespace java { namespace sql { class Clob; } } }
namespace j2cpp { namespace java { namespace sql { class Time; } } }
namespace j2cpp { namespace java { namespace sql { class Ref; } } }
namespace j2cpp { namespace java { namespace sql { class ResultSet; } } }
namespace j2cpp { namespace java { namespace sql { class Timestamp; } } }
namespace j2cpp { namespace java { namespace sql { class Date; } } }
namespace j2cpp { namespace javax { namespace sql { class RowSetListener; } } }


#include <java/io/InputStream.hpp>
#include <java/io/Reader.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/math/BigDecimal.hpp>
#include <java/sql/Array.hpp>
#include <java/sql/Blob.hpp>
#include <java/sql/Clob.hpp>
#include <java/sql/Date.hpp>
#include <java/sql/Ref.hpp>
#include <java/sql/ResultSet.hpp>
#include <java/sql/Time.hpp>
#include <java/sql/Timestamp.hpp>
#include <java/util/Calendar.hpp>
#include <java/util/Map.hpp>
#include <javax/sql/RowSetListener.hpp>


namespace j2cpp {

namespace javax { namespace sql {

	class RowSet;
	class RowSet
		: public object<RowSet>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)

		explicit RowSet(jobject jobj)
		: object<RowSet>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::sql::ResultSet>() const;


		void addRowSetListener(local_ref< javax::sql::RowSetListener >  const&);
		void clearParameters();
		void execute();
		local_ref< java::lang::String > getCommand();
		local_ref< java::lang::String > getDataSourceName();
		jboolean getEscapeProcessing();
		jint getMaxFieldSize();
		jint getMaxRows();
		local_ref< java::lang::String > getPassword();
		jint getQueryTimeout();
		jint getTransactionIsolation();
		local_ref< java::util::Map > getTypeMap();
		local_ref< java::lang::String > getUrl();
		local_ref< java::lang::String > getUsername();
		jboolean isReadOnly();
		void removeRowSetListener(local_ref< javax::sql::RowSetListener >  const&);
		void setArray(jint, local_ref< java::sql::Array >  const&);
		void setAsciiStream(jint, local_ref< java::io::InputStream >  const&, jint);
		void setBigDecimal(jint, local_ref< java::math::BigDecimal >  const&);
		void setBinaryStream(jint, local_ref< java::io::InputStream >  const&, jint);
		void setBlob(jint, local_ref< java::sql::Blob >  const&);
		void setBoolean(jint, jboolean);
		void setByte(jint, jbyte);
		void setBytes(jint, local_ref< array<jbyte,1> >  const&);
		void setCharacterStream(jint, local_ref< java::io::Reader >  const&, jint);
		void setClob(jint, local_ref< java::sql::Clob >  const&);
		void setCommand(local_ref< java::lang::String >  const&);
		void setConcurrency(jint);
		void setDataSourceName(local_ref< java::lang::String >  const&);
		void setDate(jint, local_ref< java::sql::Date >  const&);
		void setDate(jint, local_ref< java::sql::Date >  const&, local_ref< java::util::Calendar >  const&);
		void setDouble(jint, jdouble);
		void setEscapeProcessing(jboolean);
		void setFloat(jint, jfloat);
		void setInt(jint, jint);
		void setLong(jint, jlong);
		void setMaxFieldSize(jint);
		void setMaxRows(jint);
		void setNull(jint, jint);
		void setNull(jint, jint, local_ref< java::lang::String >  const&);
		void setObject(jint, local_ref< java::lang::Object >  const&);
		void setObject(jint, local_ref< java::lang::Object >  const&, jint);
		void setObject(jint, local_ref< java::lang::Object >  const&, jint, jint);
		void setPassword(local_ref< java::lang::String >  const&);
		void setQueryTimeout(jint);
		void setReadOnly(jboolean);
		void setRef(jint, local_ref< java::sql::Ref >  const&);
		void setShort(jint, jshort);
		void setString(jint, local_ref< java::lang::String >  const&);
		void setTime(jint, local_ref< java::sql::Time >  const&);
		void setTime(jint, local_ref< java::sql::Time >  const&, local_ref< java::util::Calendar >  const&);
		void setTimestamp(jint, local_ref< java::sql::Timestamp >  const&);
		void setTimestamp(jint, local_ref< java::sql::Timestamp >  const&, local_ref< java::util::Calendar >  const&);
		void setTransactionIsolation(jint);
		void setType(jint);
		void setTypeMap(local_ref< java::util::Map >  const&);
		void setUrl(local_ref< java::lang::String >  const&);
		void setUsername(local_ref< java::lang::String >  const&);
	}; //class RowSet

} //namespace sql
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_SQL_ROWSET_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_SQL_ROWSET_HPP_IMPL
#define J2CPP_JAVAX_SQL_ROWSET_HPP_IMPL

namespace j2cpp {



javax::sql::RowSet::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

javax::sql::RowSet::operator local_ref<java::sql::ResultSet>() const
{
	return local_ref<java::sql::ResultSet>(get_jobject());
}

void javax::sql::RowSet::addRowSetListener(local_ref< javax::sql::RowSetListener > const &a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(0),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::clearParameters()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(1),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject());
}

void javax::sql::RowSet::execute()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(2),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject());
}

local_ref< java::lang::String > javax::sql::RowSet::getCommand()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(3),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > javax::sql::RowSet::getDataSourceName()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(4),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jboolean javax::sql::RowSet::getEscapeProcessing()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(5),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>(get_jobject());
}

jint javax::sql::RowSet::getMaxFieldSize()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(6),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(6), 
		jint
	>(get_jobject());
}

jint javax::sql::RowSet::getMaxRows()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(7),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(7), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > javax::sql::RowSet::getPassword()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(8),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint javax::sql::RowSet::getQueryTimeout()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(9),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(9), 
		jint
	>(get_jobject());
}

jint javax::sql::RowSet::getTransactionIsolation()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(10),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(10), 
		jint
	>(get_jobject());
}

local_ref< java::util::Map > javax::sql::RowSet::getTypeMap()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(11),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::util::Map >
	>(get_jobject());
}

local_ref< java::lang::String > javax::sql::RowSet::getUrl()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(12),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > javax::sql::RowSet::getUsername()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(13),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(13), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jboolean javax::sql::RowSet::isReadOnly()
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(14),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(14), 
		jboolean
	>(get_jobject());
}

void javax::sql::RowSet::removeRowSetListener(local_ref< javax::sql::RowSetListener > const &a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(15),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(15), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setArray(jint a0, local_ref< java::sql::Array > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(16),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(16), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setAsciiStream(jint a0, local_ref< java::io::InputStream > const &a1, jint a2)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(17),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(17), 
		void
	>(get_jobject(), a0, a1, a2);
}

void javax::sql::RowSet::setBigDecimal(jint a0, local_ref< java::math::BigDecimal > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(18),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(18), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setBinaryStream(jint a0, local_ref< java::io::InputStream > const &a1, jint a2)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(19),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(19), 
		void
	>(get_jobject(), a0, a1, a2);
}

void javax::sql::RowSet::setBlob(jint a0, local_ref< java::sql::Blob > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(20),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(20), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setBoolean(jint a0, jboolean a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(21),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(21), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setByte(jint a0, jbyte a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(22),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(22), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setBytes(jint a0, local_ref< array<jbyte,1> > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(23),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(23), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setCharacterStream(jint a0, local_ref< java::io::Reader > const &a1, jint a2)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(24),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(24), 
		void
	>(get_jobject(), a0, a1, a2);
}

void javax::sql::RowSet::setClob(jint a0, local_ref< java::sql::Clob > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(25),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(25), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setCommand(local_ref< java::lang::String > const &a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(26),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(26), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setConcurrency(jint a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(27),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(27), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setDataSourceName(local_ref< java::lang::String > const &a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(28),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(28), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setDate(jint a0, local_ref< java::sql::Date > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(29),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(29), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setDate(jint a0, local_ref< java::sql::Date > const &a1, local_ref< java::util::Calendar > const &a2)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(30),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(30), 
		void
	>(get_jobject(), a0, a1, a2);
}

void javax::sql::RowSet::setDouble(jint a0, jdouble a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(31),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(31), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setEscapeProcessing(jboolean a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(32),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(32), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setFloat(jint a0, jfloat a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(33),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(33), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setInt(jint a0, jint a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(34),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(34), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setLong(jint a0, jlong a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(35),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(35), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setMaxFieldSize(jint a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(36),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(36), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setMaxRows(jint a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(37),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(37), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setNull(jint a0, jint a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(38),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(38), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setNull(jint a0, jint a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(39),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(39), 
		void
	>(get_jobject(), a0, a1, a2);
}

void javax::sql::RowSet::setObject(jint a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(40),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(40), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setObject(jint a0, local_ref< java::lang::Object > const &a1, jint a2)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(41),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(41), 
		void
	>(get_jobject(), a0, a1, a2);
}

void javax::sql::RowSet::setObject(jint a0, local_ref< java::lang::Object > const &a1, jint a2, jint a3)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(42),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(42), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

void javax::sql::RowSet::setPassword(local_ref< java::lang::String > const &a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(43),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(43), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setQueryTimeout(jint a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(44),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(44), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setReadOnly(jboolean a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(45),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(45), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setRef(jint a0, local_ref< java::sql::Ref > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(46),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(46), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setShort(jint a0, jshort a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(47),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(47), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setString(jint a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(48),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(48), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setTime(jint a0, local_ref< java::sql::Time > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(49),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(49), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setTime(jint a0, local_ref< java::sql::Time > const &a1, local_ref< java::util::Calendar > const &a2)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(50),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(50), 
		void
	>(get_jobject(), a0, a1, a2);
}

void javax::sql::RowSet::setTimestamp(jint a0, local_ref< java::sql::Timestamp > const &a1)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(51),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(51), 
		void
	>(get_jobject(), a0, a1);
}

void javax::sql::RowSet::setTimestamp(jint a0, local_ref< java::sql::Timestamp > const &a1, local_ref< java::util::Calendar > const &a2)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(52),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(52), 
		void
	>(get_jobject(), a0, a1, a2);
}

void javax::sql::RowSet::setTransactionIsolation(jint a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(53),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(53), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setType(jint a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(54),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(54), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setTypeMap(local_ref< java::util::Map > const &a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(55),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(55), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setUrl(local_ref< java::lang::String > const &a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(56),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(56), 
		void
	>(get_jobject(), a0);
}

void javax::sql::RowSet::setUsername(local_ref< java::lang::String > const &a0)
{
	return call_method<
		javax::sql::RowSet::J2CPP_CLASS_NAME,
		javax::sql::RowSet::J2CPP_METHOD_NAME(57),
		javax::sql::RowSet::J2CPP_METHOD_SIGNATURE(57), 
		void
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(javax::sql::RowSet,"javax/sql/RowSet")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,0,"addRowSetListener","(Ljavax/sql/RowSetListener;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,1,"clearParameters","()V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,2,"execute","()V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,3,"getCommand","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,4,"getDataSourceName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,5,"getEscapeProcessing","()Z")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,6,"getMaxFieldSize","()I")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,7,"getMaxRows","()I")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,8,"getPassword","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,9,"getQueryTimeout","()I")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,10,"getTransactionIsolation","()I")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,11,"getTypeMap","()Ljava/util/Map;")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,12,"getUrl","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,13,"getUsername","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,14,"isReadOnly","()Z")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,15,"removeRowSetListener","(Ljavax/sql/RowSetListener;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,16,"setArray","(ILjava/sql/Array;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,17,"setAsciiStream","(ILjava/io/InputStream;I)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,18,"setBigDecimal","(ILjava/math/BigDecimal;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,19,"setBinaryStream","(ILjava/io/InputStream;I)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,20,"setBlob","(ILjava/sql/Blob;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,21,"setBoolean","(IZ)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,22,"setByte","(IB)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,23,"setBytes","(I[B)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,24,"setCharacterStream","(ILjava/io/Reader;I)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,25,"setClob","(ILjava/sql/Clob;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,26,"setCommand","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,27,"setConcurrency","(I)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,28,"setDataSourceName","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,29,"setDate","(ILjava/sql/Date;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,30,"setDate","(ILjava/sql/Date;Ljava/util/Calendar;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,31,"setDouble","(ID)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,32,"setEscapeProcessing","(Z)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,33,"setFloat","(IF)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,34,"setInt","(II)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,35,"setLong","(IJ)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,36,"setMaxFieldSize","(I)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,37,"setMaxRows","(I)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,38,"setNull","(II)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,39,"setNull","(IILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,40,"setObject","(ILjava/lang/Object;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,41,"setObject","(ILjava/lang/Object;I)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,42,"setObject","(ILjava/lang/Object;II)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,43,"setPassword","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,44,"setQueryTimeout","(I)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,45,"setReadOnly","(Z)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,46,"setRef","(ILjava/sql/Ref;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,47,"setShort","(IS)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,48,"setString","(ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,49,"setTime","(ILjava/sql/Time;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,50,"setTime","(ILjava/sql/Time;Ljava/util/Calendar;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,51,"setTimestamp","(ILjava/sql/Timestamp;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,52,"setTimestamp","(ILjava/sql/Timestamp;Ljava/util/Calendar;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,53,"setTransactionIsolation","(I)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,54,"setType","(I)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,55,"setTypeMap","(Ljava/util/Map;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,56,"setUrl","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::sql::RowSet,57,"setUsername","(Ljava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_JAVAX_SQL_ROWSET_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
