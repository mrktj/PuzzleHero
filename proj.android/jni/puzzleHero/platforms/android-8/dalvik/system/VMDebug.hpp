/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: dalvik.system.VMDebug
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_DALVIK_SYSTEM_VMDEBUG_HPP_DECL
#define J2CPP_DALVIK_SYSTEM_VMDEBUG_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace dalvik { namespace system {

	class VMDebug;
	class VMDebug
		: public object<VMDebug>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)
		J2CPP_DECLARE_FIELD(8)
		J2CPP_DECLARE_FIELD(9)
		J2CPP_DECLARE_FIELD(10)
		J2CPP_DECLARE_FIELD(11)
		J2CPP_DECLARE_FIELD(12)
		J2CPP_DECLARE_FIELD(13)
		J2CPP_DECLARE_FIELD(14)
		J2CPP_DECLARE_FIELD(15)
		J2CPP_DECLARE_FIELD(16)
		J2CPP_DECLARE_FIELD(17)
		J2CPP_DECLARE_FIELD(18)
		J2CPP_DECLARE_FIELD(19)
		J2CPP_DECLARE_FIELD(20)
		J2CPP_DECLARE_FIELD(21)
		J2CPP_DECLARE_FIELD(22)
		J2CPP_DECLARE_FIELD(23)
		J2CPP_DECLARE_FIELD(24)

		explicit VMDebug(jobject jobj)
		: object<VMDebug>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static jlong lastDebuggerActivity();
		static jboolean isDebuggingEnabled();
		static jboolean isDebuggerConnected();
		static void startMethodTracing();
		static void startMethodTracing(local_ref< java::lang::String >  const&, jint, jint);
		static void stopMethodTracing();
		static void startEmulatorTracing();
		static void stopEmulatorTracing();
		static jlong threadCpuTimeNanos();
		static void startAllocCounting();
		static void stopAllocCounting();
		static jint getAllocCount(jint);
		static void resetAllocCount(jint);
		static jint setAllocationLimit(jint);
		static jint setGlobalAllocationLimit(jint);
		static void startInstructionCounting();
		static void stopInstructionCounting();
		static void getInstructionCount(local_ref< array<jint,1> >  const&);
		static void resetInstructionCount();
		static void printLoadedClasses(jint);
		static jint getLoadedClassCount();
		static void dumpHprofData(local_ref< java::lang::String >  const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::lang::String > > DEFAULT_METHOD_TRACE_FILE_NAME;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > TRACE_COUNT_ALLOCS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > KIND_GLOBAL_ALLOCATED_OBJECTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > KIND_GLOBAL_ALLOCATED_BYTES;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > KIND_GLOBAL_FREED_OBJECTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jint > KIND_GLOBAL_FREED_BYTES;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), jint > KIND_GLOBAL_GC_INVOCATIONS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), jint > KIND_GLOBAL_CLASS_INIT_COUNT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), jint > KIND_GLOBAL_CLASS_INIT_TIME;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(9), J2CPP_FIELD_SIGNATURE(9), jint > KIND_GLOBAL_EXT_ALLOCATED_OBJECTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(10), J2CPP_FIELD_SIGNATURE(10), jint > KIND_GLOBAL_EXT_ALLOCATED_BYTES;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(11), J2CPP_FIELD_SIGNATURE(11), jint > KIND_GLOBAL_EXT_FREED_OBJECTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(12), J2CPP_FIELD_SIGNATURE(12), jint > KIND_GLOBAL_EXT_FREED_BYTES;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(13), J2CPP_FIELD_SIGNATURE(13), jint > KIND_THREAD_ALLOCATED_OBJECTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(14), J2CPP_FIELD_SIGNATURE(14), jint > KIND_THREAD_ALLOCATED_BYTES;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(15), J2CPP_FIELD_SIGNATURE(15), jint > KIND_THREAD_FREED_OBJECTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(16), J2CPP_FIELD_SIGNATURE(16), jint > KIND_THREAD_FREED_BYTES;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(17), J2CPP_FIELD_SIGNATURE(17), jint > KIND_THREAD_GC_INVOCATIONS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(18), J2CPP_FIELD_SIGNATURE(18), jint > KIND_THREAD_CLASS_INIT_COUNT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(19), J2CPP_FIELD_SIGNATURE(19), jint > KIND_THREAD_CLASS_INIT_TIME;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(20), J2CPP_FIELD_SIGNATURE(20), jint > KIND_THREAD_EXT_ALLOCATED_OBJECTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(21), J2CPP_FIELD_SIGNATURE(21), jint > KIND_THREAD_EXT_ALLOCATED_BYTES;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(22), J2CPP_FIELD_SIGNATURE(22), jint > KIND_THREAD_EXT_FREED_OBJECTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(23), J2CPP_FIELD_SIGNATURE(23), jint > KIND_THREAD_EXT_FREED_BYTES;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(24), J2CPP_FIELD_SIGNATURE(24), jint > KIND_ALL_COUNTS;
	}; //class VMDebug

} //namespace system
} //namespace dalvik

} //namespace j2cpp

#endif //J2CPP_DALVIK_SYSTEM_VMDEBUG_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_DALVIK_SYSTEM_VMDEBUG_HPP_IMPL
#define J2CPP_DALVIK_SYSTEM_VMDEBUG_HPP_IMPL

namespace j2cpp {



dalvik::system::VMDebug::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


jlong dalvik::system::VMDebug::lastDebuggerActivity()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(1),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(1), 
		jlong
	>();
}

jboolean dalvik::system::VMDebug::isDebuggingEnabled()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(2),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(2), 
		jboolean
	>();
}

jboolean dalvik::system::VMDebug::isDebuggerConnected()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(3),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(3), 
		jboolean
	>();
}

void dalvik::system::VMDebug::startMethodTracing()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(4),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(4), 
		void
	>();
}

void dalvik::system::VMDebug::startMethodTracing(local_ref< java::lang::String > const &a0, jint a1, jint a2)
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(5),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(a0, a1, a2);
}

void dalvik::system::VMDebug::stopMethodTracing()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(6),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(6), 
		void
	>();
}

void dalvik::system::VMDebug::startEmulatorTracing()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(7),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(7), 
		void
	>();
}

void dalvik::system::VMDebug::stopEmulatorTracing()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(8),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(8), 
		void
	>();
}

jlong dalvik::system::VMDebug::threadCpuTimeNanos()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(9),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(9), 
		jlong
	>();
}

void dalvik::system::VMDebug::startAllocCounting()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(10),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(10), 
		void
	>();
}

void dalvik::system::VMDebug::stopAllocCounting()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(11),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(11), 
		void
	>();
}

jint dalvik::system::VMDebug::getAllocCount(jint a0)
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(12),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(12), 
		jint
	>(a0);
}

void dalvik::system::VMDebug::resetAllocCount(jint a0)
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(13),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(13), 
		void
	>(a0);
}

jint dalvik::system::VMDebug::setAllocationLimit(jint a0)
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(14),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(14), 
		jint
	>(a0);
}

jint dalvik::system::VMDebug::setGlobalAllocationLimit(jint a0)
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(15),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(15), 
		jint
	>(a0);
}

void dalvik::system::VMDebug::startInstructionCounting()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(16),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(16), 
		void
	>();
}

void dalvik::system::VMDebug::stopInstructionCounting()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(17),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(17), 
		void
	>();
}

void dalvik::system::VMDebug::getInstructionCount(local_ref< array<jint,1> > const &a0)
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(18),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(18), 
		void
	>(a0);
}

void dalvik::system::VMDebug::resetInstructionCount()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(19),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(19), 
		void
	>();
}

void dalvik::system::VMDebug::printLoadedClasses(jint a0)
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(20),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(20), 
		void
	>(a0);
}

jint dalvik::system::VMDebug::getLoadedClassCount()
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(21),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(21), 
		jint
	>();
}

void dalvik::system::VMDebug::dumpHprofData(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		dalvik::system::VMDebug::J2CPP_CLASS_NAME,
		dalvik::system::VMDebug::J2CPP_METHOD_NAME(22),
		dalvik::system::VMDebug::J2CPP_METHOD_SIGNATURE(22), 
		void
	>(a0);
}


static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(0),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::lang::String >
> dalvik::system::VMDebug::DEFAULT_METHOD_TRACE_FILE_NAME;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(1),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(1),
	jint
> dalvik::system::VMDebug::TRACE_COUNT_ALLOCS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(2),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(2),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_ALLOCATED_OBJECTS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(3),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(3),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_ALLOCATED_BYTES;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(4),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(4),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_FREED_OBJECTS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(5),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(5),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_FREED_BYTES;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(6),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(6),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_GC_INVOCATIONS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(7),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(7),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_CLASS_INIT_COUNT;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(8),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(8),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_CLASS_INIT_TIME;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(9),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(9),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_EXT_ALLOCATED_OBJECTS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(10),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(10),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_EXT_ALLOCATED_BYTES;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(11),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(11),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_EXT_FREED_OBJECTS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(12),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(12),
	jint
> dalvik::system::VMDebug::KIND_GLOBAL_EXT_FREED_BYTES;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(13),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(13),
	jint
> dalvik::system::VMDebug::KIND_THREAD_ALLOCATED_OBJECTS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(14),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(14),
	jint
> dalvik::system::VMDebug::KIND_THREAD_ALLOCATED_BYTES;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(15),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(15),
	jint
> dalvik::system::VMDebug::KIND_THREAD_FREED_OBJECTS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(16),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(16),
	jint
> dalvik::system::VMDebug::KIND_THREAD_FREED_BYTES;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(17),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(17),
	jint
> dalvik::system::VMDebug::KIND_THREAD_GC_INVOCATIONS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(18),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(18),
	jint
> dalvik::system::VMDebug::KIND_THREAD_CLASS_INIT_COUNT;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(19),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(19),
	jint
> dalvik::system::VMDebug::KIND_THREAD_CLASS_INIT_TIME;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(20),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(20),
	jint
> dalvik::system::VMDebug::KIND_THREAD_EXT_ALLOCATED_OBJECTS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(21),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(21),
	jint
> dalvik::system::VMDebug::KIND_THREAD_EXT_ALLOCATED_BYTES;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(22),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(22),
	jint
> dalvik::system::VMDebug::KIND_THREAD_EXT_FREED_OBJECTS;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(23),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(23),
	jint
> dalvik::system::VMDebug::KIND_THREAD_EXT_FREED_BYTES;

static_field<
	dalvik::system::VMDebug::J2CPP_CLASS_NAME,
	dalvik::system::VMDebug::J2CPP_FIELD_NAME(24),
	dalvik::system::VMDebug::J2CPP_FIELD_SIGNATURE(24),
	jint
> dalvik::system::VMDebug::KIND_ALL_COUNTS;


J2CPP_DEFINE_CLASS(dalvik::system::VMDebug,"dalvik/system/VMDebug")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,0,"<init>","()V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,1,"lastDebuggerActivity","()J")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,2,"isDebuggingEnabled","()Z")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,3,"isDebuggerConnected","()Z")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,4,"startMethodTracing","()V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,5,"startMethodTracing","(Ljava/lang/String;II)V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,6,"stopMethodTracing","()V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,7,"startEmulatorTracing","()V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,8,"stopEmulatorTracing","()V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,9,"threadCpuTimeNanos","()J")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,10,"startAllocCounting","()V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,11,"stopAllocCounting","()V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,12,"getAllocCount","(I)I")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,13,"resetAllocCount","(I)V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,14,"setAllocationLimit","(I)I")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,15,"setGlobalAllocationLimit","(I)I")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,16,"startInstructionCounting","()V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,17,"stopInstructionCounting","()V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,18,"getInstructionCount","([I)V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,19,"resetInstructionCount","()V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,20,"printLoadedClasses","(I)V")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,21,"getLoadedClassCount","()I")
J2CPP_DEFINE_METHOD(dalvik::system::VMDebug,22,"dumpHprofData","(Ljava/lang/String;)V")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,0,"DEFAULT_METHOD_TRACE_FILE_NAME","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,1,"TRACE_COUNT_ALLOCS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,2,"KIND_GLOBAL_ALLOCATED_OBJECTS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,3,"KIND_GLOBAL_ALLOCATED_BYTES","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,4,"KIND_GLOBAL_FREED_OBJECTS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,5,"KIND_GLOBAL_FREED_BYTES","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,6,"KIND_GLOBAL_GC_INVOCATIONS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,7,"KIND_GLOBAL_CLASS_INIT_COUNT","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,8,"KIND_GLOBAL_CLASS_INIT_TIME","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,9,"KIND_GLOBAL_EXT_ALLOCATED_OBJECTS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,10,"KIND_GLOBAL_EXT_ALLOCATED_BYTES","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,11,"KIND_GLOBAL_EXT_FREED_OBJECTS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,12,"KIND_GLOBAL_EXT_FREED_BYTES","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,13,"KIND_THREAD_ALLOCATED_OBJECTS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,14,"KIND_THREAD_ALLOCATED_BYTES","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,15,"KIND_THREAD_FREED_OBJECTS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,16,"KIND_THREAD_FREED_BYTES","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,17,"KIND_THREAD_GC_INVOCATIONS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,18,"KIND_THREAD_CLASS_INIT_COUNT","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,19,"KIND_THREAD_CLASS_INIT_TIME","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,20,"KIND_THREAD_EXT_ALLOCATED_OBJECTS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,21,"KIND_THREAD_EXT_ALLOCATED_BYTES","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,22,"KIND_THREAD_EXT_FREED_OBJECTS","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,23,"KIND_THREAD_EXT_FREED_BYTES","I")
J2CPP_DEFINE_FIELD(dalvik::system::VMDebug,24,"KIND_ALL_COUNTS","I")

} //namespace j2cpp

#endif //J2CPP_DALVIK_SYSTEM_VMDEBUG_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
