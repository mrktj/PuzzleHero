/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.net.ssl.X509KeyManager
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_X509KEYMANAGER_HPP_DECL
#define J2CPP_JAVAX_NET_SSL_X509KEYMANAGER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace javax { namespace net { namespace ssl { class KeyManager; } } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { namespace cert { class X509Certificate; } } } }
namespace j2cpp { namespace java { namespace security { class Principal; } } }
namespace j2cpp { namespace java { namespace security { class PrivateKey; } } }
namespace j2cpp { namespace java { namespace net { class Socket; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/net/Socket.hpp>
#include <java/security/Principal.hpp>
#include <java/security/PrivateKey.hpp>
#include <java/security/cert/X509Certificate.hpp>
#include <javax/net/ssl/KeyManager.hpp>


namespace j2cpp {

namespace javax { namespace net { namespace ssl {

	class X509KeyManager;
	class X509KeyManager
		: public object<X509KeyManager>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		explicit X509KeyManager(jobject jobj)
		: object<X509KeyManager>(jobj)
		{
		}

		operator local_ref<javax::net::ssl::KeyManager>() const;
		operator local_ref<java::lang::Object>() const;


		local_ref< java::lang::String > chooseClientAlias(local_ref< array< local_ref< java::lang::String >, 1> >  const&, local_ref< array< local_ref< java::security::Principal >, 1> >  const&, local_ref< java::net::Socket >  const&);
		local_ref< java::lang::String > chooseServerAlias(local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::security::Principal >, 1> >  const&, local_ref< java::net::Socket >  const&);
		local_ref< array< local_ref< java::security::cert::X509Certificate >, 1> > getCertificateChain(local_ref< java::lang::String >  const&);
		local_ref< array< local_ref< java::lang::String >, 1> > getClientAliases(local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::security::Principal >, 1> >  const&);
		local_ref< array< local_ref< java::lang::String >, 1> > getServerAliases(local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::security::Principal >, 1> >  const&);
		local_ref< java::security::PrivateKey > getPrivateKey(local_ref< java::lang::String >  const&);
	}; //class X509KeyManager

} //namespace ssl
} //namespace net
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_X509KEYMANAGER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_X509KEYMANAGER_HPP_IMPL
#define J2CPP_JAVAX_NET_SSL_X509KEYMANAGER_HPP_IMPL

namespace j2cpp {



javax::net::ssl::X509KeyManager::operator local_ref<javax::net::ssl::KeyManager>() const
{
	return local_ref<javax::net::ssl::KeyManager>(get_jobject());
}

javax::net::ssl::X509KeyManager::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

local_ref< java::lang::String > javax::net::ssl::X509KeyManager::chooseClientAlias(local_ref< array< local_ref< java::lang::String >, 1> > const &a0, local_ref< array< local_ref< java::security::Principal >, 1> > const &a1, local_ref< java::net::Socket > const &a2)
{
	return call_method<
		javax::net::ssl::X509KeyManager::J2CPP_CLASS_NAME,
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_NAME(0),
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< java::lang::String >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::lang::String > javax::net::ssl::X509KeyManager::chooseServerAlias(local_ref< java::lang::String > const &a0, local_ref< array< local_ref< java::security::Principal >, 1> > const &a1, local_ref< java::net::Socket > const &a2)
{
	return call_method<
		javax::net::ssl::X509KeyManager::J2CPP_CLASS_NAME,
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_NAME(1),
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(get_jobject(), a0, a1, a2);
}

local_ref< array< local_ref< java::security::cert::X509Certificate >, 1> > javax::net::ssl::X509KeyManager::getCertificateChain(local_ref< java::lang::String > const &a0)
{
	return call_method<
		javax::net::ssl::X509KeyManager::J2CPP_CLASS_NAME,
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_NAME(2),
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< array< local_ref< java::security::cert::X509Certificate >, 1> >
	>(get_jobject(), a0);
}

local_ref< array< local_ref< java::lang::String >, 1> > javax::net::ssl::X509KeyManager::getClientAliases(local_ref< java::lang::String > const &a0, local_ref< array< local_ref< java::security::Principal >, 1> > const &a1)
{
	return call_method<
		javax::net::ssl::X509KeyManager::J2CPP_CLASS_NAME,
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_NAME(3),
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject(), a0, a1);
}

local_ref< array< local_ref< java::lang::String >, 1> > javax::net::ssl::X509KeyManager::getServerAliases(local_ref< java::lang::String > const &a0, local_ref< array< local_ref< java::security::Principal >, 1> > const &a1)
{
	return call_method<
		javax::net::ssl::X509KeyManager::J2CPP_CLASS_NAME,
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_NAME(4),
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject(), a0, a1);
}

local_ref< java::security::PrivateKey > javax::net::ssl::X509KeyManager::getPrivateKey(local_ref< java::lang::String > const &a0)
{
	return call_method<
		javax::net::ssl::X509KeyManager::J2CPP_CLASS_NAME,
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_NAME(5),
		javax::net::ssl::X509KeyManager::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::security::PrivateKey >
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(javax::net::ssl::X509KeyManager,"javax/net/ssl/X509KeyManager")
J2CPP_DEFINE_METHOD(javax::net::ssl::X509KeyManager,0,"chooseClientAlias","([java.lang.String[java.security.PrincipalLjava/net/Socket;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::net::ssl::X509KeyManager,1,"chooseServerAlias","(Ljava/lang/String;[java.security.PrincipalLjava/net/Socket;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::net::ssl::X509KeyManager,2,"getCertificateChain","(Ljava/lang/String;)[java.security.cert.X509Certificate")
J2CPP_DEFINE_METHOD(javax::net::ssl::X509KeyManager,3,"getClientAliases","(Ljava/lang/String;[java.security.Principal)[java.lang.String")
J2CPP_DEFINE_METHOD(javax::net::ssl::X509KeyManager,4,"getServerAliases","(Ljava/lang/String;[java.security.Principal)[java.lang.String")
J2CPP_DEFINE_METHOD(javax::net::ssl::X509KeyManager,5,"getPrivateKey","(Ljava/lang/String;)Ljava/security/PrivateKey;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_X509KEYMANAGER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
