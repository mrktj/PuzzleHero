/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.net.ssl.CertPathTrustManagerParameters
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_DECL
#define J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_DECL


namespace j2cpp { namespace javax { namespace net { namespace ssl { class ManagerFactoryParameters; } } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { namespace cert { class CertPathParameters; } } } }


#include <java/lang/Object.hpp>
#include <java/security/cert/CertPathParameters.hpp>
#include <javax/net/ssl/ManagerFactoryParameters.hpp>


namespace j2cpp {

namespace javax { namespace net { namespace ssl {

	class CertPathTrustManagerParameters;
	class CertPathTrustManagerParameters
		: public object<CertPathTrustManagerParameters>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit CertPathTrustManagerParameters(jobject jobj)
		: object<CertPathTrustManagerParameters>(jobj)
		{
		}

		operator local_ref<javax::net::ssl::ManagerFactoryParameters>() const;
		operator local_ref<java::lang::Object>() const;


		CertPathTrustManagerParameters(local_ref< java::security::cert::CertPathParameters > const&);
		local_ref< java::security::cert::CertPathParameters > getParameters();
	}; //class CertPathTrustManagerParameters

} //namespace ssl
} //namespace net
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_IMPL
#define J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_IMPL

namespace j2cpp {



javax::net::ssl::CertPathTrustManagerParameters::operator local_ref<javax::net::ssl::ManagerFactoryParameters>() const
{
	return local_ref<javax::net::ssl::ManagerFactoryParameters>(get_jobject());
}

javax::net::ssl::CertPathTrustManagerParameters::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


javax::net::ssl::CertPathTrustManagerParameters::CertPathTrustManagerParameters(local_ref< java::security::cert::CertPathParameters > const &a0)
: object<javax::net::ssl::CertPathTrustManagerParameters>(
	call_new_object<
		javax::net::ssl::CertPathTrustManagerParameters::J2CPP_CLASS_NAME,
		javax::net::ssl::CertPathTrustManagerParameters::J2CPP_METHOD_NAME(0),
		javax::net::ssl::CertPathTrustManagerParameters::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


local_ref< java::security::cert::CertPathParameters > javax::net::ssl::CertPathTrustManagerParameters::getParameters()
{
	return call_method<
		javax::net::ssl::CertPathTrustManagerParameters::J2CPP_CLASS_NAME,
		javax::net::ssl::CertPathTrustManagerParameters::J2CPP_METHOD_NAME(1),
		javax::net::ssl::CertPathTrustManagerParameters::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::security::cert::CertPathParameters >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(javax::net::ssl::CertPathTrustManagerParameters,"javax/net/ssl/CertPathTrustManagerParameters")
J2CPP_DEFINE_METHOD(javax::net::ssl::CertPathTrustManagerParameters,0,"<init>","(Ljava/security/cert/CertPathParameters;)V")
J2CPP_DEFINE_METHOD(javax::net::ssl::CertPathTrustManagerParameters,1,"getParameters","()Ljava/security/cert/CertPathParameters;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
