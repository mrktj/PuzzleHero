/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.net.ssl.HandshakeCompletedListener
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_HANDSHAKECOMPLETEDLISTENER_HPP_DECL
#define J2CPP_JAVAX_NET_SSL_HANDSHAKECOMPLETEDLISTENER_HPP_DECL


namespace j2cpp { namespace javax { namespace net { namespace ssl { class HandshakeCompletedEvent; } } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class EventListener; } } }


#include <java/lang/Object.hpp>
#include <java/util/EventListener.hpp>
#include <javax/net/ssl/HandshakeCompletedEvent.hpp>


namespace j2cpp {

namespace javax { namespace net { namespace ssl {

	class HandshakeCompletedListener;
	class HandshakeCompletedListener
		: public object<HandshakeCompletedListener>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		explicit HandshakeCompletedListener(jobject jobj)
		: object<HandshakeCompletedListener>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::util::EventListener>() const;


		void handshakeCompleted(local_ref< javax::net::ssl::HandshakeCompletedEvent >  const&);
	}; //class HandshakeCompletedListener

} //namespace ssl
} //namespace net
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_HANDSHAKECOMPLETEDLISTENER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_HANDSHAKECOMPLETEDLISTENER_HPP_IMPL
#define J2CPP_JAVAX_NET_SSL_HANDSHAKECOMPLETEDLISTENER_HPP_IMPL

namespace j2cpp {



javax::net::ssl::HandshakeCompletedListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

javax::net::ssl::HandshakeCompletedListener::operator local_ref<java::util::EventListener>() const
{
	return local_ref<java::util::EventListener>(get_jobject());
}

void javax::net::ssl::HandshakeCompletedListener::handshakeCompleted(local_ref< javax::net::ssl::HandshakeCompletedEvent > const &a0)
{
	return call_method<
		javax::net::ssl::HandshakeCompletedListener::J2CPP_CLASS_NAME,
		javax::net::ssl::HandshakeCompletedListener::J2CPP_METHOD_NAME(0),
		javax::net::ssl::HandshakeCompletedListener::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(javax::net::ssl::HandshakeCompletedListener,"javax/net/ssl/HandshakeCompletedListener")
J2CPP_DEFINE_METHOD(javax::net::ssl::HandshakeCompletedListener,0,"handshakeCompleted","(Ljavax/net/ssl/HandshakeCompletedEvent;)V")

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_HANDSHAKECOMPLETEDLISTENER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
