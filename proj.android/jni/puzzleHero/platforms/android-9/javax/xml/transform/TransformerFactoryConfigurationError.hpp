/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.xml.transform.TransformerFactoryConfigurationError
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_TRANSFORM_TRANSFORMERFACTORYCONFIGURATIONERROR_HPP_DECL
#define J2CPP_JAVAX_XML_TRANSFORM_TRANSFORMERFACTORYCONFIGURATIONERROR_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Exception; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Throwable; } } }
namespace j2cpp { namespace java { namespace lang { class Error; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Error.hpp>
#include <java/lang/Exception.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/lang/Throwable.hpp>


namespace j2cpp {

namespace javax { namespace xml { namespace transform {

	class TransformerFactoryConfigurationError;
	class TransformerFactoryConfigurationError
		: public object<TransformerFactoryConfigurationError>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		explicit TransformerFactoryConfigurationError(jobject jobj)
		: object<TransformerFactoryConfigurationError>(jobj)
		{
		}

		operator local_ref<java::lang::Throwable>() const;
		operator local_ref<java::lang::Error>() const;
		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::io::Serializable>() const;


		TransformerFactoryConfigurationError();
		TransformerFactoryConfigurationError(local_ref< java::lang::String > const&);
		TransformerFactoryConfigurationError(local_ref< java::lang::Exception > const&);
		TransformerFactoryConfigurationError(local_ref< java::lang::Exception > const&, local_ref< java::lang::String > const&);
		local_ref< java::lang::String > getMessage();
		local_ref< java::lang::Exception > getException();
	}; //class TransformerFactoryConfigurationError

} //namespace transform
} //namespace xml
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_TRANSFORM_TRANSFORMERFACTORYCONFIGURATIONERROR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_TRANSFORM_TRANSFORMERFACTORYCONFIGURATIONERROR_HPP_IMPL
#define J2CPP_JAVAX_XML_TRANSFORM_TRANSFORMERFACTORYCONFIGURATIONERROR_HPP_IMPL

namespace j2cpp {



javax::xml::transform::TransformerFactoryConfigurationError::operator local_ref<java::lang::Throwable>() const
{
	return local_ref<java::lang::Throwable>(get_jobject());
}

javax::xml::transform::TransformerFactoryConfigurationError::operator local_ref<java::lang::Error>() const
{
	return local_ref<java::lang::Error>(get_jobject());
}

javax::xml::transform::TransformerFactoryConfigurationError::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

javax::xml::transform::TransformerFactoryConfigurationError::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


javax::xml::transform::TransformerFactoryConfigurationError::TransformerFactoryConfigurationError()
: object<javax::xml::transform::TransformerFactoryConfigurationError>(
	call_new_object<
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_CLASS_NAME,
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_NAME(0),
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



javax::xml::transform::TransformerFactoryConfigurationError::TransformerFactoryConfigurationError(local_ref< java::lang::String > const &a0)
: object<javax::xml::transform::TransformerFactoryConfigurationError>(
	call_new_object<
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_CLASS_NAME,
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_NAME(1),
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



javax::xml::transform::TransformerFactoryConfigurationError::TransformerFactoryConfigurationError(local_ref< java::lang::Exception > const &a0)
: object<javax::xml::transform::TransformerFactoryConfigurationError>(
	call_new_object<
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_CLASS_NAME,
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_NAME(2),
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_SIGNATURE(2)
	>(a0)
)
{
}



javax::xml::transform::TransformerFactoryConfigurationError::TransformerFactoryConfigurationError(local_ref< java::lang::Exception > const &a0, local_ref< java::lang::String > const &a1)
: object<javax::xml::transform::TransformerFactoryConfigurationError>(
	call_new_object<
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_CLASS_NAME,
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_NAME(3),
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_SIGNATURE(3)
	>(a0, a1)
)
{
}


local_ref< java::lang::String > javax::xml::transform::TransformerFactoryConfigurationError::getMessage()
{
	return call_method<
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_CLASS_NAME,
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_NAME(4),
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::Exception > javax::xml::transform::TransformerFactoryConfigurationError::getException()
{
	return call_method<
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_CLASS_NAME,
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_NAME(5),
		javax::xml::transform::TransformerFactoryConfigurationError::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::lang::Exception >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(javax::xml::transform::TransformerFactoryConfigurationError,"javax/xml/transform/TransformerFactoryConfigurationError")
J2CPP_DEFINE_METHOD(javax::xml::transform::TransformerFactoryConfigurationError,0,"<init>","()V")
J2CPP_DEFINE_METHOD(javax::xml::transform::TransformerFactoryConfigurationError,1,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::xml::transform::TransformerFactoryConfigurationError,2,"<init>","(Ljava/lang/Exception;)V")
J2CPP_DEFINE_METHOD(javax::xml::transform::TransformerFactoryConfigurationError,3,"<init>","(Ljava/lang/Exception;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::xml::transform::TransformerFactoryConfigurationError,4,"getMessage","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::xml::transform::TransformerFactoryConfigurationError,5,"getException","()Ljava/lang/Exception;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_TRANSFORM_TRANSFORMERFACTORYCONFIGURATIONERROR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
