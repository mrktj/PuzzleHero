/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.sql.StatementEvent
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_SQL_STATEMENTEVENT_HPP_DECL
#define J2CPP_JAVAX_SQL_STATEMENTEVENT_HPP_DECL


namespace j2cpp { namespace javax { namespace sql { class PooledConnection; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class EventObject; } } }
namespace j2cpp { namespace java { namespace sql { class PreparedStatement; } } }
namespace j2cpp { namespace java { namespace sql { class SQLException; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Object.hpp>
#include <java/sql/PreparedStatement.hpp>
#include <java/sql/SQLException.hpp>
#include <java/util/EventObject.hpp>
#include <javax/sql/PooledConnection.hpp>


namespace j2cpp {

namespace javax { namespace sql {

	class StatementEvent;
	class StatementEvent
		: public object<StatementEvent>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		explicit StatementEvent(jobject jobj)
		: object<StatementEvent>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::util::EventObject>() const;
		operator local_ref<java::io::Serializable>() const;


		StatementEvent(local_ref< javax::sql::PooledConnection > const&, local_ref< java::sql::PreparedStatement > const&, local_ref< java::sql::SQLException > const&);
		StatementEvent(local_ref< javax::sql::PooledConnection > const&, local_ref< java::sql::PreparedStatement > const&);
		local_ref< java::sql::PreparedStatement > getStatement();
		local_ref< java::sql::SQLException > getSQLException();
	}; //class StatementEvent

} //namespace sql
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_SQL_STATEMENTEVENT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_SQL_STATEMENTEVENT_HPP_IMPL
#define J2CPP_JAVAX_SQL_STATEMENTEVENT_HPP_IMPL

namespace j2cpp {



javax::sql::StatementEvent::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

javax::sql::StatementEvent::operator local_ref<java::util::EventObject>() const
{
	return local_ref<java::util::EventObject>(get_jobject());
}

javax::sql::StatementEvent::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


javax::sql::StatementEvent::StatementEvent(local_ref< javax::sql::PooledConnection > const &a0, local_ref< java::sql::PreparedStatement > const &a1, local_ref< java::sql::SQLException > const &a2)
: object<javax::sql::StatementEvent>(
	call_new_object<
		javax::sql::StatementEvent::J2CPP_CLASS_NAME,
		javax::sql::StatementEvent::J2CPP_METHOD_NAME(0),
		javax::sql::StatementEvent::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1, a2)
)
{
}



javax::sql::StatementEvent::StatementEvent(local_ref< javax::sql::PooledConnection > const &a0, local_ref< java::sql::PreparedStatement > const &a1)
: object<javax::sql::StatementEvent>(
	call_new_object<
		javax::sql::StatementEvent::J2CPP_CLASS_NAME,
		javax::sql::StatementEvent::J2CPP_METHOD_NAME(1),
		javax::sql::StatementEvent::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1)
)
{
}


local_ref< java::sql::PreparedStatement > javax::sql::StatementEvent::getStatement()
{
	return call_method<
		javax::sql::StatementEvent::J2CPP_CLASS_NAME,
		javax::sql::StatementEvent::J2CPP_METHOD_NAME(2),
		javax::sql::StatementEvent::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::sql::PreparedStatement >
	>(get_jobject());
}

local_ref< java::sql::SQLException > javax::sql::StatementEvent::getSQLException()
{
	return call_method<
		javax::sql::StatementEvent::J2CPP_CLASS_NAME,
		javax::sql::StatementEvent::J2CPP_METHOD_NAME(3),
		javax::sql::StatementEvent::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::sql::SQLException >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(javax::sql::StatementEvent,"javax/sql/StatementEvent")
J2CPP_DEFINE_METHOD(javax::sql::StatementEvent,0,"<init>","(Ljavax/sql/PooledConnection;Ljava/sql/PreparedStatement;Ljava/sql/SQLException;)V")
J2CPP_DEFINE_METHOD(javax::sql::StatementEvent,1,"<init>","(Ljavax/sql/PooledConnection;Ljava/sql/PreparedStatement;)V")
J2CPP_DEFINE_METHOD(javax::sql::StatementEvent,2,"getStatement","()Ljava/sql/PreparedStatement;")
J2CPP_DEFINE_METHOD(javax::sql::StatementEvent,3,"getSQLException","()Ljava/sql/SQLException;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_SQL_STATEMENTEVENT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
