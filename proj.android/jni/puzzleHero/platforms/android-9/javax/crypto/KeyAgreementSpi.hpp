/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: javax.crypto.KeyAgreementSpi
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_KEYAGREEMENTSPI_HPP_DECL
#define J2CPP_JAVAX_CRYPTO_KEYAGREEMENTSPI_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace javax { namespace crypto {

	class KeyAgreementSpi;
	class KeyAgreementSpi
		: public object<KeyAgreementSpi>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		explicit KeyAgreementSpi(jobject jobj)
		: object<KeyAgreementSpi>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		KeyAgreementSpi();
	}; //class KeyAgreementSpi

} //namespace crypto
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_KEYAGREEMENTSPI_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_KEYAGREEMENTSPI_HPP_IMPL
#define J2CPP_JAVAX_CRYPTO_KEYAGREEMENTSPI_HPP_IMPL

namespace j2cpp {



javax::crypto::KeyAgreementSpi::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


javax::crypto::KeyAgreementSpi::KeyAgreementSpi()
: object<javax::crypto::KeyAgreementSpi>(
	call_new_object<
		javax::crypto::KeyAgreementSpi::J2CPP_CLASS_NAME,
		javax::crypto::KeyAgreementSpi::J2CPP_METHOD_NAME(0),
		javax::crypto::KeyAgreementSpi::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}









J2CPP_DEFINE_CLASS(javax::crypto::KeyAgreementSpi,"javax/crypto/KeyAgreementSpi")
J2CPP_DEFINE_METHOD(javax::crypto::KeyAgreementSpi,0,"<init>","()V")
J2CPP_DEFINE_METHOD(javax::crypto::KeyAgreementSpi,1,"engineDoPhase","(Ljava/security/Key;Z)Ljava/security/Key;")
J2CPP_DEFINE_METHOD(javax::crypto::KeyAgreementSpi,2,"engineGenerateSecret","()[B")
J2CPP_DEFINE_METHOD(javax::crypto::KeyAgreementSpi,3,"engineGenerateSecret","([BI)I")
J2CPP_DEFINE_METHOD(javax::crypto::KeyAgreementSpi,4,"engineGenerateSecret","(Ljava/lang/String;)Ljavax/crypto/SecretKey;")
J2CPP_DEFINE_METHOD(javax::crypto::KeyAgreementSpi,5,"engineInit","(Ljava/security/Key;Ljava/security/SecureRandom;)V")
J2CPP_DEFINE_METHOD(javax::crypto::KeyAgreementSpi,6,"engineInit","(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V")

} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_KEYAGREEMENTSPI_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
