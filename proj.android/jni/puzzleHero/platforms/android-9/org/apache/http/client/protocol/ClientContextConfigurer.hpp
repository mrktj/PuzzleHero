/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.client.protocol.ClientContextConfigurer
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CLIENT_PROTOCOL_CLIENTCONTEXTCONFIGURER_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_CLIENT_PROTOCOL_CLIENTCONTEXTCONFIGURER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class List; } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace protocol { class HttpContext; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace cookie { class CookieSpecRegistry; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace auth { class AuthSchemeRegistry; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace client { class CookieStore; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace client { namespace protocol { class ClientContext; } } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace client { class CredentialsProvider; } } } } }


#include <java/lang/Object.hpp>
#include <java/util/List.hpp>
#include <org/apache/http/auth/AuthSchemeRegistry.hpp>
#include <org/apache/http/client/CookieStore.hpp>
#include <org/apache/http/client/CredentialsProvider.hpp>
#include <org/apache/http/client/protocol/ClientContext.hpp>
#include <org/apache/http/cookie/CookieSpecRegistry.hpp>
#include <org/apache/http/protocol/HttpContext.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace client { namespace protocol {

	class ClientContextConfigurer;
	class ClientContextConfigurer
		: public object<ClientContextConfigurer>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		explicit ClientContextConfigurer(jobject jobj)
		: object<ClientContextConfigurer>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<org::apache::http::client::protocol::ClientContext>() const;


		ClientContextConfigurer(local_ref< org::apache::http::protocol::HttpContext > const&);
		void setCookieSpecRegistry(local_ref< org::apache::http::cookie::CookieSpecRegistry >  const&);
		void setAuthSchemeRegistry(local_ref< org::apache::http::auth::AuthSchemeRegistry >  const&);
		void setCookieStore(local_ref< org::apache::http::client::CookieStore >  const&);
		void setCredentialsProvider(local_ref< org::apache::http::client::CredentialsProvider >  const&);
		void setAuthSchemePref(local_ref< java::util::List >  const&);
	}; //class ClientContextConfigurer

} //namespace protocol
} //namespace client
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CLIENT_PROTOCOL_CLIENTCONTEXTCONFIGURER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CLIENT_PROTOCOL_CLIENTCONTEXTCONFIGURER_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_CLIENT_PROTOCOL_CLIENTCONTEXTCONFIGURER_HPP_IMPL

namespace j2cpp {



org::apache::http::client::protocol::ClientContextConfigurer::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

org::apache::http::client::protocol::ClientContextConfigurer::operator local_ref<org::apache::http::client::protocol::ClientContext>() const
{
	return local_ref<org::apache::http::client::protocol::ClientContext>(get_jobject());
}


org::apache::http::client::protocol::ClientContextConfigurer::ClientContextConfigurer(local_ref< org::apache::http::protocol::HttpContext > const &a0)
: object<org::apache::http::client::protocol::ClientContextConfigurer>(
	call_new_object<
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_CLASS_NAME,
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_NAME(0),
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


void org::apache::http::client::protocol::ClientContextConfigurer::setCookieSpecRegistry(local_ref< org::apache::http::cookie::CookieSpecRegistry > const &a0)
{
	return call_method<
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_CLASS_NAME,
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_NAME(1),
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0);
}

void org::apache::http::client::protocol::ClientContextConfigurer::setAuthSchemeRegistry(local_ref< org::apache::http::auth::AuthSchemeRegistry > const &a0)
{
	return call_method<
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_CLASS_NAME,
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_NAME(2),
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject(), a0);
}

void org::apache::http::client::protocol::ClientContextConfigurer::setCookieStore(local_ref< org::apache::http::client::CookieStore > const &a0)
{
	return call_method<
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_CLASS_NAME,
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_NAME(3),
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

void org::apache::http::client::protocol::ClientContextConfigurer::setCredentialsProvider(local_ref< org::apache::http::client::CredentialsProvider > const &a0)
{
	return call_method<
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_CLASS_NAME,
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_NAME(4),
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

void org::apache::http::client::protocol::ClientContextConfigurer::setAuthSchemePref(local_ref< java::util::List > const &a0)
{
	return call_method<
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_CLASS_NAME,
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_NAME(5),
		org::apache::http::client::protocol::ClientContextConfigurer::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(org::apache::http::client::protocol::ClientContextConfigurer,"org/apache/http/client/protocol/ClientContextConfigurer")
J2CPP_DEFINE_METHOD(org::apache::http::client::protocol::ClientContextConfigurer,0,"<init>","(Lorg/apache/http/protocol/HttpContext;)V")
J2CPP_DEFINE_METHOD(org::apache::http::client::protocol::ClientContextConfigurer,1,"setCookieSpecRegistry","(Lorg/apache/http/cookie/CookieSpecRegistry;)V")
J2CPP_DEFINE_METHOD(org::apache::http::client::protocol::ClientContextConfigurer,2,"setAuthSchemeRegistry","(Lorg/apache/http/auth/AuthSchemeRegistry;)V")
J2CPP_DEFINE_METHOD(org::apache::http::client::protocol::ClientContextConfigurer,3,"setCookieStore","(Lorg/apache/http/client/CookieStore;)V")
J2CPP_DEFINE_METHOD(org::apache::http::client::protocol::ClientContextConfigurer,4,"setCredentialsProvider","(Lorg/apache/http/client/CredentialsProvider;)V")
J2CPP_DEFINE_METHOD(org::apache::http::client::protocol::ClientContextConfigurer,5,"setAuthSchemePref","(Ljava/util/List;)V")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CLIENT_PROTOCOL_CLIENTCONTEXTCONFIGURER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
