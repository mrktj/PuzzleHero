/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.client.params.AuthPolicy
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CLIENT_PARAMS_AUTHPOLICY_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_CLIENT_PARAMS_AUTHPOLICY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace client { namespace params {

	class AuthPolicy;
	class AuthPolicy
		: public object<AuthPolicy>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)

		explicit AuthPolicy(jobject jobj)
		: object<AuthPolicy>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;



		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::lang::String > > NTLM;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< java::lang::String > > DIGEST;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< java::lang::String > > BASIC;
	}; //class AuthPolicy

} //namespace params
} //namespace client
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CLIENT_PARAMS_AUTHPOLICY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CLIENT_PARAMS_AUTHPOLICY_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_CLIENT_PARAMS_AUTHPOLICY_HPP_IMPL

namespace j2cpp {



org::apache::http::client::params::AuthPolicy::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}



static_field<
	org::apache::http::client::params::AuthPolicy::J2CPP_CLASS_NAME,
	org::apache::http::client::params::AuthPolicy::J2CPP_FIELD_NAME(0),
	org::apache::http::client::params::AuthPolicy::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::lang::String >
> org::apache::http::client::params::AuthPolicy::NTLM;

static_field<
	org::apache::http::client::params::AuthPolicy::J2CPP_CLASS_NAME,
	org::apache::http::client::params::AuthPolicy::J2CPP_FIELD_NAME(1),
	org::apache::http::client::params::AuthPolicy::J2CPP_FIELD_SIGNATURE(1),
	local_ref< java::lang::String >
> org::apache::http::client::params::AuthPolicy::DIGEST;

static_field<
	org::apache::http::client::params::AuthPolicy::J2CPP_CLASS_NAME,
	org::apache::http::client::params::AuthPolicy::J2CPP_FIELD_NAME(2),
	org::apache::http::client::params::AuthPolicy::J2CPP_FIELD_SIGNATURE(2),
	local_ref< java::lang::String >
> org::apache::http::client::params::AuthPolicy::BASIC;


J2CPP_DEFINE_CLASS(org::apache::http::client::params::AuthPolicy,"org/apache/http/client/params/AuthPolicy")
J2CPP_DEFINE_METHOD(org::apache::http::client::params::AuthPolicy,0,"<init>","()V")
J2CPP_DEFINE_FIELD(org::apache::http::client::params::AuthPolicy,0,"NTLM","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(org::apache::http::client::params::AuthPolicy,1,"DIGEST","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(org::apache::http::client::params::AuthPolicy,2,"BASIC","Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CLIENT_PARAMS_AUTHPOLICY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
