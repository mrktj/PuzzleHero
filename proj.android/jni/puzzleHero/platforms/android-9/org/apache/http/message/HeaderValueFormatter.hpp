/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.message.HeaderValueFormatter
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_MESSAGE_HEADERVALUEFORMATTER_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_MESSAGE_HEADERVALUEFORMATTER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace util { class CharArrayBuffer; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class NameValuePair; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HeaderElement; } } } }


#include <java/lang/Object.hpp>
#include <org/apache/http/HeaderElement.hpp>
#include <org/apache/http/NameValuePair.hpp>
#include <org/apache/http/util/CharArrayBuffer.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace message {

	class HeaderValueFormatter;
	class HeaderValueFormatter
		: public object<HeaderValueFormatter>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		explicit HeaderValueFormatter(jobject jobj)
		: object<HeaderValueFormatter>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		local_ref< org::apache::http::util::CharArrayBuffer > formatElements(local_ref< org::apache::http::util::CharArrayBuffer >  const&, local_ref< array< local_ref< org::apache::http::HeaderElement >, 1> >  const&, jboolean);
		local_ref< org::apache::http::util::CharArrayBuffer > formatHeaderElement(local_ref< org::apache::http::util::CharArrayBuffer >  const&, local_ref< org::apache::http::HeaderElement >  const&, jboolean);
		local_ref< org::apache::http::util::CharArrayBuffer > formatParameters(local_ref< org::apache::http::util::CharArrayBuffer >  const&, local_ref< array< local_ref< org::apache::http::NameValuePair >, 1> >  const&, jboolean);
		local_ref< org::apache::http::util::CharArrayBuffer > formatNameValuePair(local_ref< org::apache::http::util::CharArrayBuffer >  const&, local_ref< org::apache::http::NameValuePair >  const&, jboolean);
	}; //class HeaderValueFormatter

} //namespace message
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_MESSAGE_HEADERVALUEFORMATTER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_MESSAGE_HEADERVALUEFORMATTER_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_MESSAGE_HEADERVALUEFORMATTER_HPP_IMPL

namespace j2cpp {



org::apache::http::message::HeaderValueFormatter::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

local_ref< org::apache::http::util::CharArrayBuffer > org::apache::http::message::HeaderValueFormatter::formatElements(local_ref< org::apache::http::util::CharArrayBuffer > const &a0, local_ref< array< local_ref< org::apache::http::HeaderElement >, 1> > const &a1, jboolean a2)
{
	return call_method<
		org::apache::http::message::HeaderValueFormatter::J2CPP_CLASS_NAME,
		org::apache::http::message::HeaderValueFormatter::J2CPP_METHOD_NAME(0),
		org::apache::http::message::HeaderValueFormatter::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< org::apache::http::util::CharArrayBuffer >
	>(get_jobject(), a0, a1, a2);
}

local_ref< org::apache::http::util::CharArrayBuffer > org::apache::http::message::HeaderValueFormatter::formatHeaderElement(local_ref< org::apache::http::util::CharArrayBuffer > const &a0, local_ref< org::apache::http::HeaderElement > const &a1, jboolean a2)
{
	return call_method<
		org::apache::http::message::HeaderValueFormatter::J2CPP_CLASS_NAME,
		org::apache::http::message::HeaderValueFormatter::J2CPP_METHOD_NAME(1),
		org::apache::http::message::HeaderValueFormatter::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< org::apache::http::util::CharArrayBuffer >
	>(get_jobject(), a0, a1, a2);
}

local_ref< org::apache::http::util::CharArrayBuffer > org::apache::http::message::HeaderValueFormatter::formatParameters(local_ref< org::apache::http::util::CharArrayBuffer > const &a0, local_ref< array< local_ref< org::apache::http::NameValuePair >, 1> > const &a1, jboolean a2)
{
	return call_method<
		org::apache::http::message::HeaderValueFormatter::J2CPP_CLASS_NAME,
		org::apache::http::message::HeaderValueFormatter::J2CPP_METHOD_NAME(2),
		org::apache::http::message::HeaderValueFormatter::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< org::apache::http::util::CharArrayBuffer >
	>(get_jobject(), a0, a1, a2);
}

local_ref< org::apache::http::util::CharArrayBuffer > org::apache::http::message::HeaderValueFormatter::formatNameValuePair(local_ref< org::apache::http::util::CharArrayBuffer > const &a0, local_ref< org::apache::http::NameValuePair > const &a1, jboolean a2)
{
	return call_method<
		org::apache::http::message::HeaderValueFormatter::J2CPP_CLASS_NAME,
		org::apache::http::message::HeaderValueFormatter::J2CPP_METHOD_NAME(3),
		org::apache::http::message::HeaderValueFormatter::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< org::apache::http::util::CharArrayBuffer >
	>(get_jobject(), a0, a1, a2);
}


J2CPP_DEFINE_CLASS(org::apache::http::message::HeaderValueFormatter,"org/apache/http/message/HeaderValueFormatter")
J2CPP_DEFINE_METHOD(org::apache::http::message::HeaderValueFormatter,0,"formatElements","(Lorg/apache/http/util/CharArrayBuffer;[org.apache.http.HeaderElementZ)Lorg/apache/http/util/CharArrayBuffer;")
J2CPP_DEFINE_METHOD(org::apache::http::message::HeaderValueFormatter,1,"formatHeaderElement","(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/HeaderElement;Z)Lorg/apache/http/util/CharArrayBuffer;")
J2CPP_DEFINE_METHOD(org::apache::http::message::HeaderValueFormatter,2,"formatParameters","(Lorg/apache/http/util/CharArrayBuffer;[org.apache.http.NameValuePairZ)Lorg/apache/http/util/CharArrayBuffer;")
J2CPP_DEFINE_METHOD(org::apache::http::message::HeaderValueFormatter,3,"formatNameValuePair","(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/NameValuePair;Z)Lorg/apache/http/util/CharArrayBuffer;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_MESSAGE_HEADERVALUEFORMATTER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
