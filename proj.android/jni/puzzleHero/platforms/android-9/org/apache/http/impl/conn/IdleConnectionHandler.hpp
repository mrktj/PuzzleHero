/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.impl.conn.IdleConnectionHandler
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CONN_IDLECONNECTIONHANDLER_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CONN_IDLECONNECTIONHANDLER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { namespace concurrent { class TimeUnit; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpConnection; } } } }


#include <java/lang/Object.hpp>
#include <java/util/concurrent/TimeUnit.hpp>
#include <org/apache/http/HttpConnection.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace impl { namespace conn {

	class IdleConnectionHandler;
	class IdleConnectionHandler
		: public object<IdleConnectionHandler>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		explicit IdleConnectionHandler(jobject jobj)
		: object<IdleConnectionHandler>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		IdleConnectionHandler();
		void add(local_ref< org::apache::http::HttpConnection >  const&, jlong, local_ref< java::util::concurrent::TimeUnit >  const&);
		jboolean remove(local_ref< org::apache::http::HttpConnection >  const&);
		void removeAll();
		void closeIdleConnections(jlong);
		void closeExpiredConnections();
	}; //class IdleConnectionHandler

} //namespace conn
} //namespace impl
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CONN_IDLECONNECTIONHANDLER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CONN_IDLECONNECTIONHANDLER_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CONN_IDLECONNECTIONHANDLER_HPP_IMPL

namespace j2cpp {



org::apache::http::impl::conn::IdleConnectionHandler::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


org::apache::http::impl::conn::IdleConnectionHandler::IdleConnectionHandler()
: object<org::apache::http::impl::conn::IdleConnectionHandler>(
	call_new_object<
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_NAME(0),
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


void org::apache::http::impl::conn::IdleConnectionHandler::add(local_ref< org::apache::http::HttpConnection > const &a0, jlong a1, local_ref< java::util::concurrent::TimeUnit > const &a2)
{
	return call_method<
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_NAME(1),
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0, a1, a2);
}

jboolean org::apache::http::impl::conn::IdleConnectionHandler::remove(local_ref< org::apache::http::HttpConnection > const &a0)
{
	return call_method<
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_NAME(2),
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_SIGNATURE(2), 
		jboolean
	>(get_jobject(), a0);
}

void org::apache::http::impl::conn::IdleConnectionHandler::removeAll()
{
	return call_method<
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_NAME(3),
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject());
}

void org::apache::http::impl::conn::IdleConnectionHandler::closeIdleConnections(jlong a0)
{
	return call_method<
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_NAME(4),
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

void org::apache::http::impl::conn::IdleConnectionHandler::closeExpiredConnections()
{
	return call_method<
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_NAME(5),
		org::apache::http::impl::conn::IdleConnectionHandler::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(org::apache::http::impl::conn::IdleConnectionHandler,"org/apache/http/impl/conn/IdleConnectionHandler")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::IdleConnectionHandler,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::IdleConnectionHandler,1,"add","(Lorg/apache/http/HttpConnection;JLjava/util/concurrent/TimeUnit;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::IdleConnectionHandler,2,"remove","(Lorg/apache/http/HttpConnection;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::IdleConnectionHandler,3,"removeAll","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::IdleConnectionHandler,4,"closeIdleConnections","(J)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::IdleConnectionHandler,5,"closeExpiredConnections","()V")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CONN_IDLECONNECTIONHANDLER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
