/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.impl.conn.AbstractPooledConnAdapter
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpInetConnection; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace impl { namespace conn { class AbstractClientConnAdapter; } } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpHost; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { namespace routing { class HttpRoute; } } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { class ManagedClientConnection; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { class ConnectionReleaseTrigger; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpConnection; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace params { class HttpParams; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace protocol { class HttpContext; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpClientConnection; } } } }


#include <java/lang/Object.hpp>
#include <org/apache/http/HttpClientConnection.hpp>
#include <org/apache/http/HttpConnection.hpp>
#include <org/apache/http/HttpHost.hpp>
#include <org/apache/http/HttpInetConnection.hpp>
#include <org/apache/http/conn/ConnectionReleaseTrigger.hpp>
#include <org/apache/http/conn/ManagedClientConnection.hpp>
#include <org/apache/http/conn/routing/HttpRoute.hpp>
#include <org/apache/http/impl/conn/AbstractClientConnAdapter.hpp>
#include <org/apache/http/params/HttpParams.hpp>
#include <org/apache/http/protocol/HttpContext.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace impl { namespace conn {

	class AbstractPooledConnAdapter;
	class AbstractPooledConnAdapter
		: public object<AbstractPooledConnAdapter>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_FIELD(0)

		explicit AbstractPooledConnAdapter(jobject jobj)
		: object<AbstractPooledConnAdapter>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<org::apache::http::HttpInetConnection>() const;
		operator local_ref<org::apache::http::impl::conn::AbstractClientConnAdapter>() const;
		operator local_ref<org::apache::http::conn::ManagedClientConnection>() const;
		operator local_ref<org::apache::http::conn::ConnectionReleaseTrigger>() const;
		operator local_ref<org::apache::http::HttpConnection>() const;
		operator local_ref<org::apache::http::HttpClientConnection>() const;


		local_ref< org::apache::http::conn::routing::HttpRoute > getRoute();
		void open(local_ref< org::apache::http::conn::routing::HttpRoute >  const&, local_ref< org::apache::http::protocol::HttpContext >  const&, local_ref< org::apache::http::params::HttpParams >  const&);
		void tunnelTarget(jboolean, local_ref< org::apache::http::params::HttpParams >  const&);
		void tunnelProxy(local_ref< org::apache::http::HttpHost >  const&, jboolean, local_ref< org::apache::http::params::HttpParams >  const&);
		void layerProtocol(local_ref< org::apache::http::protocol::HttpContext >  const&, local_ref< org::apache::http::params::HttpParams >  const&);
		void close();
		void shutdown();
		local_ref< java::lang::Object > getState();
		void setState(local_ref< java::lang::Object >  const&);

	}; //class AbstractPooledConnAdapter

} //namespace conn
} //namespace impl
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER_HPP_IMPL

namespace j2cpp {



org::apache::http::impl::conn::AbstractPooledConnAdapter::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

org::apache::http::impl::conn::AbstractPooledConnAdapter::operator local_ref<org::apache::http::HttpInetConnection>() const
{
	return local_ref<org::apache::http::HttpInetConnection>(get_jobject());
}

org::apache::http::impl::conn::AbstractPooledConnAdapter::operator local_ref<org::apache::http::impl::conn::AbstractClientConnAdapter>() const
{
	return local_ref<org::apache::http::impl::conn::AbstractClientConnAdapter>(get_jobject());
}

org::apache::http::impl::conn::AbstractPooledConnAdapter::operator local_ref<org::apache::http::conn::ManagedClientConnection>() const
{
	return local_ref<org::apache::http::conn::ManagedClientConnection>(get_jobject());
}

org::apache::http::impl::conn::AbstractPooledConnAdapter::operator local_ref<org::apache::http::conn::ConnectionReleaseTrigger>() const
{
	return local_ref<org::apache::http::conn::ConnectionReleaseTrigger>(get_jobject());
}

org::apache::http::impl::conn::AbstractPooledConnAdapter::operator local_ref<org::apache::http::HttpConnection>() const
{
	return local_ref<org::apache::http::HttpConnection>(get_jobject());
}

org::apache::http::impl::conn::AbstractPooledConnAdapter::operator local_ref<org::apache::http::HttpClientConnection>() const
{
	return local_ref<org::apache::http::HttpClientConnection>(get_jobject());
}




local_ref< org::apache::http::conn::routing::HttpRoute > org::apache::http::impl::conn::AbstractPooledConnAdapter::getRoute()
{
	return call_method<
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_NAME(3),
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< org::apache::http::conn::routing::HttpRoute >
	>(get_jobject());
}

void org::apache::http::impl::conn::AbstractPooledConnAdapter::open(local_ref< org::apache::http::conn::routing::HttpRoute > const &a0, local_ref< org::apache::http::protocol::HttpContext > const &a1, local_ref< org::apache::http::params::HttpParams > const &a2)
{
	return call_method<
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_NAME(4),
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0, a1, a2);
}

void org::apache::http::impl::conn::AbstractPooledConnAdapter::tunnelTarget(jboolean a0, local_ref< org::apache::http::params::HttpParams > const &a1)
{
	return call_method<
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_NAME(5),
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0, a1);
}

void org::apache::http::impl::conn::AbstractPooledConnAdapter::tunnelProxy(local_ref< org::apache::http::HttpHost > const &a0, jboolean a1, local_ref< org::apache::http::params::HttpParams > const &a2)
{
	return call_method<
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_NAME(6),
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0, a1, a2);
}

void org::apache::http::impl::conn::AbstractPooledConnAdapter::layerProtocol(local_ref< org::apache::http::protocol::HttpContext > const &a0, local_ref< org::apache::http::params::HttpParams > const &a1)
{
	return call_method<
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_NAME(7),
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0, a1);
}

void org::apache::http::impl::conn::AbstractPooledConnAdapter::close()
{
	return call_method<
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_NAME(8),
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject());
}

void org::apache::http::impl::conn::AbstractPooledConnAdapter::shutdown()
{
	return call_method<
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_NAME(9),
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject());
}

local_ref< java::lang::Object > org::apache::http::impl::conn::AbstractPooledConnAdapter::getState()
{
	return call_method<
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_NAME(10),
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

void org::apache::http::impl::conn::AbstractPooledConnAdapter::setState(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_CLASS_NAME,
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_NAME(11),
		org::apache::http::impl::conn::AbstractPooledConnAdapter::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0);
}



J2CPP_DEFINE_CLASS(org::apache::http::impl::conn::AbstractPooledConnAdapter,"org/apache/http/impl/conn/AbstractPooledConnAdapter")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,0,"<init>","(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/impl/conn/AbstractPoolEntry;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,1,"assertAttached","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,2,"detach","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,3,"getRoute","()Lorg/apache/http/conn/routing/HttpRoute;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,4,"open","(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,5,"tunnelTarget","(ZLorg/apache/http/params/HttpParams;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,6,"tunnelProxy","(Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,7,"layerProtocol","(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,8,"close","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,9,"shutdown","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,10,"getState","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::AbstractPooledConnAdapter,11,"setState","(Ljava/lang/Object;)V")
J2CPP_DEFINE_FIELD(org::apache::http::impl::conn::AbstractPooledConnAdapter,0,"poolEntry","Lorg/apache/http/impl/conn/AbstractPoolEntry;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
