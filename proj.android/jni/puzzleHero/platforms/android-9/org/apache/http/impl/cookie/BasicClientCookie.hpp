/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.impl.cookie.BasicClientCookie
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Cloneable; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Date; } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace cookie { class ClientCookie; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace cookie { class SetCookie; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace cookie { class Cookie; } } } } }


#include <java/lang/Cloneable.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/Date.hpp>
#include <org/apache/http/cookie/ClientCookie.hpp>
#include <org/apache/http/cookie/Cookie.hpp>
#include <org/apache/http/cookie/SetCookie.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace impl { namespace cookie {

	class BasicClientCookie;
	class BasicClientCookie
		: public object<BasicClientCookie>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)

		explicit BasicClientCookie(jobject jobj)
		: object<BasicClientCookie>(jobj)
		{
		}

		operator local_ref<java::lang::Cloneable>() const;
		operator local_ref<java::lang::Object>() const;
		operator local_ref<org::apache::http::cookie::ClientCookie>() const;
		operator local_ref<org::apache::http::cookie::SetCookie>() const;
		operator local_ref<org::apache::http::cookie::Cookie>() const;


		BasicClientCookie(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		local_ref< java::lang::String > getName();
		local_ref< java::lang::String > getValue();
		void setValue(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getComment();
		void setComment(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getCommentURL();
		local_ref< java::util::Date > getExpiryDate();
		void setExpiryDate(local_ref< java::util::Date >  const&);
		jboolean isPersistent();
		local_ref< java::lang::String > getDomain();
		void setDomain(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getPath();
		void setPath(local_ref< java::lang::String >  const&);
		jboolean isSecure();
		void setSecure(jboolean);
		local_ref< array<jint,1> > getPorts();
		jint getVersion();
		void setVersion(jint);
		jboolean isExpired(local_ref< java::util::Date >  const&);
		void setAttribute(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getAttribute(local_ref< java::lang::String >  const&);
		jboolean containsAttribute(local_ref< java::lang::String >  const&);
		local_ref< java::lang::Object > clone();
		local_ref< java::lang::String > toString();
	}; //class BasicClientCookie

} //namespace cookie
} //namespace impl
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE_HPP_IMPL

namespace j2cpp {



org::apache::http::impl::cookie::BasicClientCookie::operator local_ref<java::lang::Cloneable>() const
{
	return local_ref<java::lang::Cloneable>(get_jobject());
}

org::apache::http::impl::cookie::BasicClientCookie::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

org::apache::http::impl::cookie::BasicClientCookie::operator local_ref<org::apache::http::cookie::ClientCookie>() const
{
	return local_ref<org::apache::http::cookie::ClientCookie>(get_jobject());
}

org::apache::http::impl::cookie::BasicClientCookie::operator local_ref<org::apache::http::cookie::SetCookie>() const
{
	return local_ref<org::apache::http::cookie::SetCookie>(get_jobject());
}

org::apache::http::impl::cookie::BasicClientCookie::operator local_ref<org::apache::http::cookie::Cookie>() const
{
	return local_ref<org::apache::http::cookie::Cookie>(get_jobject());
}


org::apache::http::impl::cookie::BasicClientCookie::BasicClientCookie(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
: object<org::apache::http::impl::cookie::BasicClientCookie>(
	call_new_object<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(0),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1)
)
{
}


local_ref< java::lang::String > org::apache::http::impl::cookie::BasicClientCookie::getName()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(1),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > org::apache::http::impl::cookie::BasicClientCookie::getValue()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(2),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void org::apache::http::impl::cookie::BasicClientCookie::setValue(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(3),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > org::apache::http::impl::cookie::BasicClientCookie::getComment()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(4),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void org::apache::http::impl::cookie::BasicClientCookie::setComment(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(5),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > org::apache::http::impl::cookie::BasicClientCookie::getCommentURL()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(6),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::util::Date > org::apache::http::impl::cookie::BasicClientCookie::getExpiryDate()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(7),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::util::Date >
	>(get_jobject());
}

void org::apache::http::impl::cookie::BasicClientCookie::setExpiryDate(local_ref< java::util::Date > const &a0)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(8),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0);
}

jboolean org::apache::http::impl::cookie::BasicClientCookie::isPersistent()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(9),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(get_jobject());
}

local_ref< java::lang::String > org::apache::http::impl::cookie::BasicClientCookie::getDomain()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(10),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void org::apache::http::impl::cookie::BasicClientCookie::setDomain(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(11),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > org::apache::http::impl::cookie::BasicClientCookie::getPath()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(12),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void org::apache::http::impl::cookie::BasicClientCookie::setPath(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(13),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(13), 
		void
	>(get_jobject(), a0);
}

jboolean org::apache::http::impl::cookie::BasicClientCookie::isSecure()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(14),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(14), 
		jboolean
	>(get_jobject());
}

void org::apache::http::impl::cookie::BasicClientCookie::setSecure(jboolean a0)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(15),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(15), 
		void
	>(get_jobject(), a0);
}

local_ref< array<jint,1> > org::apache::http::impl::cookie::BasicClientCookie::getPorts()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(16),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< array<jint,1> >
	>(get_jobject());
}

jint org::apache::http::impl::cookie::BasicClientCookie::getVersion()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(17),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(17), 
		jint
	>(get_jobject());
}

void org::apache::http::impl::cookie::BasicClientCookie::setVersion(jint a0)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(18),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(18), 
		void
	>(get_jobject(), a0);
}

jboolean org::apache::http::impl::cookie::BasicClientCookie::isExpired(local_ref< java::util::Date > const &a0)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(19),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(19), 
		jboolean
	>(get_jobject(), a0);
}

void org::apache::http::impl::cookie::BasicClientCookie::setAttribute(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(20),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(20), 
		void
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::String > org::apache::http::impl::cookie::BasicClientCookie::getAttribute(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(21),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(21), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jboolean org::apache::http::impl::cookie::BasicClientCookie::containsAttribute(local_ref< java::lang::String > const &a0)
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(22),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(22), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::lang::Object > org::apache::http::impl::cookie::BasicClientCookie::clone()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(23),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(23), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::String > org::apache::http::impl::cookie::BasicClientCookie::toString()
{
	return call_method<
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_CLASS_NAME,
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_NAME(24),
		org::apache::http::impl::cookie::BasicClientCookie::J2CPP_METHOD_SIGNATURE(24), 
		local_ref< java::lang::String >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(org::apache::http::impl::cookie::BasicClientCookie,"org/apache/http/impl/cookie/BasicClientCookie")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,0,"<init>","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,1,"getName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,2,"getValue","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,3,"setValue","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,4,"getComment","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,5,"setComment","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,6,"getCommentURL","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,7,"getExpiryDate","()Ljava/util/Date;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,8,"setExpiryDate","(Ljava/util/Date;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,9,"isPersistent","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,10,"getDomain","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,11,"setDomain","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,12,"getPath","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,13,"setPath","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,14,"isSecure","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,15,"setSecure","(Z)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,16,"getPorts","()[I")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,17,"getVersion","()I")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,18,"setVersion","(I)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,19,"isExpired","(Ljava/util/Date;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,20,"setAttribute","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,21,"getAttribute","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,22,"containsAttribute","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,23,"clone","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::cookie::BasicClientCookie,24,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
