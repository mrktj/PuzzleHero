/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_BASICPOOLEDCONNADAPTER_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_BASICPOOLEDCONNADAPTER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpInetConnection; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace impl { namespace conn { class AbstractPooledConnAdapter; } } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace impl { namespace conn { class AbstractClientConnAdapter; } } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { class ManagedClientConnection; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { class ConnectionReleaseTrigger; } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpConnection; } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpClientConnection; } } } }


#include <java/lang/Object.hpp>
#include <org/apache/http/HttpClientConnection.hpp>
#include <org/apache/http/HttpConnection.hpp>
#include <org/apache/http/HttpInetConnection.hpp>
#include <org/apache/http/conn/ConnectionReleaseTrigger.hpp>
#include <org/apache/http/conn/ManagedClientConnection.hpp>
#include <org/apache/http/impl/conn/AbstractClientConnAdapter.hpp>
#include <org/apache/http/impl/conn/AbstractPooledConnAdapter.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace impl { namespace conn { namespace tsccm {

	class BasicPooledConnAdapter;
	class BasicPooledConnAdapter
		: public object<BasicPooledConnAdapter>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		explicit BasicPooledConnAdapter(jobject jobj)
		: object<BasicPooledConnAdapter>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<org::apache::http::HttpInetConnection>() const;
		operator local_ref<org::apache::http::impl::conn::AbstractPooledConnAdapter>() const;
		operator local_ref<org::apache::http::impl::conn::AbstractClientConnAdapter>() const;
		operator local_ref<org::apache::http::conn::ManagedClientConnection>() const;
		operator local_ref<org::apache::http::conn::ConnectionReleaseTrigger>() const;
		operator local_ref<org::apache::http::HttpConnection>() const;
		operator local_ref<org::apache::http::HttpClientConnection>() const;


	}; //class BasicPooledConnAdapter

} //namespace tsccm
} //namespace conn
} //namespace impl
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_BASICPOOLEDCONNADAPTER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_BASICPOOLEDCONNADAPTER_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_BASICPOOLEDCONNADAPTER_HPP_IMPL

namespace j2cpp {



org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter::operator local_ref<org::apache::http::HttpInetConnection>() const
{
	return local_ref<org::apache::http::HttpInetConnection>(get_jobject());
}

org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter::operator local_ref<org::apache::http::impl::conn::AbstractPooledConnAdapter>() const
{
	return local_ref<org::apache::http::impl::conn::AbstractPooledConnAdapter>(get_jobject());
}

org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter::operator local_ref<org::apache::http::impl::conn::AbstractClientConnAdapter>() const
{
	return local_ref<org::apache::http::impl::conn::AbstractClientConnAdapter>(get_jobject());
}

org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter::operator local_ref<org::apache::http::conn::ManagedClientConnection>() const
{
	return local_ref<org::apache::http::conn::ManagedClientConnection>(get_jobject());
}

org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter::operator local_ref<org::apache::http::conn::ConnectionReleaseTrigger>() const
{
	return local_ref<org::apache::http::conn::ConnectionReleaseTrigger>(get_jobject());
}

org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter::operator local_ref<org::apache::http::HttpConnection>() const
{
	return local_ref<org::apache::http::HttpConnection>(get_jobject());
}

org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter::operator local_ref<org::apache::http::HttpClientConnection>() const
{
	return local_ref<org::apache::http::HttpClientConnection>(get_jobject());
}






J2CPP_DEFINE_CLASS(org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter,"org/apache/http/impl/conn/tsccm/BasicPooledConnAdapter")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter,0,"<init>","(Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;Lorg/apache/http/impl/conn/AbstractPoolEntry;)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter,1,"getManager","()Lorg/apache/http/conn/ClientConnectionManager;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter,2,"getPoolEntry","()Lorg/apache/http/impl/conn/AbstractPoolEntry;")
J2CPP_DEFINE_METHOD(org::apache::http::impl::conn::tsccm::BasicPooledConnAdapter,3,"detach","()V")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_BASICPOOLEDCONNADAPTER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
