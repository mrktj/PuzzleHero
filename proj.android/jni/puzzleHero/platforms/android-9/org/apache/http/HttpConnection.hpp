/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.apache.http.HttpConnection
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpConnectionMetrics; } } } }


#include <java/lang/Object.hpp>
#include <org/apache/http/HttpConnectionMetrics.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http {

	class HttpConnection;
	class HttpConnection
		: public object<HttpConnection>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		explicit HttpConnection(jobject jobj)
		: object<HttpConnection>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void close();
		jboolean isOpen();
		jboolean isStale();
		void setSocketTimeout(jint);
		jint getSocketTimeout();
		void shutdown();
		local_ref< org::apache::http::HttpConnectionMetrics > getMetrics();
	}; //class HttpConnection

} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_IMPL

namespace j2cpp {



org::apache::http::HttpConnection::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void org::apache::http::HttpConnection::close()
{
	return call_method<
		org::apache::http::HttpConnection::J2CPP_CLASS_NAME,
		org::apache::http::HttpConnection::J2CPP_METHOD_NAME(0),
		org::apache::http::HttpConnection::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject());
}

jboolean org::apache::http::HttpConnection::isOpen()
{
	return call_method<
		org::apache::http::HttpConnection::J2CPP_CLASS_NAME,
		org::apache::http::HttpConnection::J2CPP_METHOD_NAME(1),
		org::apache::http::HttpConnection::J2CPP_METHOD_SIGNATURE(1), 
		jboolean
	>(get_jobject());
}

jboolean org::apache::http::HttpConnection::isStale()
{
	return call_method<
		org::apache::http::HttpConnection::J2CPP_CLASS_NAME,
		org::apache::http::HttpConnection::J2CPP_METHOD_NAME(2),
		org::apache::http::HttpConnection::J2CPP_METHOD_SIGNATURE(2), 
		jboolean
	>(get_jobject());
}

void org::apache::http::HttpConnection::setSocketTimeout(jint a0)
{
	return call_method<
		org::apache::http::HttpConnection::J2CPP_CLASS_NAME,
		org::apache::http::HttpConnection::J2CPP_METHOD_NAME(3),
		org::apache::http::HttpConnection::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

jint org::apache::http::HttpConnection::getSocketTimeout()
{
	return call_method<
		org::apache::http::HttpConnection::J2CPP_CLASS_NAME,
		org::apache::http::HttpConnection::J2CPP_METHOD_NAME(4),
		org::apache::http::HttpConnection::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

void org::apache::http::HttpConnection::shutdown()
{
	return call_method<
		org::apache::http::HttpConnection::J2CPP_CLASS_NAME,
		org::apache::http::HttpConnection::J2CPP_METHOD_NAME(5),
		org::apache::http::HttpConnection::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject());
}

local_ref< org::apache::http::HttpConnectionMetrics > org::apache::http::HttpConnection::getMetrics()
{
	return call_method<
		org::apache::http::HttpConnection::J2CPP_CLASS_NAME,
		org::apache::http::HttpConnection::J2CPP_METHOD_NAME(6),
		org::apache::http::HttpConnection::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< org::apache::http::HttpConnectionMetrics >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(org::apache::http::HttpConnection,"org/apache/http/HttpConnection")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,0,"close","()V")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,1,"isOpen","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,2,"isStale","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,3,"setSocketTimeout","(I)V")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,4,"getSocketTimeout","()I")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,5,"shutdown","()V")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,6,"getMetrics","()Lorg/apache/http/HttpConnectionMetrics;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
