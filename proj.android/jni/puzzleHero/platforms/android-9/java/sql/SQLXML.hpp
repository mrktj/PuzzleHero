/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.sql.SQLXML
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_SQLXML_HPP_DECL
#define J2CPP_JAVA_SQL_SQLXML_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Class; } } }
namespace j2cpp { namespace javax { namespace xml { namespace transform { class Result; } } } }
namespace j2cpp { namespace javax { namespace xml { namespace transform { class Source; } } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }
namespace j2cpp { namespace java { namespace io { class Writer; } } }
namespace j2cpp { namespace java { namespace io { class Reader; } } }
namespace j2cpp { namespace java { namespace io { class OutputStream; } } }


#include <java/io/InputStream.hpp>
#include <java/io/OutputStream.hpp>
#include <java/io/Reader.hpp>
#include <java/io/Writer.hpp>
#include <java/lang/Class.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <javax/xml/transform/Result.hpp>
#include <javax/xml/transform/Source.hpp>


namespace j2cpp {

namespace java { namespace sql {

	class SQLXML;
	class SQLXML
		: public object<SQLXML>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)

		explicit SQLXML(jobject jobj)
		: object<SQLXML>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void free();
		local_ref< java::io::InputStream > getBinaryStream();
		local_ref< java::io::OutputStream > setBinaryStream();
		local_ref< java::io::Reader > getCharacterStream();
		local_ref< java::io::Writer > setCharacterStream();
		local_ref< java::lang::String > getString();
		void setString(local_ref< java::lang::String >  const&);
		local_ref< javax::xml::transform::Source > getSource(local_ref< java::lang::Class >  const&);
		local_ref< javax::xml::transform::Result > setResult(local_ref< java::lang::Class >  const&);
	}; //class SQLXML

} //namespace sql
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_SQLXML_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_SQLXML_HPP_IMPL
#define J2CPP_JAVA_SQL_SQLXML_HPP_IMPL

namespace j2cpp {



java::sql::SQLXML::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void java::sql::SQLXML::free()
{
	return call_method<
		java::sql::SQLXML::J2CPP_CLASS_NAME,
		java::sql::SQLXML::J2CPP_METHOD_NAME(0),
		java::sql::SQLXML::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject());
}

local_ref< java::io::InputStream > java::sql::SQLXML::getBinaryStream()
{
	return call_method<
		java::sql::SQLXML::J2CPP_CLASS_NAME,
		java::sql::SQLXML::J2CPP_METHOD_NAME(1),
		java::sql::SQLXML::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::io::InputStream >
	>(get_jobject());
}

local_ref< java::io::OutputStream > java::sql::SQLXML::setBinaryStream()
{
	return call_method<
		java::sql::SQLXML::J2CPP_CLASS_NAME,
		java::sql::SQLXML::J2CPP_METHOD_NAME(2),
		java::sql::SQLXML::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::io::OutputStream >
	>(get_jobject());
}

local_ref< java::io::Reader > java::sql::SQLXML::getCharacterStream()
{
	return call_method<
		java::sql::SQLXML::J2CPP_CLASS_NAME,
		java::sql::SQLXML::J2CPP_METHOD_NAME(3),
		java::sql::SQLXML::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::io::Reader >
	>(get_jobject());
}

local_ref< java::io::Writer > java::sql::SQLXML::setCharacterStream()
{
	return call_method<
		java::sql::SQLXML::J2CPP_CLASS_NAME,
		java::sql::SQLXML::J2CPP_METHOD_NAME(4),
		java::sql::SQLXML::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::io::Writer >
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::SQLXML::getString()
{
	return call_method<
		java::sql::SQLXML::J2CPP_CLASS_NAME,
		java::sql::SQLXML::J2CPP_METHOD_NAME(5),
		java::sql::SQLXML::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void java::sql::SQLXML::setString(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::sql::SQLXML::J2CPP_CLASS_NAME,
		java::sql::SQLXML::J2CPP_METHOD_NAME(6),
		java::sql::SQLXML::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0);
}

local_ref< javax::xml::transform::Source > java::sql::SQLXML::getSource(local_ref< java::lang::Class > const &a0)
{
	return call_method<
		java::sql::SQLXML::J2CPP_CLASS_NAME,
		java::sql::SQLXML::J2CPP_METHOD_NAME(7),
		java::sql::SQLXML::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< javax::xml::transform::Source >
	>(get_jobject(), a0);
}

local_ref< javax::xml::transform::Result > java::sql::SQLXML::setResult(local_ref< java::lang::Class > const &a0)
{
	return call_method<
		java::sql::SQLXML::J2CPP_CLASS_NAME,
		java::sql::SQLXML::J2CPP_METHOD_NAME(8),
		java::sql::SQLXML::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< javax::xml::transform::Result >
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(java::sql::SQLXML,"java/sql/SQLXML")
J2CPP_DEFINE_METHOD(java::sql::SQLXML,0,"free","()V")
J2CPP_DEFINE_METHOD(java::sql::SQLXML,1,"getBinaryStream","()Ljava/io/InputStream;")
J2CPP_DEFINE_METHOD(java::sql::SQLXML,2,"setBinaryStream","()Ljava/io/OutputStream;")
J2CPP_DEFINE_METHOD(java::sql::SQLXML,3,"getCharacterStream","()Ljava/io/Reader;")
J2CPP_DEFINE_METHOD(java::sql::SQLXML,4,"setCharacterStream","()Ljava/io/Writer;")
J2CPP_DEFINE_METHOD(java::sql::SQLXML,5,"getString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::SQLXML,6,"setString","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::sql::SQLXML,7,"getSource","(Ljava/lang/Class;)Ljavax/xml/transform/Source;")
J2CPP_DEFINE_METHOD(java::sql::SQLXML,8,"setResult","(Ljava/lang/Class;)Ljavax/xml/transform/Result;")

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_SQLXML_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
