/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.sql.Array
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_ARRAY_HPP_DECL
#define J2CPP_JAVA_SQL_ARRAY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Map; } } }
namespace j2cpp { namespace java { namespace sql { class ResultSet; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/sql/ResultSet.hpp>
#include <java/util/Map.hpp>


namespace j2cpp {

namespace java { namespace sql {

	class Array;
	class Array
		: public object<Array>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)

		explicit Array(jobject jobj)
		: object<Array>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		local_ref< java::lang::Object > getArray();
		local_ref< java::lang::Object > getArray(jlong, jint);
		local_ref< java::lang::Object > getArray(jlong, jint, local_ref< java::util::Map >  const&);
		local_ref< java::lang::Object > getArray(local_ref< java::util::Map >  const&);
		jint getBaseType();
		local_ref< java::lang::String > getBaseTypeName();
		local_ref< java::sql::ResultSet > getResultSet();
		local_ref< java::sql::ResultSet > getResultSet(jlong, jint);
		local_ref< java::sql::ResultSet > getResultSet(jlong, jint, local_ref< java::util::Map >  const&);
		local_ref< java::sql::ResultSet > getResultSet(local_ref< java::util::Map >  const&);
		void free();
	}; //class Array

} //namespace sql
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_ARRAY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_ARRAY_HPP_IMPL
#define J2CPP_JAVA_SQL_ARRAY_HPP_IMPL

namespace j2cpp {



java::sql::Array::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

local_ref< java::lang::Object > java::sql::Array::getArray()
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(0),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(0), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::sql::Array::getArray(jlong a0, jint a1)
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(1),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::Object > java::sql::Array::getArray(jlong a0, jint a1, local_ref< java::util::Map > const &a2)
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(2),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::lang::Object > java::sql::Array::getArray(local_ref< java::util::Map > const &a0)
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(3),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

jint java::sql::Array::getBaseType()
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(4),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > java::sql::Array::getBaseTypeName()
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(5),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::Array::getResultSet()
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(6),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::sql::ResultSet >
	>(get_jobject());
}

local_ref< java::sql::ResultSet > java::sql::Array::getResultSet(jlong a0, jint a1)
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(7),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1);
}

local_ref< java::sql::ResultSet > java::sql::Array::getResultSet(jlong a0, jint a1, local_ref< java::util::Map > const &a2)
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(8),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::sql::ResultSet > java::sql::Array::getResultSet(local_ref< java::util::Map > const &a0)
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(9),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::sql::ResultSet >
	>(get_jobject(), a0);
}

void java::sql::Array::free()
{
	return call_method<
		java::sql::Array::J2CPP_CLASS_NAME,
		java::sql::Array::J2CPP_METHOD_NAME(10),
		java::sql::Array::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::sql::Array,"java/sql/Array")
J2CPP_DEFINE_METHOD(java::sql::Array,0,"getArray","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::sql::Array,1,"getArray","(JI)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::sql::Array,2,"getArray","(JILjava/util/Map;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::sql::Array,3,"getArray","(Ljava/util/Map;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::sql::Array,4,"getBaseType","()I")
J2CPP_DEFINE_METHOD(java::sql::Array,5,"getBaseTypeName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::Array,6,"getResultSet","()Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::Array,7,"getResultSet","(JI)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::Array,8,"getResultSet","(JILjava/util/Map;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::Array,9,"getResultSet","(Ljava/util/Map;)Ljava/sql/ResultSet;")
J2CPP_DEFINE_METHOD(java::sql::Array,10,"free","()V")

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_ARRAY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
