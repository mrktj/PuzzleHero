/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.lang.System
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_SYSTEM_HPP_DECL
#define J2CPP_JAVA_LANG_SYSTEM_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class SecurityManager; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace nio { namespace channels { class Channel; } } } }
namespace j2cpp { namespace java { namespace util { class Map; } } }
namespace j2cpp { namespace java { namespace util { class Properties; } } }
namespace j2cpp { namespace java { namespace io { class PrintStream; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }
namespace j2cpp { namespace java { namespace io { class Console; } } }


#include <java/io/Console.hpp>
#include <java/io/InputStream.hpp>
#include <java/io/PrintStream.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/SecurityManager.hpp>
#include <java/lang/String.hpp>
#include <java/nio/channels/Channel.hpp>
#include <java/util/Map.hpp>
#include <java/util/Properties.hpp>


namespace j2cpp {

namespace java { namespace lang {

	class System;
	class System
		: public object<System>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)

		explicit System(jobject jobj)
		: object<System>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static void setIn(local_ref< java::io::InputStream >  const&);
		static void setOut(local_ref< java::io::PrintStream >  const&);
		static void setErr(local_ref< java::io::PrintStream >  const&);
		static void arraycopy(local_ref< java::lang::Object >  const&, jint, local_ref< java::lang::Object >  const&, jint, jint);
		static jlong currentTimeMillis();
		static jlong nanoTime();
		static void exit(jint);
		static void gc();
		static local_ref< java::lang::String > getenv(local_ref< java::lang::String >  const&);
		static local_ref< java::util::Map > getenv();
		static local_ref< java::nio::channels::Channel > inheritedChannel();
		static local_ref< java::util::Properties > getProperties();
		static local_ref< java::lang::String > getProperty(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > getProperty(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > setProperty(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > clearProperty(local_ref< java::lang::String >  const&);
		static local_ref< java::io::Console > console();
		static local_ref< java::lang::SecurityManager > getSecurityManager();
		static jint identityHashCode(local_ref< java::lang::Object >  const&);
		static void load(local_ref< java::lang::String >  const&);
		static void loadLibrary(local_ref< java::lang::String >  const&);
		static void runFinalization();
		static void runFinalizersOnExit(jboolean);
		static void setProperties(local_ref< java::util::Properties >  const&);
		static void setSecurityManager(local_ref< java::lang::SecurityManager >  const&);
		static local_ref< java::lang::String > mapLibraryName(local_ref< java::lang::String >  const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::io::InputStream > > in;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< java::io::PrintStream > > out;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< java::io::PrintStream > > err;
	}; //class System

} //namespace lang
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_SYSTEM_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_SYSTEM_HPP_IMPL
#define J2CPP_JAVA_LANG_SYSTEM_HPP_IMPL

namespace j2cpp {



java::lang::System::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


void java::lang::System::setIn(local_ref< java::io::InputStream > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(1),
		java::lang::System::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(a0);
}

void java::lang::System::setOut(local_ref< java::io::PrintStream > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(2),
		java::lang::System::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(a0);
}

void java::lang::System::setErr(local_ref< java::io::PrintStream > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(3),
		java::lang::System::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(a0);
}

void java::lang::System::arraycopy(local_ref< java::lang::Object > const &a0, jint a1, local_ref< java::lang::Object > const &a2, jint a3, jint a4)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(4),
		java::lang::System::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(a0, a1, a2, a3, a4);
}

jlong java::lang::System::currentTimeMillis()
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(5),
		java::lang::System::J2CPP_METHOD_SIGNATURE(5), 
		jlong
	>();
}

jlong java::lang::System::nanoTime()
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(6),
		java::lang::System::J2CPP_METHOD_SIGNATURE(6), 
		jlong
	>();
}

void java::lang::System::exit(jint a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(7),
		java::lang::System::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(a0);
}

void java::lang::System::gc()
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(8),
		java::lang::System::J2CPP_METHOD_SIGNATURE(8), 
		void
	>();
}

local_ref< java::lang::String > java::lang::System::getenv(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(9),
		java::lang::System::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::util::Map > java::lang::System::getenv()
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(10),
		java::lang::System::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::util::Map >
	>();
}

local_ref< java::nio::channels::Channel > java::lang::System::inheritedChannel()
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(11),
		java::lang::System::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::nio::channels::Channel >
	>();
}

local_ref< java::util::Properties > java::lang::System::getProperties()
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(12),
		java::lang::System::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::util::Properties >
	>();
}

local_ref< java::lang::String > java::lang::System::getProperty(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(13),
		java::lang::System::J2CPP_METHOD_SIGNATURE(13), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > java::lang::System::getProperty(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(14),
		java::lang::System::J2CPP_METHOD_SIGNATURE(14), 
		local_ref< java::lang::String >
	>(a0, a1);
}

local_ref< java::lang::String > java::lang::System::setProperty(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(15),
		java::lang::System::J2CPP_METHOD_SIGNATURE(15), 
		local_ref< java::lang::String >
	>(a0, a1);
}

local_ref< java::lang::String > java::lang::System::clearProperty(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(16),
		java::lang::System::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::io::Console > java::lang::System::console()
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(17),
		java::lang::System::J2CPP_METHOD_SIGNATURE(17), 
		local_ref< java::io::Console >
	>();
}

local_ref< java::lang::SecurityManager > java::lang::System::getSecurityManager()
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(18),
		java::lang::System::J2CPP_METHOD_SIGNATURE(18), 
		local_ref< java::lang::SecurityManager >
	>();
}

jint java::lang::System::identityHashCode(local_ref< java::lang::Object > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(19),
		java::lang::System::J2CPP_METHOD_SIGNATURE(19), 
		jint
	>(a0);
}

void java::lang::System::load(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(20),
		java::lang::System::J2CPP_METHOD_SIGNATURE(20), 
		void
	>(a0);
}

void java::lang::System::loadLibrary(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(21),
		java::lang::System::J2CPP_METHOD_SIGNATURE(21), 
		void
	>(a0);
}

void java::lang::System::runFinalization()
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(22),
		java::lang::System::J2CPP_METHOD_SIGNATURE(22), 
		void
	>();
}

void java::lang::System::runFinalizersOnExit(jboolean a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(23),
		java::lang::System::J2CPP_METHOD_SIGNATURE(23), 
		void
	>(a0);
}

void java::lang::System::setProperties(local_ref< java::util::Properties > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(24),
		java::lang::System::J2CPP_METHOD_SIGNATURE(24), 
		void
	>(a0);
}

void java::lang::System::setSecurityManager(local_ref< java::lang::SecurityManager > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(25),
		java::lang::System::J2CPP_METHOD_SIGNATURE(25), 
		void
	>(a0);
}

local_ref< java::lang::String > java::lang::System::mapLibraryName(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::lang::System::J2CPP_CLASS_NAME,
		java::lang::System::J2CPP_METHOD_NAME(26),
		java::lang::System::J2CPP_METHOD_SIGNATURE(26), 
		local_ref< java::lang::String >
	>(a0);
}



static_field<
	java::lang::System::J2CPP_CLASS_NAME,
	java::lang::System::J2CPP_FIELD_NAME(0),
	java::lang::System::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::io::InputStream >
> java::lang::System::in;

static_field<
	java::lang::System::J2CPP_CLASS_NAME,
	java::lang::System::J2CPP_FIELD_NAME(1),
	java::lang::System::J2CPP_FIELD_SIGNATURE(1),
	local_ref< java::io::PrintStream >
> java::lang::System::out;

static_field<
	java::lang::System::J2CPP_CLASS_NAME,
	java::lang::System::J2CPP_FIELD_NAME(2),
	java::lang::System::J2CPP_FIELD_SIGNATURE(2),
	local_ref< java::io::PrintStream >
> java::lang::System::err;


J2CPP_DEFINE_CLASS(java::lang::System,"java/lang/System")
J2CPP_DEFINE_METHOD(java::lang::System,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::lang::System,1,"setIn","(Ljava/io/InputStream;)V")
J2CPP_DEFINE_METHOD(java::lang::System,2,"setOut","(Ljava/io/PrintStream;)V")
J2CPP_DEFINE_METHOD(java::lang::System,3,"setErr","(Ljava/io/PrintStream;)V")
J2CPP_DEFINE_METHOD(java::lang::System,4,"arraycopy","(Ljava/lang/Object;ILjava/lang/Object;II)V")
J2CPP_DEFINE_METHOD(java::lang::System,5,"currentTimeMillis","()J")
J2CPP_DEFINE_METHOD(java::lang::System,6,"nanoTime","()J")
J2CPP_DEFINE_METHOD(java::lang::System,7,"exit","(I)V")
J2CPP_DEFINE_METHOD(java::lang::System,8,"gc","()V")
J2CPP_DEFINE_METHOD(java::lang::System,9,"getenv","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::lang::System,10,"getenv","()Ljava/util/Map;")
J2CPP_DEFINE_METHOD(java::lang::System,11,"inheritedChannel","()Ljava/nio/channels/Channel;")
J2CPP_DEFINE_METHOD(java::lang::System,12,"getProperties","()Ljava/util/Properties;")
J2CPP_DEFINE_METHOD(java::lang::System,13,"getProperty","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::lang::System,14,"getProperty","(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::lang::System,15,"setProperty","(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::lang::System,16,"clearProperty","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::lang::System,17,"console","()Ljava/io/Console;")
J2CPP_DEFINE_METHOD(java::lang::System,18,"getSecurityManager","()Ljava/lang/SecurityManager;")
J2CPP_DEFINE_METHOD(java::lang::System,19,"identityHashCode","(Ljava/lang/Object;)I")
J2CPP_DEFINE_METHOD(java::lang::System,20,"load","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::System,21,"loadLibrary","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::lang::System,22,"runFinalization","()V")
J2CPP_DEFINE_METHOD(java::lang::System,23,"runFinalizersOnExit","(Z)V")
J2CPP_DEFINE_METHOD(java::lang::System,24,"setProperties","(Ljava/util/Properties;)V")
J2CPP_DEFINE_METHOD(java::lang::System,25,"setSecurityManager","(Ljava/lang/SecurityManager;)V")
J2CPP_DEFINE_METHOD(java::lang::System,26,"mapLibraryName","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::lang::System,27,"<clinit>","()V")
J2CPP_DEFINE_FIELD(java::lang::System,0,"in","Ljava/io/InputStream;")
J2CPP_DEFINE_FIELD(java::lang::System,1,"out","Ljava/io/PrintStream;")
J2CPP_DEFINE_FIELD(java::lang::System,2,"err","Ljava/io/PrintStream;")

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_SYSTEM_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
