/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.lang.Object
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_OBJECT_HPP_DECL
#define J2CPP_JAVA_LANG_OBJECT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Class; } } }


#include <java/lang/Class.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace lang {

	class Object;
	class Object
		: public object<Object>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)

		explicit Object(jobject jobj)
		: object<Object>(jobj)
		{
		}



		Object();
		jboolean equals(local_ref< java::lang::Object >  const&);
		local_ref< java::lang::Class > getClass();
		jint hashCode();
		void notify();
		void notifyAll();
		local_ref< java::lang::String > toString();
		void wait();
		void wait(jlong);
		void wait(jlong, jint);
	}; //class Object

} //namespace lang
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_OBJECT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_OBJECT_HPP_IMPL
#define J2CPP_JAVA_LANG_OBJECT_HPP_IMPL

namespace j2cpp {




java::lang::Object::Object()
: object<java::lang::Object>(
	call_new_object<
		java::lang::Object::J2CPP_CLASS_NAME,
		java::lang::Object::J2CPP_METHOD_NAME(0),
		java::lang::Object::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



jboolean java::lang::Object::equals(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::lang::Object::J2CPP_CLASS_NAME,
		java::lang::Object::J2CPP_METHOD_NAME(2),
		java::lang::Object::J2CPP_METHOD_SIGNATURE(2), 
		jboolean
	>(get_jobject(), a0);
}


local_ref< java::lang::Class > java::lang::Object::getClass()
{
	return call_method<
		java::lang::Object::J2CPP_CLASS_NAME,
		java::lang::Object::J2CPP_METHOD_NAME(4),
		java::lang::Object::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::Class >
	>(get_jobject());
}

jint java::lang::Object::hashCode()
{
	return call_method<
		java::lang::Object::J2CPP_CLASS_NAME,
		java::lang::Object::J2CPP_METHOD_NAME(5),
		java::lang::Object::J2CPP_METHOD_SIGNATURE(5), 
		jint
	>(get_jobject());
}

void java::lang::Object::notify()
{
	return call_method<
		java::lang::Object::J2CPP_CLASS_NAME,
		java::lang::Object::J2CPP_METHOD_NAME(6),
		java::lang::Object::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject());
}

void java::lang::Object::notifyAll()
{
	return call_method<
		java::lang::Object::J2CPP_CLASS_NAME,
		java::lang::Object::J2CPP_METHOD_NAME(7),
		java::lang::Object::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject());
}

local_ref< java::lang::String > java::lang::Object::toString()
{
	return call_method<
		java::lang::Object::J2CPP_CLASS_NAME,
		java::lang::Object::J2CPP_METHOD_NAME(8),
		java::lang::Object::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void java::lang::Object::wait()
{
	return call_method<
		java::lang::Object::J2CPP_CLASS_NAME,
		java::lang::Object::J2CPP_METHOD_NAME(9),
		java::lang::Object::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject());
}

void java::lang::Object::wait(jlong a0)
{
	return call_method<
		java::lang::Object::J2CPP_CLASS_NAME,
		java::lang::Object::J2CPP_METHOD_NAME(10),
		java::lang::Object::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(get_jobject(), a0);
}

void java::lang::Object::wait(jlong a0, jint a1)
{
	return call_method<
		java::lang::Object::J2CPP_CLASS_NAME,
		java::lang::Object::J2CPP_METHOD_NAME(11),
		java::lang::Object::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0, a1);
}


J2CPP_DEFINE_CLASS(java::lang::Object,"java/lang/Object")
J2CPP_DEFINE_METHOD(java::lang::Object,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::lang::Object,1,"clone","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::lang::Object,2,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::lang::Object,3,"finalize","()V")
J2CPP_DEFINE_METHOD(java::lang::Object,4,"getClass","()Ljava/lang/Class;")
J2CPP_DEFINE_METHOD(java::lang::Object,5,"hashCode","()I")
J2CPP_DEFINE_METHOD(java::lang::Object,6,"notify","()V")
J2CPP_DEFINE_METHOD(java::lang::Object,7,"notifyAll","()V")
J2CPP_DEFINE_METHOD(java::lang::Object,8,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::lang::Object,9,"wait","()V")
J2CPP_DEFINE_METHOD(java::lang::Object,10,"wait","(J)V")
J2CPP_DEFINE_METHOD(java::lang::Object,11,"wait","(JI)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_OBJECT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
