/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.lang.Comparable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_COMPARABLE_HPP_DECL
#define J2CPP_JAVA_LANG_COMPARABLE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace java { namespace lang {

	class Comparable;
	class Comparable
		: public object<Comparable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		explicit Comparable(jobject jobj)
		: object<Comparable>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		jint compareTo(local_ref< java::lang::Object >  const&);
	}; //class Comparable

} //namespace lang
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_COMPARABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_COMPARABLE_HPP_IMPL
#define J2CPP_JAVA_LANG_COMPARABLE_HPP_IMPL

namespace j2cpp {



java::lang::Comparable::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

jint java::lang::Comparable::compareTo(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::lang::Comparable::J2CPP_CLASS_NAME,
		java::lang::Comparable::J2CPP_METHOD_NAME(0),
		java::lang::Comparable::J2CPP_METHOD_SIGNATURE(0), 
		jint
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(java::lang::Comparable,"java/lang/Comparable")
J2CPP_DEFINE_METHOD(java::lang::Comparable,0,"compareTo","(Ljava/lang/Object;)I")

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_COMPARABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
