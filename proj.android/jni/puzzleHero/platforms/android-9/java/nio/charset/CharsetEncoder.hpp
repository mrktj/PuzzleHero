/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.nio.charset.CharsetEncoder
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NIO_CHARSET_CHARSETENCODER_HPP_DECL
#define J2CPP_JAVA_NIO_CHARSET_CHARSETENCODER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace nio { namespace charset { class CoderResult; } } } }
namespace j2cpp { namespace java { namespace nio { namespace charset { class Charset; } } } }
namespace j2cpp { namespace java { namespace nio { namespace charset { class CodingErrorAction; } } } }
namespace j2cpp { namespace java { namespace nio { class ByteBuffer; } } }
namespace j2cpp { namespace java { namespace nio { class CharBuffer; } } }


#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>
#include <java/nio/ByteBuffer.hpp>
#include <java/nio/CharBuffer.hpp>
#include <java/nio/charset/Charset.hpp>
#include <java/nio/charset/CoderResult.hpp>
#include <java/nio/charset/CodingErrorAction.hpp>


namespace j2cpp {

namespace java { namespace nio { namespace charset {

	class CharsetEncoder;
	class CharsetEncoder
		: public object<CharsetEncoder>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)

		explicit CharsetEncoder(jobject jobj)
		: object<CharsetEncoder>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		jfloat averageBytesPerChar();
		jboolean canEncode(jchar);
		jboolean canEncode(local_ref< java::lang::CharSequence >  const&);
		local_ref< java::nio::charset::Charset > charset();
		local_ref< java::nio::ByteBuffer > encode(local_ref< java::nio::CharBuffer >  const&);
		local_ref< java::nio::charset::CoderResult > encode(local_ref< java::nio::CharBuffer >  const&, local_ref< java::nio::ByteBuffer >  const&, jboolean);
		local_ref< java::nio::charset::CoderResult > flush(local_ref< java::nio::ByteBuffer >  const&);
		jboolean isLegalReplacement(local_ref< array<jbyte,1> >  const&);
		local_ref< java::nio::charset::CodingErrorAction > malformedInputAction();
		jfloat maxBytesPerChar();
		local_ref< java::nio::charset::CharsetEncoder > onMalformedInput(local_ref< java::nio::charset::CodingErrorAction >  const&);
		local_ref< java::nio::charset::CharsetEncoder > onUnmappableCharacter(local_ref< java::nio::charset::CodingErrorAction >  const&);
		local_ref< array<jbyte,1> > replacement();
		local_ref< java::nio::charset::CharsetEncoder > replaceWith(local_ref< array<jbyte,1> >  const&);
		local_ref< java::nio::charset::CharsetEncoder > reset();
		local_ref< java::nio::charset::CodingErrorAction > unmappableCharacterAction();
	}; //class CharsetEncoder

} //namespace charset
} //namespace nio
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_NIO_CHARSET_CHARSETENCODER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NIO_CHARSET_CHARSETENCODER_HPP_IMPL
#define J2CPP_JAVA_NIO_CHARSET_CHARSETENCODER_HPP_IMPL

namespace j2cpp {



java::nio::charset::CharsetEncoder::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}



jfloat java::nio::charset::CharsetEncoder::averageBytesPerChar()
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(2),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(2), 
		jfloat
	>(get_jobject());
}

jboolean java::nio::charset::CharsetEncoder::canEncode(jchar a0)
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(3),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(3), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::nio::charset::CharsetEncoder::canEncode(local_ref< java::lang::CharSequence > const &a0)
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(4),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::nio::charset::Charset > java::nio::charset::CharsetEncoder::charset()
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(5),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::nio::charset::Charset >
	>(get_jobject());
}

local_ref< java::nio::ByteBuffer > java::nio::charset::CharsetEncoder::encode(local_ref< java::nio::CharBuffer > const &a0)
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(6),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::nio::ByteBuffer >
	>(get_jobject(), a0);
}

local_ref< java::nio::charset::CoderResult > java::nio::charset::CharsetEncoder::encode(local_ref< java::nio::CharBuffer > const &a0, local_ref< java::nio::ByteBuffer > const &a1, jboolean a2)
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(7),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::nio::charset::CoderResult >
	>(get_jobject(), a0, a1, a2);
}


local_ref< java::nio::charset::CoderResult > java::nio::charset::CharsetEncoder::flush(local_ref< java::nio::ByteBuffer > const &a0)
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(9),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::nio::charset::CoderResult >
	>(get_jobject(), a0);
}






jboolean java::nio::charset::CharsetEncoder::isLegalReplacement(local_ref< array<jbyte,1> > const &a0)
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(15),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(15), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::nio::charset::CodingErrorAction > java::nio::charset::CharsetEncoder::malformedInputAction()
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(16),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::nio::charset::CodingErrorAction >
	>(get_jobject());
}

jfloat java::nio::charset::CharsetEncoder::maxBytesPerChar()
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(17),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(17), 
		jfloat
	>(get_jobject());
}

local_ref< java::nio::charset::CharsetEncoder > java::nio::charset::CharsetEncoder::onMalformedInput(local_ref< java::nio::charset::CodingErrorAction > const &a0)
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(18),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(18), 
		local_ref< java::nio::charset::CharsetEncoder >
	>(get_jobject(), a0);
}

local_ref< java::nio::charset::CharsetEncoder > java::nio::charset::CharsetEncoder::onUnmappableCharacter(local_ref< java::nio::charset::CodingErrorAction > const &a0)
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(19),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(19), 
		local_ref< java::nio::charset::CharsetEncoder >
	>(get_jobject(), a0);
}

local_ref< array<jbyte,1> > java::nio::charset::CharsetEncoder::replacement()
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(20),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(20), 
		local_ref< array<jbyte,1> >
	>(get_jobject());
}

local_ref< java::nio::charset::CharsetEncoder > java::nio::charset::CharsetEncoder::replaceWith(local_ref< array<jbyte,1> > const &a0)
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(21),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(21), 
		local_ref< java::nio::charset::CharsetEncoder >
	>(get_jobject(), a0);
}

local_ref< java::nio::charset::CharsetEncoder > java::nio::charset::CharsetEncoder::reset()
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(22),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(22), 
		local_ref< java::nio::charset::CharsetEncoder >
	>(get_jobject());
}

local_ref< java::nio::charset::CodingErrorAction > java::nio::charset::CharsetEncoder::unmappableCharacterAction()
{
	return call_method<
		java::nio::charset::CharsetEncoder::J2CPP_CLASS_NAME,
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_NAME(23),
		java::nio::charset::CharsetEncoder::J2CPP_METHOD_SIGNATURE(23), 
		local_ref< java::nio::charset::CodingErrorAction >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::nio::charset::CharsetEncoder,"java/nio/charset/CharsetEncoder")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,0,"<init>","(Ljava/nio/charset/Charset;FF)V")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,1,"<init>","(Ljava/nio/charset/Charset;FF[B)V")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,2,"averageBytesPerChar","()F")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,3,"canEncode","(C)Z")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,4,"canEncode","(Ljava/lang/CharSequence;)Z")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,5,"charset","()Ljava/nio/charset/Charset;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,6,"encode","(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,7,"encode","(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,8,"encodeLoop","(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,9,"flush","(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,10,"implFlush","(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,11,"implOnMalformedInput","(Ljava/nio/charset/CodingErrorAction;)V")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,12,"implOnUnmappableCharacter","(Ljava/nio/charset/CodingErrorAction;)V")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,13,"implReplaceWith","([B)V")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,14,"implReset","()V")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,15,"isLegalReplacement","([B)Z")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,16,"malformedInputAction","()Ljava/nio/charset/CodingErrorAction;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,17,"maxBytesPerChar","()F")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,18,"onMalformedInput","(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,19,"onUnmappableCharacter","(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,20,"replacement","()[B")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,21,"replaceWith","([B)Ljava/nio/charset/CharsetEncoder;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,22,"reset","()Ljava/nio/charset/CharsetEncoder;")
J2CPP_DEFINE_METHOD(java::nio::charset::CharsetEncoder,23,"unmappableCharacterAction","()Ljava/nio/charset/CodingErrorAction;")

} //namespace j2cpp

#endif //J2CPP_JAVA_NIO_CHARSET_CHARSETENCODER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
