/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.io.Console
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_IO_CONSOLE_HPP_DECL
#define J2CPP_JAVA_IO_CONSOLE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace io { class PrintWriter; } } }
namespace j2cpp { namespace java { namespace io { class Flushable; } } }
namespace j2cpp { namespace java { namespace io { class Reader; } } }


#include <java/io/Flushable.hpp>
#include <java/io/PrintWriter.hpp>
#include <java/io/Reader.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace io {

	class Console;
	class Console
		: public object<Console>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)

		explicit Console(jobject jobj)
		: object<Console>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::io::Flushable>() const;


		void flush();
		local_ref< java::io::Console > format(local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		local_ref< java::io::Console > printf(local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		local_ref< java::io::Reader > reader();
		local_ref< java::lang::String > readLine();
		local_ref< java::lang::String > readLine(local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		local_ref< array<jchar,1> > readPassword();
		local_ref< array<jchar,1> > readPassword(local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		local_ref< java::io::PrintWriter > writer();
	}; //class Console

} //namespace io
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_IO_CONSOLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_IO_CONSOLE_HPP_IMPL
#define J2CPP_JAVA_IO_CONSOLE_HPP_IMPL

namespace j2cpp {



java::io::Console::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::io::Console::operator local_ref<java::io::Flushable>() const
{
	return local_ref<java::io::Flushable>(get_jobject());
}


void java::io::Console::flush()
{
	return call_method<
		java::io::Console::J2CPP_CLASS_NAME,
		java::io::Console::J2CPP_METHOD_NAME(1),
		java::io::Console::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject());
}

local_ref< java::io::Console > java::io::Console::format(local_ref< java::lang::String > const &a0, local_ref< array< local_ref< java::lang::Object >, 1> > const &a1)
{
	return call_method<
		java::io::Console::J2CPP_CLASS_NAME,
		java::io::Console::J2CPP_METHOD_NAME(2),
		java::io::Console::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::io::Console >
	>(get_jobject(), a0, a1);
}

local_ref< java::io::Console > java::io::Console::printf(local_ref< java::lang::String > const &a0, local_ref< array< local_ref< java::lang::Object >, 1> > const &a1)
{
	return call_method<
		java::io::Console::J2CPP_CLASS_NAME,
		java::io::Console::J2CPP_METHOD_NAME(3),
		java::io::Console::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::io::Console >
	>(get_jobject(), a0, a1);
}

local_ref< java::io::Reader > java::io::Console::reader()
{
	return call_method<
		java::io::Console::J2CPP_CLASS_NAME,
		java::io::Console::J2CPP_METHOD_NAME(4),
		java::io::Console::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::io::Reader >
	>(get_jobject());
}

local_ref< java::lang::String > java::io::Console::readLine()
{
	return call_method<
		java::io::Console::J2CPP_CLASS_NAME,
		java::io::Console::J2CPP_METHOD_NAME(5),
		java::io::Console::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::io::Console::readLine(local_ref< java::lang::String > const &a0, local_ref< array< local_ref< java::lang::Object >, 1> > const &a1)
{
	return call_method<
		java::io::Console::J2CPP_CLASS_NAME,
		java::io::Console::J2CPP_METHOD_NAME(6),
		java::io::Console::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::lang::String >
	>(get_jobject(), a0, a1);
}

local_ref< array<jchar,1> > java::io::Console::readPassword()
{
	return call_method<
		java::io::Console::J2CPP_CLASS_NAME,
		java::io::Console::J2CPP_METHOD_NAME(7),
		java::io::Console::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< array<jchar,1> >
	>(get_jobject());
}

local_ref< array<jchar,1> > java::io::Console::readPassword(local_ref< java::lang::String > const &a0, local_ref< array< local_ref< java::lang::Object >, 1> > const &a1)
{
	return call_method<
		java::io::Console::J2CPP_CLASS_NAME,
		java::io::Console::J2CPP_METHOD_NAME(8),
		java::io::Console::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< array<jchar,1> >
	>(get_jobject(), a0, a1);
}

local_ref< java::io::PrintWriter > java::io::Console::writer()
{
	return call_method<
		java::io::Console::J2CPP_CLASS_NAME,
		java::io::Console::J2CPP_METHOD_NAME(9),
		java::io::Console::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::io::PrintWriter >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::io::Console,"java/io/Console")
J2CPP_DEFINE_METHOD(java::io::Console,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::io::Console,1,"flush","()V")
J2CPP_DEFINE_METHOD(java::io::Console,2,"format","(Ljava/lang/String;[java.lang.Object)Ljava/io/Console;")
J2CPP_DEFINE_METHOD(java::io::Console,3,"printf","(Ljava/lang/String;[java.lang.Object)Ljava/io/Console;")
J2CPP_DEFINE_METHOD(java::io::Console,4,"reader","()Ljava/io/Reader;")
J2CPP_DEFINE_METHOD(java::io::Console,5,"readLine","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::io::Console,6,"readLine","(Ljava/lang/String;[java.lang.Object)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::io::Console,7,"readPassword","()[C")
J2CPP_DEFINE_METHOD(java::io::Console,8,"readPassword","(Ljava/lang/String;[java.lang.Object)[C")
J2CPP_DEFINE_METHOD(java::io::Console,9,"writer","()Ljava/io/PrintWriter;")

} //namespace j2cpp

#endif //J2CPP_JAVA_IO_CONSOLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
