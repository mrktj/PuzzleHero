/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.security.Identity
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_IDENTITY_HPP_DECL
#define J2CPP_JAVA_SECURITY_IDENTITY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { class Principal; } } }
namespace j2cpp { namespace java { namespace security { class PublicKey; } } }
namespace j2cpp { namespace java { namespace security { class IdentityScope; } } }
namespace j2cpp { namespace java { namespace security { class Certificate; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/security/Certificate.hpp>
#include <java/security/IdentityScope.hpp>
#include <java/security/Principal.hpp>
#include <java/security/PublicKey.hpp>


namespace j2cpp {

namespace java { namespace security {

	class Identity;
	class Identity
		: public object<Identity>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)

		explicit Identity(jobject jobj)
		: object<Identity>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::security::Principal>() const;
		operator local_ref<java::io::Serializable>() const;


		Identity(local_ref< java::lang::String > const&);
		Identity(local_ref< java::lang::String > const&, local_ref< java::security::IdentityScope > const&);
		void addCertificate(local_ref< java::security::Certificate >  const&);
		void removeCertificate(local_ref< java::security::Certificate >  const&);
		local_ref< array< local_ref< java::security::Certificate >, 1> > certificates();
		local_ref< java::lang::String > toString(jboolean);
		local_ref< java::security::IdentityScope > getScope();
		void setPublicKey(local_ref< java::security::PublicKey >  const&);
		local_ref< java::security::PublicKey > getPublicKey();
		void setInfo(local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > getInfo();
		jboolean equals(local_ref< java::lang::Object >  const&);
		local_ref< java::lang::String > getName();
		jint hashCode();
		local_ref< java::lang::String > toString();
	}; //class Identity

} //namespace security
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_IDENTITY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_IDENTITY_HPP_IMPL
#define J2CPP_JAVA_SECURITY_IDENTITY_HPP_IMPL

namespace j2cpp {



java::security::Identity::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::security::Identity::operator local_ref<java::security::Principal>() const
{
	return local_ref<java::security::Principal>(get_jobject());
}

java::security::Identity::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}



java::security::Identity::Identity(local_ref< java::lang::String > const &a0)
: object<java::security::Identity>(
	call_new_object<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(1),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



java::security::Identity::Identity(local_ref< java::lang::String > const &a0, local_ref< java::security::IdentityScope > const &a1)
: object<java::security::Identity>(
	call_new_object<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(2),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1)
)
{
}


void java::security::Identity::addCertificate(local_ref< java::security::Certificate > const &a0)
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(3),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

void java::security::Identity::removeCertificate(local_ref< java::security::Certificate > const &a0)
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(4),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

local_ref< array< local_ref< java::security::Certificate >, 1> > java::security::Identity::certificates()
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(5),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< array< local_ref< java::security::Certificate >, 1> >
	>(get_jobject());
}


local_ref< java::lang::String > java::security::Identity::toString(jboolean a0)
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(7),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

local_ref< java::security::IdentityScope > java::security::Identity::getScope()
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(8),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::security::IdentityScope >
	>(get_jobject());
}

void java::security::Identity::setPublicKey(local_ref< java::security::PublicKey > const &a0)
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(9),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject(), a0);
}

local_ref< java::security::PublicKey > java::security::Identity::getPublicKey()
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(10),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::security::PublicKey >
	>(get_jobject());
}

void java::security::Identity::setInfo(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(11),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::security::Identity::getInfo()
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(12),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jboolean java::security::Identity::equals(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(13),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::security::Identity::getName()
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(14),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(14), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint java::security::Identity::hashCode()
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(15),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(15), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > java::security::Identity::toString()
{
	return call_method<
		java::security::Identity::J2CPP_CLASS_NAME,
		java::security::Identity::J2CPP_METHOD_NAME(16),
		java::security::Identity::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::lang::String >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::security::Identity,"java/security/Identity")
J2CPP_DEFINE_METHOD(java::security::Identity,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::security::Identity,1,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,2,"<init>","(Ljava/lang/String;Ljava/security/IdentityScope;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,3,"addCertificate","(Ljava/security/Certificate;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,4,"removeCertificate","(Ljava/security/Certificate;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,5,"certificates","()[java.security.Certificate")
J2CPP_DEFINE_METHOD(java::security::Identity,6,"identityEquals","(Ljava/security/Identity;)Z")
J2CPP_DEFINE_METHOD(java::security::Identity,7,"toString","(Z)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::Identity,8,"getScope","()Ljava/security/IdentityScope;")
J2CPP_DEFINE_METHOD(java::security::Identity,9,"setPublicKey","(Ljava/security/PublicKey;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,10,"getPublicKey","()Ljava/security/PublicKey;")
J2CPP_DEFINE_METHOD(java::security::Identity,11,"setInfo","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,12,"getInfo","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::Identity,13,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::security::Identity,14,"getName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::Identity,15,"hashCode","()I")
J2CPP_DEFINE_METHOD(java::security::Identity,16,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_IDENTITY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
