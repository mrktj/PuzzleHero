/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.util.Date
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_DATE_HPP_DECL
#define J2CPP_JAVA_UTIL_DATE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Comparable; } } }
namespace j2cpp { namespace java { namespace lang { class Cloneable; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Cloneable.hpp>
#include <java/lang/Comparable.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace util {

	class Date;
	class Date
		: public object<Date>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)

		explicit Date(jobject jobj)
		: object<Date>(jobj)
		{
		}

		operator local_ref<java::lang::Comparable>() const;
		operator local_ref<java::lang::Cloneable>() const;
		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::io::Serializable>() const;


		Date();
		Date(jint, jint, jint);
		Date(jint, jint, jint, jint, jint);
		Date(jint, jint, jint, jint, jint, jint);
		Date(jlong);
		Date(local_ref< java::lang::String > const&);
		jboolean after(local_ref< java::util::Date >  const&);
		jboolean before(local_ref< java::util::Date >  const&);
		local_ref< java::lang::Object > clone();
		jint compareTo(local_ref< java::util::Date >  const&);
		jboolean equals(local_ref< java::lang::Object >  const&);
		jint getDate();
		jint getDay();
		jint getHours();
		jint getMinutes();
		jint getMonth();
		jint getSeconds();
		jlong getTime();
		jint getTimezoneOffset();
		jint getYear();
		jint hashCode();
		static jlong parse(local_ref< java::lang::String >  const&);
		void setDate(jint);
		void setHours(jint);
		void setMinutes(jint);
		void setMonth(jint);
		void setSeconds(jint);
		void setTime(jlong);
		void setYear(jint);
		local_ref< java::lang::String > toGMTString();
		local_ref< java::lang::String > toLocaleString();
		local_ref< java::lang::String > toString();
		static jlong UTC(jint, jint, jint, jint, jint, jint);
		jint compareTo(local_ref< java::lang::Object >  const&);
	}; //class Date

} //namespace util
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_DATE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_DATE_HPP_IMPL
#define J2CPP_JAVA_UTIL_DATE_HPP_IMPL

namespace j2cpp {



java::util::Date::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

java::util::Date::operator local_ref<java::lang::Cloneable>() const
{
	return local_ref<java::lang::Cloneable>(get_jobject());
}

java::util::Date::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::util::Date::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


java::util::Date::Date()
: object<java::util::Date>(
	call_new_object<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(0),
		java::util::Date::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



java::util::Date::Date(jint a0, jint a1, jint a2)
: object<java::util::Date>(
	call_new_object<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(1),
		java::util::Date::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1, a2)
)
{
}



java::util::Date::Date(jint a0, jint a1, jint a2, jint a3, jint a4)
: object<java::util::Date>(
	call_new_object<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(2),
		java::util::Date::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1, a2, a3, a4)
)
{
}



java::util::Date::Date(jint a0, jint a1, jint a2, jint a3, jint a4, jint a5)
: object<java::util::Date>(
	call_new_object<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(3),
		java::util::Date::J2CPP_METHOD_SIGNATURE(3)
	>(a0, a1, a2, a3, a4, a5)
)
{
}



java::util::Date::Date(jlong a0)
: object<java::util::Date>(
	call_new_object<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(4),
		java::util::Date::J2CPP_METHOD_SIGNATURE(4)
	>(a0)
)
{
}



java::util::Date::Date(local_ref< java::lang::String > const &a0)
: object<java::util::Date>(
	call_new_object<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(5),
		java::util::Date::J2CPP_METHOD_SIGNATURE(5)
	>(a0)
)
{
}


jboolean java::util::Date::after(local_ref< java::util::Date > const &a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(6),
		java::util::Date::J2CPP_METHOD_SIGNATURE(6), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::util::Date::before(local_ref< java::util::Date > const &a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(7),
		java::util::Date::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::lang::Object > java::util::Date::clone()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(8),
		java::util::Date::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

jint java::util::Date::compareTo(local_ref< java::util::Date > const &a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(9),
		java::util::Date::J2CPP_METHOD_SIGNATURE(9), 
		jint
	>(get_jobject(), a0);
}

jboolean java::util::Date::equals(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(10),
		java::util::Date::J2CPP_METHOD_SIGNATURE(10), 
		jboolean
	>(get_jobject(), a0);
}

jint java::util::Date::getDate()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(11),
		java::util::Date::J2CPP_METHOD_SIGNATURE(11), 
		jint
	>(get_jobject());
}

jint java::util::Date::getDay()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(12),
		java::util::Date::J2CPP_METHOD_SIGNATURE(12), 
		jint
	>(get_jobject());
}

jint java::util::Date::getHours()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(13),
		java::util::Date::J2CPP_METHOD_SIGNATURE(13), 
		jint
	>(get_jobject());
}

jint java::util::Date::getMinutes()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(14),
		java::util::Date::J2CPP_METHOD_SIGNATURE(14), 
		jint
	>(get_jobject());
}

jint java::util::Date::getMonth()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(15),
		java::util::Date::J2CPP_METHOD_SIGNATURE(15), 
		jint
	>(get_jobject());
}

jint java::util::Date::getSeconds()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(16),
		java::util::Date::J2CPP_METHOD_SIGNATURE(16), 
		jint
	>(get_jobject());
}

jlong java::util::Date::getTime()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(17),
		java::util::Date::J2CPP_METHOD_SIGNATURE(17), 
		jlong
	>(get_jobject());
}

jint java::util::Date::getTimezoneOffset()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(18),
		java::util::Date::J2CPP_METHOD_SIGNATURE(18), 
		jint
	>(get_jobject());
}

jint java::util::Date::getYear()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(19),
		java::util::Date::J2CPP_METHOD_SIGNATURE(19), 
		jint
	>(get_jobject());
}

jint java::util::Date::hashCode()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(20),
		java::util::Date::J2CPP_METHOD_SIGNATURE(20), 
		jint
	>(get_jobject());
}

jlong java::util::Date::parse(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(21),
		java::util::Date::J2CPP_METHOD_SIGNATURE(21), 
		jlong
	>(a0);
}

void java::util::Date::setDate(jint a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(22),
		java::util::Date::J2CPP_METHOD_SIGNATURE(22), 
		void
	>(get_jobject(), a0);
}

void java::util::Date::setHours(jint a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(23),
		java::util::Date::J2CPP_METHOD_SIGNATURE(23), 
		void
	>(get_jobject(), a0);
}

void java::util::Date::setMinutes(jint a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(24),
		java::util::Date::J2CPP_METHOD_SIGNATURE(24), 
		void
	>(get_jobject(), a0);
}

void java::util::Date::setMonth(jint a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(25),
		java::util::Date::J2CPP_METHOD_SIGNATURE(25), 
		void
	>(get_jobject(), a0);
}

void java::util::Date::setSeconds(jint a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(26),
		java::util::Date::J2CPP_METHOD_SIGNATURE(26), 
		void
	>(get_jobject(), a0);
}

void java::util::Date::setTime(jlong a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(27),
		java::util::Date::J2CPP_METHOD_SIGNATURE(27), 
		void
	>(get_jobject(), a0);
}

void java::util::Date::setYear(jint a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(28),
		java::util::Date::J2CPP_METHOD_SIGNATURE(28), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::util::Date::toGMTString()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(29),
		java::util::Date::J2CPP_METHOD_SIGNATURE(29), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::util::Date::toLocaleString()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(30),
		java::util::Date::J2CPP_METHOD_SIGNATURE(30), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > java::util::Date::toString()
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(31),
		java::util::Date::J2CPP_METHOD_SIGNATURE(31), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jlong java::util::Date::UTC(jint a0, jint a1, jint a2, jint a3, jint a4, jint a5)
{
	return call_static_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(32),
		java::util::Date::J2CPP_METHOD_SIGNATURE(32), 
		jlong
	>(a0, a1, a2, a3, a4, a5);
}

jint java::util::Date::compareTo(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::Date::J2CPP_CLASS_NAME,
		java::util::Date::J2CPP_METHOD_NAME(33),
		java::util::Date::J2CPP_METHOD_SIGNATURE(33), 
		jint
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(java::util::Date,"java/util/Date")
J2CPP_DEFINE_METHOD(java::util::Date,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::util::Date,1,"<init>","(III)V")
J2CPP_DEFINE_METHOD(java::util::Date,2,"<init>","(IIIII)V")
J2CPP_DEFINE_METHOD(java::util::Date,3,"<init>","(IIIIII)V")
J2CPP_DEFINE_METHOD(java::util::Date,4,"<init>","(J)V")
J2CPP_DEFINE_METHOD(java::util::Date,5,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::Date,6,"after","(Ljava/util/Date;)Z")
J2CPP_DEFINE_METHOD(java::util::Date,7,"before","(Ljava/util/Date;)Z")
J2CPP_DEFINE_METHOD(java::util::Date,8,"clone","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::Date,9,"compareTo","(Ljava/util/Date;)I")
J2CPP_DEFINE_METHOD(java::util::Date,10,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::Date,11,"getDate","()I")
J2CPP_DEFINE_METHOD(java::util::Date,12,"getDay","()I")
J2CPP_DEFINE_METHOD(java::util::Date,13,"getHours","()I")
J2CPP_DEFINE_METHOD(java::util::Date,14,"getMinutes","()I")
J2CPP_DEFINE_METHOD(java::util::Date,15,"getMonth","()I")
J2CPP_DEFINE_METHOD(java::util::Date,16,"getSeconds","()I")
J2CPP_DEFINE_METHOD(java::util::Date,17,"getTime","()J")
J2CPP_DEFINE_METHOD(java::util::Date,18,"getTimezoneOffset","()I")
J2CPP_DEFINE_METHOD(java::util::Date,19,"getYear","()I")
J2CPP_DEFINE_METHOD(java::util::Date,20,"hashCode","()I")
J2CPP_DEFINE_METHOD(java::util::Date,21,"parse","(Ljava/lang/String;)J")
J2CPP_DEFINE_METHOD(java::util::Date,22,"setDate","(I)V")
J2CPP_DEFINE_METHOD(java::util::Date,23,"setHours","(I)V")
J2CPP_DEFINE_METHOD(java::util::Date,24,"setMinutes","(I)V")
J2CPP_DEFINE_METHOD(java::util::Date,25,"setMonth","(I)V")
J2CPP_DEFINE_METHOD(java::util::Date,26,"setSeconds","(I)V")
J2CPP_DEFINE_METHOD(java::util::Date,27,"setTime","(J)V")
J2CPP_DEFINE_METHOD(java::util::Date,28,"setYear","(I)V")
J2CPP_DEFINE_METHOD(java::util::Date,29,"toGMTString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Date,30,"toLocaleString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Date,31,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Date,32,"UTC","(IIIIII)J")
J2CPP_DEFINE_METHOD(java::util::Date,33,"compareTo","(Ljava/lang/Object;)I")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_DATE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
