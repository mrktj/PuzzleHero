/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.util.GregorianCalendar
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_GREGORIANCALENDAR_HPP_DECL
#define J2CPP_JAVA_UTIL_GREGORIANCALENDAR_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Comparable; } } }
namespace j2cpp { namespace java { namespace lang { class Cloneable; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Locale; } } }
namespace j2cpp { namespace java { namespace util { class TimeZone; } } }
namespace j2cpp { namespace java { namespace util { class Date; } } }
namespace j2cpp { namespace java { namespace util { class Calendar; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Cloneable.hpp>
#include <java/lang/Comparable.hpp>
#include <java/lang/Object.hpp>
#include <java/util/Calendar.hpp>
#include <java/util/Date.hpp>
#include <java/util/Locale.hpp>
#include <java/util/TimeZone.hpp>


namespace j2cpp {

namespace java { namespace util {

	class GregorianCalendar;
	class GregorianCalendar
		: public object<GregorianCalendar>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)

		explicit GregorianCalendar(jobject jobj)
		: object<GregorianCalendar>(jobj)
		{
		}

		operator local_ref<java::lang::Comparable>() const;
		operator local_ref<java::lang::Cloneable>() const;
		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::util::Calendar>() const;
		operator local_ref<java::io::Serializable>() const;


		GregorianCalendar();
		GregorianCalendar(jint, jint, jint);
		GregorianCalendar(jint, jint, jint, jint, jint);
		GregorianCalendar(jint, jint, jint, jint, jint, jint);
		GregorianCalendar(local_ref< java::util::Locale > const&);
		GregorianCalendar(local_ref< java::util::TimeZone > const&);
		GregorianCalendar(local_ref< java::util::TimeZone > const&, local_ref< java::util::Locale > const&);
		void add(jint, jint);
		local_ref< java::lang::Object > clone();
		jboolean equals(local_ref< java::lang::Object >  const&);
		jint getActualMaximum(jint);
		jint getActualMinimum(jint);
		jint getGreatestMinimum(jint);
		local_ref< java::util::Date > getGregorianChange();
		jint getLeastMaximum(jint);
		jint getMaximum(jint);
		jint getMinimum(jint);
		jint hashCode();
		jboolean isLeapYear(jint);
		void roll(jint, jint);
		void roll(jint, jboolean);
		void setGregorianChange(local_ref< java::util::Date >  const&);
		void setFirstDayOfWeek(jint);
		void setMinimalDaysInFirstWeek(jint);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > BC;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > AD;
	}; //class GregorianCalendar

} //namespace util
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_GREGORIANCALENDAR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_GREGORIANCALENDAR_HPP_IMPL
#define J2CPP_JAVA_UTIL_GREGORIANCALENDAR_HPP_IMPL

namespace j2cpp {



java::util::GregorianCalendar::operator local_ref<java::lang::Comparable>() const
{
	return local_ref<java::lang::Comparable>(get_jobject());
}

java::util::GregorianCalendar::operator local_ref<java::lang::Cloneable>() const
{
	return local_ref<java::lang::Cloneable>(get_jobject());
}

java::util::GregorianCalendar::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::util::GregorianCalendar::operator local_ref<java::util::Calendar>() const
{
	return local_ref<java::util::Calendar>(get_jobject());
}

java::util::GregorianCalendar::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


java::util::GregorianCalendar::GregorianCalendar()
: object<java::util::GregorianCalendar>(
	call_new_object<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(0),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



java::util::GregorianCalendar::GregorianCalendar(jint a0, jint a1, jint a2)
: object<java::util::GregorianCalendar>(
	call_new_object<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(1),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1, a2)
)
{
}



java::util::GregorianCalendar::GregorianCalendar(jint a0, jint a1, jint a2, jint a3, jint a4)
: object<java::util::GregorianCalendar>(
	call_new_object<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(2),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1, a2, a3, a4)
)
{
}



java::util::GregorianCalendar::GregorianCalendar(jint a0, jint a1, jint a2, jint a3, jint a4, jint a5)
: object<java::util::GregorianCalendar>(
	call_new_object<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(3),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(3)
	>(a0, a1, a2, a3, a4, a5)
)
{
}



java::util::GregorianCalendar::GregorianCalendar(local_ref< java::util::Locale > const &a0)
: object<java::util::GregorianCalendar>(
	call_new_object<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(4),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(4)
	>(a0)
)
{
}



java::util::GregorianCalendar::GregorianCalendar(local_ref< java::util::TimeZone > const &a0)
: object<java::util::GregorianCalendar>(
	call_new_object<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(5),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(5)
	>(a0)
)
{
}



java::util::GregorianCalendar::GregorianCalendar(local_ref< java::util::TimeZone > const &a0, local_ref< java::util::Locale > const &a1)
: object<java::util::GregorianCalendar>(
	call_new_object<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(6),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(6)
	>(a0, a1)
)
{
}


void java::util::GregorianCalendar::add(jint a0, jint a1)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(7),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::Object > java::util::GregorianCalendar::clone()
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(8),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::lang::Object >
	>(get_jobject());
}



jboolean java::util::GregorianCalendar::equals(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(11),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(11), 
		jboolean
	>(get_jobject(), a0);
}

jint java::util::GregorianCalendar::getActualMaximum(jint a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(12),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(12), 
		jint
	>(get_jobject(), a0);
}

jint java::util::GregorianCalendar::getActualMinimum(jint a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(13),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(13), 
		jint
	>(get_jobject(), a0);
}

jint java::util::GregorianCalendar::getGreatestMinimum(jint a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(14),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(14), 
		jint
	>(get_jobject(), a0);
}

local_ref< java::util::Date > java::util::GregorianCalendar::getGregorianChange()
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(15),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(15), 
		local_ref< java::util::Date >
	>(get_jobject());
}

jint java::util::GregorianCalendar::getLeastMaximum(jint a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(16),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(16), 
		jint
	>(get_jobject(), a0);
}

jint java::util::GregorianCalendar::getMaximum(jint a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(17),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(17), 
		jint
	>(get_jobject(), a0);
}

jint java::util::GregorianCalendar::getMinimum(jint a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(18),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(18), 
		jint
	>(get_jobject(), a0);
}

jint java::util::GregorianCalendar::hashCode()
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(19),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(19), 
		jint
	>(get_jobject());
}

jboolean java::util::GregorianCalendar::isLeapYear(jint a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(20),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(20), 
		jboolean
	>(get_jobject(), a0);
}

void java::util::GregorianCalendar::roll(jint a0, jint a1)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(21),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(21), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::GregorianCalendar::roll(jint a0, jboolean a1)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(22),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(22), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::GregorianCalendar::setGregorianChange(local_ref< java::util::Date > const &a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(23),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(23), 
		void
	>(get_jobject(), a0);
}

void java::util::GregorianCalendar::setFirstDayOfWeek(jint a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(24),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(24), 
		void
	>(get_jobject(), a0);
}

void java::util::GregorianCalendar::setMinimalDaysInFirstWeek(jint a0)
{
	return call_method<
		java::util::GregorianCalendar::J2CPP_CLASS_NAME,
		java::util::GregorianCalendar::J2CPP_METHOD_NAME(25),
		java::util::GregorianCalendar::J2CPP_METHOD_SIGNATURE(25), 
		void
	>(get_jobject(), a0);
}


static_field<
	java::util::GregorianCalendar::J2CPP_CLASS_NAME,
	java::util::GregorianCalendar::J2CPP_FIELD_NAME(0),
	java::util::GregorianCalendar::J2CPP_FIELD_SIGNATURE(0),
	jint
> java::util::GregorianCalendar::BC;

static_field<
	java::util::GregorianCalendar::J2CPP_CLASS_NAME,
	java::util::GregorianCalendar::J2CPP_FIELD_NAME(1),
	java::util::GregorianCalendar::J2CPP_FIELD_SIGNATURE(1),
	jint
> java::util::GregorianCalendar::AD;


J2CPP_DEFINE_CLASS(java::util::GregorianCalendar,"java/util/GregorianCalendar")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,1,"<init>","(III)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,2,"<init>","(IIIII)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,3,"<init>","(IIIIII)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,4,"<init>","(Ljava/util/Locale;)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,5,"<init>","(Ljava/util/TimeZone;)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,6,"<init>","(Ljava/util/TimeZone;Ljava/util/Locale;)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,7,"add","(II)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,8,"clone","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,9,"computeFields","()V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,10,"computeTime","()V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,11,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,12,"getActualMaximum","(I)I")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,13,"getActualMinimum","(I)I")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,14,"getGreatestMinimum","(I)I")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,15,"getGregorianChange","()Ljava/util/Date;")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,16,"getLeastMaximum","(I)I")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,17,"getMaximum","(I)I")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,18,"getMinimum","(I)I")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,19,"hashCode","()I")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,20,"isLeapYear","(I)Z")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,21,"roll","(II)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,22,"roll","(IZ)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,23,"setGregorianChange","(Ljava/util/Date;)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,24,"setFirstDayOfWeek","(I)V")
J2CPP_DEFINE_METHOD(java::util::GregorianCalendar,25,"setMinimalDaysInFirstWeek","(I)V")
J2CPP_DEFINE_FIELD(java::util::GregorianCalendar,0,"BC","I")
J2CPP_DEFINE_FIELD(java::util::GregorianCalendar,1,"AD","I")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_GREGORIANCALENDAR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
