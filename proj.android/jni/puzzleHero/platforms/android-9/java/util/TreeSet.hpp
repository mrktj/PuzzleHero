/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.util.TreeSet
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_TREESET_HPP_DECL
#define J2CPP_JAVA_UTIL_TREESET_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Cloneable; } } }
namespace j2cpp { namespace java { namespace lang { class Iterable; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class SortedSet; } } }
namespace j2cpp { namespace java { namespace util { class Iterator; } } }
namespace j2cpp { namespace java { namespace util { class NavigableSet; } } }
namespace j2cpp { namespace java { namespace util { class Collection; } } }
namespace j2cpp { namespace java { namespace util { class Comparator; } } }
namespace j2cpp { namespace java { namespace util { class AbstractCollection; } } }
namespace j2cpp { namespace java { namespace util { class AbstractSet; } } }
namespace j2cpp { namespace java { namespace util { class Set; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Cloneable.hpp>
#include <java/lang/Iterable.hpp>
#include <java/lang/Object.hpp>
#include <java/util/AbstractCollection.hpp>
#include <java/util/AbstractSet.hpp>
#include <java/util/Collection.hpp>
#include <java/util/Comparator.hpp>
#include <java/util/Iterator.hpp>
#include <java/util/NavigableSet.hpp>
#include <java/util/Set.hpp>
#include <java/util/SortedSet.hpp>


namespace j2cpp {

namespace java { namespace util {

	class TreeSet;
	class TreeSet
		: public object<TreeSet>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)

		explicit TreeSet(jobject jobj)
		: object<TreeSet>(jobj)
		{
		}

		operator local_ref<java::lang::Cloneable>() const;
		operator local_ref<java::lang::Iterable>() const;
		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::util::SortedSet>() const;
		operator local_ref<java::util::NavigableSet>() const;
		operator local_ref<java::util::Collection>() const;
		operator local_ref<java::util::AbstractCollection>() const;
		operator local_ref<java::util::AbstractSet>() const;
		operator local_ref<java::util::Set>() const;
		operator local_ref<java::io::Serializable>() const;


		TreeSet();
		TreeSet(local_ref< java::util::Collection > const&);
		TreeSet(local_ref< java::util::Comparator > const&);
		TreeSet(local_ref< java::util::SortedSet > const&);
		jboolean add(local_ref< java::lang::Object >  const&);
		jboolean addAll(local_ref< java::util::Collection >  const&);
		void clear();
		local_ref< java::lang::Object > clone();
		local_ref< java::util::Comparator > comparator();
		jboolean contains(local_ref< java::lang::Object >  const&);
		jboolean isEmpty();
		local_ref< java::util::Iterator > iterator();
		local_ref< java::util::Iterator > descendingIterator();
		jboolean remove(local_ref< java::lang::Object >  const&);
		jint size();
		local_ref< java::lang::Object > first();
		local_ref< java::lang::Object > last();
		local_ref< java::lang::Object > pollFirst();
		local_ref< java::lang::Object > pollLast();
		local_ref< java::lang::Object > higher(local_ref< java::lang::Object >  const&);
		local_ref< java::lang::Object > lower(local_ref< java::lang::Object >  const&);
		local_ref< java::lang::Object > ceiling(local_ref< java::lang::Object >  const&);
		local_ref< java::lang::Object > floor(local_ref< java::lang::Object >  const&);
		local_ref< java::util::NavigableSet > descendingSet();
		local_ref< java::util::NavigableSet > subSet(local_ref< java::lang::Object >  const&, jboolean, local_ref< java::lang::Object >  const&, jboolean);
		local_ref< java::util::NavigableSet > headSet(local_ref< java::lang::Object >  const&, jboolean);
		local_ref< java::util::NavigableSet > tailSet(local_ref< java::lang::Object >  const&, jboolean);
		local_ref< java::util::SortedSet > subSet(local_ref< java::lang::Object >  const&, local_ref< java::lang::Object >  const&);
		local_ref< java::util::SortedSet > headSet(local_ref< java::lang::Object >  const&);
		local_ref< java::util::SortedSet > tailSet(local_ref< java::lang::Object >  const&);
	}; //class TreeSet

} //namespace util
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_TREESET_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_TREESET_HPP_IMPL
#define J2CPP_JAVA_UTIL_TREESET_HPP_IMPL

namespace j2cpp {



java::util::TreeSet::operator local_ref<java::lang::Cloneable>() const
{
	return local_ref<java::lang::Cloneable>(get_jobject());
}

java::util::TreeSet::operator local_ref<java::lang::Iterable>() const
{
	return local_ref<java::lang::Iterable>(get_jobject());
}

java::util::TreeSet::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::util::TreeSet::operator local_ref<java::util::SortedSet>() const
{
	return local_ref<java::util::SortedSet>(get_jobject());
}

java::util::TreeSet::operator local_ref<java::util::NavigableSet>() const
{
	return local_ref<java::util::NavigableSet>(get_jobject());
}

java::util::TreeSet::operator local_ref<java::util::Collection>() const
{
	return local_ref<java::util::Collection>(get_jobject());
}

java::util::TreeSet::operator local_ref<java::util::AbstractCollection>() const
{
	return local_ref<java::util::AbstractCollection>(get_jobject());
}

java::util::TreeSet::operator local_ref<java::util::AbstractSet>() const
{
	return local_ref<java::util::AbstractSet>(get_jobject());
}

java::util::TreeSet::operator local_ref<java::util::Set>() const
{
	return local_ref<java::util::Set>(get_jobject());
}

java::util::TreeSet::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


java::util::TreeSet::TreeSet()
: object<java::util::TreeSet>(
	call_new_object<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(0),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



java::util::TreeSet::TreeSet(local_ref< java::util::Collection > const &a0)
: object<java::util::TreeSet>(
	call_new_object<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(1),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



java::util::TreeSet::TreeSet(local_ref< java::util::Comparator > const &a0)
: object<java::util::TreeSet>(
	call_new_object<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(2),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(2)
	>(a0)
)
{
}



java::util::TreeSet::TreeSet(local_ref< java::util::SortedSet > const &a0)
: object<java::util::TreeSet>(
	call_new_object<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(3),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(3)
	>(a0)
)
{
}


jboolean java::util::TreeSet::add(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(4),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::util::TreeSet::addAll(local_ref< java::util::Collection > const &a0)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(5),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>(get_jobject(), a0);
}

void java::util::TreeSet::clear()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(6),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::TreeSet::clone()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(7),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::util::Comparator > java::util::TreeSet::comparator()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(8),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::util::Comparator >
	>(get_jobject());
}

jboolean java::util::TreeSet::contains(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(9),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::util::TreeSet::isEmpty()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(10),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(10), 
		jboolean
	>(get_jobject());
}

local_ref< java::util::Iterator > java::util::TreeSet::iterator()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(11),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

local_ref< java::util::Iterator > java::util::TreeSet::descendingIterator()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(12),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

jboolean java::util::TreeSet::remove(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(13),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(get_jobject(), a0);
}

jint java::util::TreeSet::size()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(14),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(14), 
		jint
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::TreeSet::first()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(15),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(15), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::TreeSet::last()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(16),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::TreeSet::pollFirst()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(17),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(17), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::TreeSet::pollLast()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(18),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(18), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::TreeSet::higher(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(19),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(19), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

local_ref< java::lang::Object > java::util::TreeSet::lower(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(20),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(20), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

local_ref< java::lang::Object > java::util::TreeSet::ceiling(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(21),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(21), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

local_ref< java::lang::Object > java::util::TreeSet::floor(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(22),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(22), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

local_ref< java::util::NavigableSet > java::util::TreeSet::descendingSet()
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(23),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(23), 
		local_ref< java::util::NavigableSet >
	>(get_jobject());
}

local_ref< java::util::NavigableSet > java::util::TreeSet::subSet(local_ref< java::lang::Object > const &a0, jboolean a1, local_ref< java::lang::Object > const &a2, jboolean a3)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(24),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(24), 
		local_ref< java::util::NavigableSet >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::util::NavigableSet > java::util::TreeSet::headSet(local_ref< java::lang::Object > const &a0, jboolean a1)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(25),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(25), 
		local_ref< java::util::NavigableSet >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::NavigableSet > java::util::TreeSet::tailSet(local_ref< java::lang::Object > const &a0, jboolean a1)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(26),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(26), 
		local_ref< java::util::NavigableSet >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::SortedSet > java::util::TreeSet::subSet(local_ref< java::lang::Object > const &a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(27),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(27), 
		local_ref< java::util::SortedSet >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::SortedSet > java::util::TreeSet::headSet(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(28),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(28), 
		local_ref< java::util::SortedSet >
	>(get_jobject(), a0);
}

local_ref< java::util::SortedSet > java::util::TreeSet::tailSet(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::TreeSet::J2CPP_CLASS_NAME,
		java::util::TreeSet::J2CPP_METHOD_NAME(29),
		java::util::TreeSet::J2CPP_METHOD_SIGNATURE(29), 
		local_ref< java::util::SortedSet >
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(java::util::TreeSet,"java/util/TreeSet")
J2CPP_DEFINE_METHOD(java::util::TreeSet,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::util::TreeSet,1,"<init>","(Ljava/util/Collection;)V")
J2CPP_DEFINE_METHOD(java::util::TreeSet,2,"<init>","(Ljava/util/Comparator;)V")
J2CPP_DEFINE_METHOD(java::util::TreeSet,3,"<init>","(Ljava/util/SortedSet;)V")
J2CPP_DEFINE_METHOD(java::util::TreeSet,4,"add","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::TreeSet,5,"addAll","(Ljava/util/Collection;)Z")
J2CPP_DEFINE_METHOD(java::util::TreeSet,6,"clear","()V")
J2CPP_DEFINE_METHOD(java::util::TreeSet,7,"clone","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,8,"comparator","()Ljava/util/Comparator;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,9,"contains","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::TreeSet,10,"isEmpty","()Z")
J2CPP_DEFINE_METHOD(java::util::TreeSet,11,"iterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,12,"descendingIterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,13,"remove","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::TreeSet,14,"size","()I")
J2CPP_DEFINE_METHOD(java::util::TreeSet,15,"first","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,16,"last","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,17,"pollFirst","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,18,"pollLast","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,19,"higher","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,20,"lower","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,21,"ceiling","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,22,"floor","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,23,"descendingSet","()Ljava/util/NavigableSet;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,24,"subSet","(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,25,"headSet","(Ljava/lang/Object;Z)Ljava/util/NavigableSet;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,26,"tailSet","(Ljava/lang/Object;Z)Ljava/util/NavigableSet;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,27,"subSet","(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,28,"headSet","(Ljava/lang/Object;)Ljava/util/SortedSet;")
J2CPP_DEFINE_METHOD(java::util::TreeSet,29,"tailSet","(Ljava/lang/Object;)Ljava/util/SortedSet;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_TREESET_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
