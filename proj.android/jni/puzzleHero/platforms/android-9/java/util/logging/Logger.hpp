/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.util.logging.Logger
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_LOGGING_LOGGER_HPP_DECL
#define J2CPP_JAVA_UTIL_LOGGING_LOGGER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Throwable; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class ResourceBundle; } } }
namespace j2cpp { namespace java { namespace util { namespace logging { class Handler; } } } }
namespace j2cpp { namespace java { namespace util { namespace logging { class LogRecord; } } } }
namespace j2cpp { namespace java { namespace util { namespace logging { class Filter; } } } }
namespace j2cpp { namespace java { namespace util { namespace logging { class Level; } } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/lang/Throwable.hpp>
#include <java/util/ResourceBundle.hpp>
#include <java/util/logging/Filter.hpp>
#include <java/util/logging/Handler.hpp>
#include <java/util/logging/Level.hpp>
#include <java/util/logging/LogRecord.hpp>


namespace j2cpp {

namespace java { namespace util { namespace logging {

	class Logger;
	class Logger
		: public object<Logger>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)

		explicit Logger(jobject jobj)
		: object<Logger>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static local_ref< java::util::logging::Logger > getAnonymousLogger();
		static local_ref< java::util::logging::Logger > getAnonymousLogger(local_ref< java::lang::String >  const&);
		static local_ref< java::util::logging::Logger > getLogger(local_ref< java::lang::String >  const&);
		static local_ref< java::util::logging::Logger > getLogger(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void addHandler(local_ref< java::util::logging::Handler >  const&);
		local_ref< array< local_ref< java::util::logging::Handler >, 1> > getHandlers();
		void removeHandler(local_ref< java::util::logging::Handler >  const&);
		local_ref< java::util::logging::Filter > getFilter();
		void setFilter(local_ref< java::util::logging::Filter >  const&);
		local_ref< java::util::logging::Level > getLevel();
		void setLevel(local_ref< java::util::logging::Level >  const&);
		jboolean getUseParentHandlers();
		void setUseParentHandlers(jboolean);
		local_ref< java::util::logging::Logger > getParent();
		void setParent(local_ref< java::util::logging::Logger >  const&);
		local_ref< java::lang::String > getName();
		local_ref< java::util::ResourceBundle > getResourceBundle();
		local_ref< java::lang::String > getResourceBundleName();
		jboolean isLoggable(local_ref< java::util::logging::Level >  const&);
		void entering(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void entering(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::Object >  const&);
		void entering(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		void exiting(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void exiting(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::Object >  const&);
		void throwing(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::Throwable >  const&);
		void severe(local_ref< java::lang::String >  const&);
		void warning(local_ref< java::lang::String >  const&);
		void info(local_ref< java::lang::String >  const&);
		void config(local_ref< java::lang::String >  const&);
		void fine(local_ref< java::lang::String >  const&);
		void finer(local_ref< java::lang::String >  const&);
		void finest(local_ref< java::lang::String >  const&);
		void log(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&);
		void log(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::Object >  const&);
		void log(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		void log(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::Throwable >  const&);
		void log(local_ref< java::util::logging::LogRecord >  const&);
		void logp(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void logp(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::Object >  const&);
		void logp(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		void logp(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::Throwable >  const&);
		void logrb(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void logrb(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::Object >  const&);
		void logrb(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		void logrb(local_ref< java::util::logging::Level >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::Throwable >  const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::lang::String > > GLOBAL_LOGGER_NAME;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< java::util::logging::Logger > > global;
	}; //class Logger

} //namespace logging
} //namespace util
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_LOGGING_LOGGER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_LOGGING_LOGGER_HPP_IMPL
#define J2CPP_JAVA_UTIL_LOGGING_LOGGER_HPP_IMPL

namespace j2cpp {



java::util::logging::Logger::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< java::util::logging::Logger > java::util::logging::Logger::getAnonymousLogger()
{
	return call_static_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(1),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::util::logging::Logger >
	>();
}

local_ref< java::util::logging::Logger > java::util::logging::Logger::getAnonymousLogger(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(2),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::util::logging::Logger >
	>(a0);
}

local_ref< java::util::logging::Logger > java::util::logging::Logger::getLogger(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(3),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::util::logging::Logger >
	>(a0);
}

local_ref< java::util::logging::Logger > java::util::logging::Logger::getLogger(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(4),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::util::logging::Logger >
	>(a0, a1);
}

void java::util::logging::Logger::addHandler(local_ref< java::util::logging::Handler > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(5),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

local_ref< array< local_ref< java::util::logging::Handler >, 1> > java::util::logging::Logger::getHandlers()
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(6),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< array< local_ref< java::util::logging::Handler >, 1> >
	>(get_jobject());
}

void java::util::logging::Logger::removeHandler(local_ref< java::util::logging::Handler > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(7),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0);
}

local_ref< java::util::logging::Filter > java::util::logging::Logger::getFilter()
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(8),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::util::logging::Filter >
	>(get_jobject());
}

void java::util::logging::Logger::setFilter(local_ref< java::util::logging::Filter > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(9),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject(), a0);
}

local_ref< java::util::logging::Level > java::util::logging::Logger::getLevel()
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(10),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::util::logging::Level >
	>(get_jobject());
}

void java::util::logging::Logger::setLevel(local_ref< java::util::logging::Level > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(11),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0);
}

jboolean java::util::logging::Logger::getUseParentHandlers()
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(12),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(12), 
		jboolean
	>(get_jobject());
}

void java::util::logging::Logger::setUseParentHandlers(jboolean a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(13),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(13), 
		void
	>(get_jobject(), a0);
}

local_ref< java::util::logging::Logger > java::util::logging::Logger::getParent()
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(14),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(14), 
		local_ref< java::util::logging::Logger >
	>(get_jobject());
}

void java::util::logging::Logger::setParent(local_ref< java::util::logging::Logger > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(15),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(15), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::String > java::util::logging::Logger::getName()
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(16),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::util::ResourceBundle > java::util::logging::Logger::getResourceBundle()
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(17),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(17), 
		local_ref< java::util::ResourceBundle >
	>(get_jobject());
}

local_ref< java::lang::String > java::util::logging::Logger::getResourceBundleName()
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(18),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(18), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jboolean java::util::logging::Logger::isLoggable(local_ref< java::util::logging::Level > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(19),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(19), 
		jboolean
	>(get_jobject(), a0);
}

void java::util::logging::Logger::entering(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(20),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(20), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::logging::Logger::entering(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::Object > const &a2)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(21),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(21), 
		void
	>(get_jobject(), a0, a1, a2);
}

void java::util::logging::Logger::entering(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< array< local_ref< java::lang::Object >, 1> > const &a2)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(22),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(22), 
		void
	>(get_jobject(), a0, a1, a2);
}

void java::util::logging::Logger::exiting(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(23),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(23), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::logging::Logger::exiting(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::Object > const &a2)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(24),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(24), 
		void
	>(get_jobject(), a0, a1, a2);
}

void java::util::logging::Logger::throwing(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::Throwable > const &a2)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(25),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(25), 
		void
	>(get_jobject(), a0, a1, a2);
}

void java::util::logging::Logger::severe(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(26),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(26), 
		void
	>(get_jobject(), a0);
}

void java::util::logging::Logger::warning(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(27),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(27), 
		void
	>(get_jobject(), a0);
}

void java::util::logging::Logger::info(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(28),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(28), 
		void
	>(get_jobject(), a0);
}

void java::util::logging::Logger::config(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(29),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(29), 
		void
	>(get_jobject(), a0);
}

void java::util::logging::Logger::fine(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(30),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(30), 
		void
	>(get_jobject(), a0);
}

void java::util::logging::Logger::finer(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(31),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(31), 
		void
	>(get_jobject(), a0);
}

void java::util::logging::Logger::finest(local_ref< java::lang::String > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(32),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(32), 
		void
	>(get_jobject(), a0);
}

void java::util::logging::Logger::log(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(33),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(33), 
		void
	>(get_jobject(), a0, a1);
}

void java::util::logging::Logger::log(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::Object > const &a2)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(34),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(34), 
		void
	>(get_jobject(), a0, a1, a2);
}

void java::util::logging::Logger::log(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< array< local_ref< java::lang::Object >, 1> > const &a2)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(35),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(35), 
		void
	>(get_jobject(), a0, a1, a2);
}

void java::util::logging::Logger::log(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::Throwable > const &a2)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(36),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(36), 
		void
	>(get_jobject(), a0, a1, a2);
}

void java::util::logging::Logger::log(local_ref< java::util::logging::LogRecord > const &a0)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(37),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(37), 
		void
	>(get_jobject(), a0);
}

void java::util::logging::Logger::logp(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(38),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(38), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

void java::util::logging::Logger::logp(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::Object > const &a4)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(39),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(39), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4);
}

void java::util::logging::Logger::logp(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< array< local_ref< java::lang::Object >, 1> > const &a4)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(40),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(40), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4);
}

void java::util::logging::Logger::logp(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::Throwable > const &a4)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(41),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(41), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4);
}

void java::util::logging::Logger::logrb(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::String > const &a4)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(42),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(42), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4);
}

void java::util::logging::Logger::logrb(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::String > const &a4, local_ref< java::lang::Object > const &a5)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(43),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(43), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4, a5);
}

void java::util::logging::Logger::logrb(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::String > const &a4, local_ref< array< local_ref< java::lang::Object >, 1> > const &a5)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(44),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(44), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4, a5);
}

void java::util::logging::Logger::logrb(local_ref< java::util::logging::Level > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::String > const &a4, local_ref< java::lang::Throwable > const &a5)
{
	return call_method<
		java::util::logging::Logger::J2CPP_CLASS_NAME,
		java::util::logging::Logger::J2CPP_METHOD_NAME(45),
		java::util::logging::Logger::J2CPP_METHOD_SIGNATURE(45), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4, a5);
}



static_field<
	java::util::logging::Logger::J2CPP_CLASS_NAME,
	java::util::logging::Logger::J2CPP_FIELD_NAME(0),
	java::util::logging::Logger::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::lang::String >
> java::util::logging::Logger::GLOBAL_LOGGER_NAME;

static_field<
	java::util::logging::Logger::J2CPP_CLASS_NAME,
	java::util::logging::Logger::J2CPP_FIELD_NAME(1),
	java::util::logging::Logger::J2CPP_FIELD_SIGNATURE(1),
	local_ref< java::util::logging::Logger >
> java::util::logging::Logger::global;


J2CPP_DEFINE_CLASS(java::util::logging::Logger,"java/util/logging/Logger")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,0,"<init>","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,1,"getAnonymousLogger","()Ljava/util/logging/Logger;")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,2,"getAnonymousLogger","(Ljava/lang/String;)Ljava/util/logging/Logger;")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,3,"getLogger","(Ljava/lang/String;)Ljava/util/logging/Logger;")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,4,"getLogger","(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,5,"addHandler","(Ljava/util/logging/Handler;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,6,"getHandlers","()[java.util.logging.Handler")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,7,"removeHandler","(Ljava/util/logging/Handler;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,8,"getFilter","()Ljava/util/logging/Filter;")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,9,"setFilter","(Ljava/util/logging/Filter;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,10,"getLevel","()Ljava/util/logging/Level;")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,11,"setLevel","(Ljava/util/logging/Level;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,12,"getUseParentHandlers","()Z")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,13,"setUseParentHandlers","(Z)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,14,"getParent","()Ljava/util/logging/Logger;")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,15,"setParent","(Ljava/util/logging/Logger;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,16,"getName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,17,"getResourceBundle","()Ljava/util/ResourceBundle;")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,18,"getResourceBundleName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,19,"isLoggable","(Ljava/util/logging/Level;)Z")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,20,"entering","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,21,"entering","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,22,"entering","(Ljava/lang/String;Ljava/lang/String;[java.lang.Object)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,23,"exiting","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,24,"exiting","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,25,"throwing","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,26,"severe","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,27,"warning","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,28,"info","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,29,"config","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,30,"fine","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,31,"finer","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,32,"finest","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,33,"log","(Ljava/util/logging/Level;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,34,"log","(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,35,"log","(Ljava/util/logging/Level;Ljava/lang/String;[java.lang.Object)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,36,"log","(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,37,"log","(Ljava/util/logging/LogRecord;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,38,"logp","(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,39,"logp","(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,40,"logp","(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[java.lang.Object)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,41,"logp","(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,42,"logrb","(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,43,"logrb","(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,44,"logrb","(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[java.lang.Object)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,45,"logrb","(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V")
J2CPP_DEFINE_METHOD(java::util::logging::Logger,46,"<clinit>","()V")
J2CPP_DEFINE_FIELD(java::util::logging::Logger,0,"GLOBAL_LOGGER_NAME","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(java::util::logging::Logger,1,"global","Ljava/util/logging/Logger;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_LOGGING_LOGGER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
