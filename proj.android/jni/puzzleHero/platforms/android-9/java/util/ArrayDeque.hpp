/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.util.ArrayDeque
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_ARRAYDEQUE_HPP_DECL
#define J2CPP_JAVA_UTIL_ARRAYDEQUE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Cloneable; } } }
namespace j2cpp { namespace java { namespace lang { class Iterable; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Iterator; } } }
namespace j2cpp { namespace java { namespace util { class Queue; } } }
namespace j2cpp { namespace java { namespace util { class Collection; } } }
namespace j2cpp { namespace java { namespace util { class Deque; } } }
namespace j2cpp { namespace java { namespace util { class AbstractCollection; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Cloneable.hpp>
#include <java/lang/Iterable.hpp>
#include <java/lang/Object.hpp>
#include <java/util/AbstractCollection.hpp>
#include <java/util/Collection.hpp>
#include <java/util/Deque.hpp>
#include <java/util/Iterator.hpp>
#include <java/util/Queue.hpp>


namespace j2cpp {

namespace java { namespace util {

	class ArrayDeque;
	class ArrayDeque
		: public object<ArrayDeque>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)

		explicit ArrayDeque(jobject jobj)
		: object<ArrayDeque>(jobj)
		{
		}

		operator local_ref<java::lang::Cloneable>() const;
		operator local_ref<java::lang::Iterable>() const;
		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::util::Queue>() const;
		operator local_ref<java::util::Collection>() const;
		operator local_ref<java::util::Deque>() const;
		operator local_ref<java::util::AbstractCollection>() const;
		operator local_ref<java::io::Serializable>() const;


		ArrayDeque();
		ArrayDeque(jint);
		ArrayDeque(local_ref< java::util::Collection > const&);
		void addFirst(local_ref< java::lang::Object >  const&);
		void addLast(local_ref< java::lang::Object >  const&);
		jboolean offerFirst(local_ref< java::lang::Object >  const&);
		jboolean offerLast(local_ref< java::lang::Object >  const&);
		jboolean offer(local_ref< java::lang::Object >  const&);
		jboolean add(local_ref< java::lang::Object >  const&);
		void push(local_ref< java::lang::Object >  const&);
		local_ref< java::lang::Object > removeFirst();
		local_ref< java::lang::Object > remove();
		local_ref< java::lang::Object > pop();
		local_ref< java::lang::Object > removeLast();
		local_ref< java::lang::Object > pollFirst();
		local_ref< java::lang::Object > poll();
		local_ref< java::lang::Object > pollLast();
		local_ref< java::lang::Object > getFirst();
		local_ref< java::lang::Object > element();
		local_ref< java::lang::Object > getLast();
		local_ref< java::lang::Object > peekFirst();
		local_ref< java::lang::Object > peek();
		local_ref< java::lang::Object > peekLast();
		jboolean removeFirstOccurrence(local_ref< java::lang::Object >  const&);
		jboolean remove(local_ref< java::lang::Object >  const&);
		jboolean removeLastOccurrence(local_ref< java::lang::Object >  const&);
		jint size();
		jboolean isEmpty();
		jboolean contains(local_ref< java::lang::Object >  const&);
		void clear();
		local_ref< java::util::ArrayDeque > clone();
		local_ref< array< local_ref< java::lang::Object >, 1> > toArray();
		local_ref< array< local_ref< java::lang::Object >, 1> > toArray(local_ref< array< local_ref< java::lang::Object >, 1> >  const&);
		local_ref< java::util::Iterator > iterator();
		local_ref< java::util::Iterator > descendingIterator();
		local_ref< java::lang::Object > clone_1();
	}; //class ArrayDeque

} //namespace util
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_ARRAYDEQUE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_ARRAYDEQUE_HPP_IMPL
#define J2CPP_JAVA_UTIL_ARRAYDEQUE_HPP_IMPL

namespace j2cpp {



java::util::ArrayDeque::operator local_ref<java::lang::Cloneable>() const
{
	return local_ref<java::lang::Cloneable>(get_jobject());
}

java::util::ArrayDeque::operator local_ref<java::lang::Iterable>() const
{
	return local_ref<java::lang::Iterable>(get_jobject());
}

java::util::ArrayDeque::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::util::ArrayDeque::operator local_ref<java::util::Queue>() const
{
	return local_ref<java::util::Queue>(get_jobject());
}

java::util::ArrayDeque::operator local_ref<java::util::Collection>() const
{
	return local_ref<java::util::Collection>(get_jobject());
}

java::util::ArrayDeque::operator local_ref<java::util::Deque>() const
{
	return local_ref<java::util::Deque>(get_jobject());
}

java::util::ArrayDeque::operator local_ref<java::util::AbstractCollection>() const
{
	return local_ref<java::util::AbstractCollection>(get_jobject());
}

java::util::ArrayDeque::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


java::util::ArrayDeque::ArrayDeque()
: object<java::util::ArrayDeque>(
	call_new_object<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(0),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



java::util::ArrayDeque::ArrayDeque(jint a0)
: object<java::util::ArrayDeque>(
	call_new_object<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(1),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



java::util::ArrayDeque::ArrayDeque(local_ref< java::util::Collection > const &a0)
: object<java::util::ArrayDeque>(
	call_new_object<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(2),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(2)
	>(a0)
)
{
}


void java::util::ArrayDeque::addFirst(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(3),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

void java::util::ArrayDeque::addLast(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(4),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

jboolean java::util::ArrayDeque::offerFirst(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(5),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::util::ArrayDeque::offerLast(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(6),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(6), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::util::ArrayDeque::offer(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(7),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::util::ArrayDeque::add(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(8),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(8), 
		jboolean
	>(get_jobject(), a0);
}

void java::util::ArrayDeque::push(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(9),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::Object > java::util::ArrayDeque::removeFirst()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(10),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::remove()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(11),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::pop()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(12),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::removeLast()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(13),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(13), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::pollFirst()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(14),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(14), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::poll()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(15),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(15), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::pollLast()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(16),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::getFirst()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(17),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(17), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::element()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(18),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(18), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::getLast()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(19),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(19), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::peekFirst()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(20),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(20), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::peek()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(21),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(21), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::peekLast()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(22),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(22), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

jboolean java::util::ArrayDeque::removeFirstOccurrence(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(23),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(23), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::util::ArrayDeque::remove(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(24),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(24), 
		jboolean
	>(get_jobject(), a0);
}

jboolean java::util::ArrayDeque::removeLastOccurrence(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(25),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(25), 
		jboolean
	>(get_jobject(), a0);
}

jint java::util::ArrayDeque::size()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(26),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(26), 
		jint
	>(get_jobject());
}

jboolean java::util::ArrayDeque::isEmpty()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(27),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(27), 
		jboolean
	>(get_jobject());
}

jboolean java::util::ArrayDeque::contains(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(28),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(28), 
		jboolean
	>(get_jobject(), a0);
}

void java::util::ArrayDeque::clear()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(29),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(29), 
		void
	>(get_jobject());
}

local_ref< java::util::ArrayDeque > java::util::ArrayDeque::clone()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(30),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(30), 
		local_ref< java::util::ArrayDeque >
	>(get_jobject());
}

local_ref< array< local_ref< java::lang::Object >, 1> > java::util::ArrayDeque::toArray()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(31),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(31), 
		local_ref< array< local_ref< java::lang::Object >, 1> >
	>(get_jobject());
}

local_ref< array< local_ref< java::lang::Object >, 1> > java::util::ArrayDeque::toArray(local_ref< array< local_ref< java::lang::Object >, 1> > const &a0)
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(32),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(32), 
		local_ref< array< local_ref< java::lang::Object >, 1> >
	>(get_jobject(), a0);
}

local_ref< java::util::Iterator > java::util::ArrayDeque::iterator()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(33),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(33), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

local_ref< java::util::Iterator > java::util::ArrayDeque::descendingIterator()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(34),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(34), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

local_ref< java::lang::Object > java::util::ArrayDeque::clone_1()
{
	return call_method<
		java::util::ArrayDeque::J2CPP_CLASS_NAME,
		java::util::ArrayDeque::J2CPP_METHOD_NAME(35),
		java::util::ArrayDeque::J2CPP_METHOD_SIGNATURE(35), 
		local_ref< java::lang::Object >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::util::ArrayDeque,"java/util/ArrayDeque")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,1,"<init>","(I)V")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,2,"<init>","(Ljava/util/Collection;)V")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,3,"addFirst","(Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,4,"addLast","(Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,5,"offerFirst","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,6,"offerLast","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,7,"offer","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,8,"add","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,9,"push","(Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,10,"removeFirst","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,11,"remove","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,12,"pop","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,13,"removeLast","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,14,"pollFirst","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,15,"poll","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,16,"pollLast","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,17,"getFirst","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,18,"element","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,19,"getLast","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,20,"peekFirst","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,21,"peek","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,22,"peekLast","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,23,"removeFirstOccurrence","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,24,"remove","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,25,"removeLastOccurrence","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,26,"size","()I")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,27,"isEmpty","()Z")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,28,"contains","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,29,"clear","()V")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,30,"clone","()Ljava/util/ArrayDeque;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,31,"toArray","()[java.lang.Object")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,32,"toArray","([java.lang.Object)[java.lang.Object")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,33,"iterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,34,"descendingIterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(java::util::ArrayDeque,35,"clone","()Ljava/lang/Object;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_ARRAYDEQUE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
