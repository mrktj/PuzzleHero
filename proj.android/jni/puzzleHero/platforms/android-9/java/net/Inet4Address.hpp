/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.net.Inet4Address
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_INET4ADDRESS_HPP_DECL
#define J2CPP_JAVA_NET_INET4ADDRESS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace net { class InetAddress; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }


#include <java/io/Serializable.hpp>
#include <java/lang/Object.hpp>
#include <java/net/InetAddress.hpp>


namespace j2cpp {

namespace java { namespace net {

	class Inet4Address;
	class Inet4Address
		: public object<Inet4Address>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)

		explicit Inet4Address(jobject jobj)
		: object<Inet4Address>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::net::InetAddress>() const;
		operator local_ref<java::io::Serializable>() const;


		jboolean isMulticastAddress();
		jboolean isAnyLocalAddress();
		jboolean isLoopbackAddress();
		jboolean isLinkLocalAddress();
		jboolean isSiteLocalAddress();
		jboolean isMCGlobal();
		jboolean isMCNodeLocal();
		jboolean isMCLinkLocal();
		jboolean isMCSiteLocal();
		jboolean isMCOrgLocal();
	}; //class Inet4Address

} //namespace net
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_INET4ADDRESS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_INET4ADDRESS_HPP_IMPL
#define J2CPP_JAVA_NET_INET4ADDRESS_HPP_IMPL

namespace j2cpp {



java::net::Inet4Address::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

java::net::Inet4Address::operator local_ref<java::net::InetAddress>() const
{
	return local_ref<java::net::InetAddress>(get_jobject());
}

java::net::Inet4Address::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}


jboolean java::net::Inet4Address::isMulticastAddress()
{
	return call_method<
		java::net::Inet4Address::J2CPP_CLASS_NAME,
		java::net::Inet4Address::J2CPP_METHOD_NAME(1),
		java::net::Inet4Address::J2CPP_METHOD_SIGNATURE(1), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet4Address::isAnyLocalAddress()
{
	return call_method<
		java::net::Inet4Address::J2CPP_CLASS_NAME,
		java::net::Inet4Address::J2CPP_METHOD_NAME(2),
		java::net::Inet4Address::J2CPP_METHOD_SIGNATURE(2), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet4Address::isLoopbackAddress()
{
	return call_method<
		java::net::Inet4Address::J2CPP_CLASS_NAME,
		java::net::Inet4Address::J2CPP_METHOD_NAME(3),
		java::net::Inet4Address::J2CPP_METHOD_SIGNATURE(3), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet4Address::isLinkLocalAddress()
{
	return call_method<
		java::net::Inet4Address::J2CPP_CLASS_NAME,
		java::net::Inet4Address::J2CPP_METHOD_NAME(4),
		java::net::Inet4Address::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet4Address::isSiteLocalAddress()
{
	return call_method<
		java::net::Inet4Address::J2CPP_CLASS_NAME,
		java::net::Inet4Address::J2CPP_METHOD_NAME(5),
		java::net::Inet4Address::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet4Address::isMCGlobal()
{
	return call_method<
		java::net::Inet4Address::J2CPP_CLASS_NAME,
		java::net::Inet4Address::J2CPP_METHOD_NAME(6),
		java::net::Inet4Address::J2CPP_METHOD_SIGNATURE(6), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet4Address::isMCNodeLocal()
{
	return call_method<
		java::net::Inet4Address::J2CPP_CLASS_NAME,
		java::net::Inet4Address::J2CPP_METHOD_NAME(7),
		java::net::Inet4Address::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet4Address::isMCLinkLocal()
{
	return call_method<
		java::net::Inet4Address::J2CPP_CLASS_NAME,
		java::net::Inet4Address::J2CPP_METHOD_NAME(8),
		java::net::Inet4Address::J2CPP_METHOD_SIGNATURE(8), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet4Address::isMCSiteLocal()
{
	return call_method<
		java::net::Inet4Address::J2CPP_CLASS_NAME,
		java::net::Inet4Address::J2CPP_METHOD_NAME(9),
		java::net::Inet4Address::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(get_jobject());
}

jboolean java::net::Inet4Address::isMCOrgLocal()
{
	return call_method<
		java::net::Inet4Address::J2CPP_CLASS_NAME,
		java::net::Inet4Address::J2CPP_METHOD_NAME(10),
		java::net::Inet4Address::J2CPP_METHOD_SIGNATURE(10), 
		jboolean
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(java::net::Inet4Address,"java/net/Inet4Address")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,1,"isMulticastAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,2,"isAnyLocalAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,3,"isLoopbackAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,4,"isLinkLocalAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,5,"isSiteLocalAddress","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,6,"isMCGlobal","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,7,"isMCNodeLocal","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,8,"isMCLinkLocal","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,9,"isMCSiteLocal","()Z")
J2CPP_DEFINE_METHOD(java::net::Inet4Address,10,"isMCOrgLocal","()Z")

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_INET4ADDRESS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
