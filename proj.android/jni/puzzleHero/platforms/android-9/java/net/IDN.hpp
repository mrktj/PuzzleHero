/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: java.net.IDN
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_IDN_HPP_DECL
#define J2CPP_JAVA_NET_IDN_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace net {

	class IDN;
	class IDN
		: public object<IDN>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)

		explicit IDN(jobject jobj)
		: object<IDN>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static local_ref< java::lang::String > toASCII(local_ref< java::lang::String >  const&, jint);
		static local_ref< java::lang::String > toASCII(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > toUnicode(local_ref< java::lang::String >  const&, jint);
		static local_ref< java::lang::String > toUnicode(local_ref< java::lang::String >  const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > ALLOW_UNASSIGNED;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > USE_STD3_ASCII_RULES;
	}; //class IDN

} //namespace net
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_IDN_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_IDN_HPP_IMPL
#define J2CPP_JAVA_NET_IDN_HPP_IMPL

namespace j2cpp {



java::net::IDN::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< java::lang::String > java::net::IDN::toASCII(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_static_method<
		java::net::IDN::J2CPP_CLASS_NAME,
		java::net::IDN::J2CPP_METHOD_NAME(1),
		java::net::IDN::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(a0, a1);
}

local_ref< java::lang::String > java::net::IDN::toASCII(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::net::IDN::J2CPP_CLASS_NAME,
		java::net::IDN::J2CPP_METHOD_NAME(2),
		java::net::IDN::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > java::net::IDN::toUnicode(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_static_method<
		java::net::IDN::J2CPP_CLASS_NAME,
		java::net::IDN::J2CPP_METHOD_NAME(3),
		java::net::IDN::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::String >
	>(a0, a1);
}

local_ref< java::lang::String > java::net::IDN::toUnicode(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		java::net::IDN::J2CPP_CLASS_NAME,
		java::net::IDN::J2CPP_METHOD_NAME(4),
		java::net::IDN::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(a0);
}


static_field<
	java::net::IDN::J2CPP_CLASS_NAME,
	java::net::IDN::J2CPP_FIELD_NAME(0),
	java::net::IDN::J2CPP_FIELD_SIGNATURE(0),
	jint
> java::net::IDN::ALLOW_UNASSIGNED;

static_field<
	java::net::IDN::J2CPP_CLASS_NAME,
	java::net::IDN::J2CPP_FIELD_NAME(1),
	java::net::IDN::J2CPP_FIELD_SIGNATURE(1),
	jint
> java::net::IDN::USE_STD3_ASCII_RULES;


J2CPP_DEFINE_CLASS(java::net::IDN,"java/net/IDN")
J2CPP_DEFINE_METHOD(java::net::IDN,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::net::IDN,1,"toASCII","(Ljava/lang/String;I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::IDN,2,"toASCII","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::IDN,3,"toUnicode","(Ljava/lang/String;I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::IDN,4,"toUnicode","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_FIELD(java::net::IDN,0,"ALLOW_UNASSIGNED","I")
J2CPP_DEFINE_FIELD(java::net::IDN,1,"USE_STD3_ASCII_RULES","I")

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_IDN_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
