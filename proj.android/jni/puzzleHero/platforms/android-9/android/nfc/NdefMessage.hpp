/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.nfc.NdefMessage
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NFC_NDEFMESSAGE_HPP_DECL
#define J2CPP_ANDROID_NFC_NDEFMESSAGE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace nfc { class NdefRecord; } } }
namespace j2cpp { namespace android { namespace os { class Parcelable; } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }


#include <android/nfc/NdefRecord.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace nfc {

	class NdefMessage;
	class NdefMessage
		: public object<NdefMessage>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_FIELD(0)

		explicit NdefMessage(jobject jobj)
		: object<NdefMessage>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::os::Parcelable>() const;


		NdefMessage(local_ref< array<jbyte,1> > const&);
		NdefMessage(local_ref< array< local_ref< android::nfc::NdefRecord >, 1> > const&);
		local_ref< array< local_ref< android::nfc::NdefRecord >, 1> > getRecords();
		local_ref< array<jbyte,1> > toByteArray();
		jint describeContents();
		void writeToParcel(local_ref< android::os::Parcel >  const&, jint);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class NdefMessage

} //namespace nfc
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_NFC_NDEFMESSAGE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NFC_NDEFMESSAGE_HPP_IMPL
#define J2CPP_ANDROID_NFC_NDEFMESSAGE_HPP_IMPL

namespace j2cpp {



android::nfc::NdefMessage::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::nfc::NdefMessage::operator local_ref<android::os::Parcelable>() const
{
	return local_ref<android::os::Parcelable>(get_jobject());
}


android::nfc::NdefMessage::NdefMessage(local_ref< array<jbyte,1> > const &a0)
: object<android::nfc::NdefMessage>(
	call_new_object<
		android::nfc::NdefMessage::J2CPP_CLASS_NAME,
		android::nfc::NdefMessage::J2CPP_METHOD_NAME(0),
		android::nfc::NdefMessage::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



android::nfc::NdefMessage::NdefMessage(local_ref< array< local_ref< android::nfc::NdefRecord >, 1> > const &a0)
: object<android::nfc::NdefMessage>(
	call_new_object<
		android::nfc::NdefMessage::J2CPP_CLASS_NAME,
		android::nfc::NdefMessage::J2CPP_METHOD_NAME(1),
		android::nfc::NdefMessage::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}


local_ref< array< local_ref< android::nfc::NdefRecord >, 1> > android::nfc::NdefMessage::getRecords()
{
	return call_method<
		android::nfc::NdefMessage::J2CPP_CLASS_NAME,
		android::nfc::NdefMessage::J2CPP_METHOD_NAME(2),
		android::nfc::NdefMessage::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< array< local_ref< android::nfc::NdefRecord >, 1> >
	>(get_jobject());
}

local_ref< array<jbyte,1> > android::nfc::NdefMessage::toByteArray()
{
	return call_method<
		android::nfc::NdefMessage::J2CPP_CLASS_NAME,
		android::nfc::NdefMessage::J2CPP_METHOD_NAME(3),
		android::nfc::NdefMessage::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< array<jbyte,1> >
	>(get_jobject());
}

jint android::nfc::NdefMessage::describeContents()
{
	return call_method<
		android::nfc::NdefMessage::J2CPP_CLASS_NAME,
		android::nfc::NdefMessage::J2CPP_METHOD_NAME(4),
		android::nfc::NdefMessage::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

void android::nfc::NdefMessage::writeToParcel(local_ref< android::os::Parcel > const &a0, jint a1)
{
	return call_method<
		android::nfc::NdefMessage::J2CPP_CLASS_NAME,
		android::nfc::NdefMessage::J2CPP_METHOD_NAME(5),
		android::nfc::NdefMessage::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0, a1);
}



static_field<
	android::nfc::NdefMessage::J2CPP_CLASS_NAME,
	android::nfc::NdefMessage::J2CPP_FIELD_NAME(0),
	android::nfc::NdefMessage::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::os::Parcelable_::Creator >
> android::nfc::NdefMessage::CREATOR;


J2CPP_DEFINE_CLASS(android::nfc::NdefMessage,"android/nfc/NdefMessage")
J2CPP_DEFINE_METHOD(android::nfc::NdefMessage,0,"<init>","([B)V")
J2CPP_DEFINE_METHOD(android::nfc::NdefMessage,1,"<init>","([android.nfc.NdefRecord)V")
J2CPP_DEFINE_METHOD(android::nfc::NdefMessage,2,"getRecords","()[android.nfc.NdefRecord")
J2CPP_DEFINE_METHOD(android::nfc::NdefMessage,3,"toByteArray","()[B")
J2CPP_DEFINE_METHOD(android::nfc::NdefMessage,4,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::nfc::NdefMessage,5,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::nfc::NdefMessage,6,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::nfc::NdefMessage,0,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_NFC_NDEFMESSAGE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
