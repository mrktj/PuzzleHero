/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.test.mock.MockPackageManager
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEST_MOCK_MOCKPACKAGEMANAGER_HPP_DECL
#define J2CPP_ANDROID_TEST_MOCK_MOCKPACKAGEMANAGER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class List; } } }
namespace j2cpp { namespace android { namespace content { class IntentFilter; } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class ActivityInfo; } } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class InstrumentationInfo; } } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class ApplicationInfo; } } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class PackageManager; } } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class ResolveInfo; } } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class ProviderInfo; } } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class ServiceInfo; } } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class PackageInfo; } } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class FeatureInfo; } } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class PermissionInfo; } } } }
namespace j2cpp { namespace android { namespace content { namespace pm { class PermissionGroupInfo; } } } }
namespace j2cpp { namespace android { namespace content { class Intent; } } }
namespace j2cpp { namespace android { namespace content { class ComponentName; } } }
namespace j2cpp { namespace android { namespace content { namespace res { class XmlResourceParser; } } } }
namespace j2cpp { namespace android { namespace content { namespace res { class Resources; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { class Drawable; } } } }


#include <android/content/ComponentName.hpp>
#include <android/content/Intent.hpp>
#include <android/content/IntentFilter.hpp>
#include <android/content/pm/ActivityInfo.hpp>
#include <android/content/pm/ApplicationInfo.hpp>
#include <android/content/pm/FeatureInfo.hpp>
#include <android/content/pm/InstrumentationInfo.hpp>
#include <android/content/pm/PackageInfo.hpp>
#include <android/content/pm/PackageManager.hpp>
#include <android/content/pm/PermissionGroupInfo.hpp>
#include <android/content/pm/PermissionInfo.hpp>
#include <android/content/pm/ProviderInfo.hpp>
#include <android/content/pm/ResolveInfo.hpp>
#include <android/content/pm/ServiceInfo.hpp>
#include <android/content/res/Resources.hpp>
#include <android/content/res/XmlResourceParser.hpp>
#include <android/graphics/drawable/Drawable.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/List.hpp>


namespace j2cpp {

namespace android { namespace test { namespace mock {

	class MockPackageManager;
	class MockPackageManager
		: public object<MockPackageManager>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)

		explicit MockPackageManager(jobject jobj)
		: object<MockPackageManager>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::content::pm::PackageManager>() const;


		MockPackageManager();
		local_ref< android::content::pm::PackageInfo > getPackageInfo(local_ref< java::lang::String >  const&, jint);
		local_ref< array< local_ref< java::lang::String >, 1> > currentToCanonicalPackageNames(local_ref< array< local_ref< java::lang::String >, 1> >  const&);
		local_ref< array< local_ref< java::lang::String >, 1> > canonicalToCurrentPackageNames(local_ref< array< local_ref< java::lang::String >, 1> >  const&);
		local_ref< android::content::Intent > getLaunchIntentForPackage(local_ref< java::lang::String >  const&);
		local_ref< array<jint,1> > getPackageGids(local_ref< java::lang::String >  const&);
		local_ref< android::content::pm::PermissionInfo > getPermissionInfo(local_ref< java::lang::String >  const&, jint);
		local_ref< java::util::List > queryPermissionsByGroup(local_ref< java::lang::String >  const&, jint);
		local_ref< android::content::pm::PermissionGroupInfo > getPermissionGroupInfo(local_ref< java::lang::String >  const&, jint);
		local_ref< java::util::List > getAllPermissionGroups(jint);
		local_ref< android::content::pm::ApplicationInfo > getApplicationInfo(local_ref< java::lang::String >  const&, jint);
		local_ref< android::content::pm::ActivityInfo > getActivityInfo(local_ref< android::content::ComponentName >  const&, jint);
		local_ref< android::content::pm::ActivityInfo > getReceiverInfo(local_ref< android::content::ComponentName >  const&, jint);
		local_ref< android::content::pm::ServiceInfo > getServiceInfo(local_ref< android::content::ComponentName >  const&, jint);
		local_ref< android::content::pm::ProviderInfo > getProviderInfo(local_ref< android::content::ComponentName >  const&, jint);
		local_ref< java::util::List > getInstalledPackages(jint);
		jint checkPermission(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		jboolean addPermission(local_ref< android::content::pm::PermissionInfo >  const&);
		jboolean addPermissionAsync(local_ref< android::content::pm::PermissionInfo >  const&);
		void removePermission(local_ref< java::lang::String >  const&);
		jint checkSignatures(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		jint checkSignatures(jint, jint);
		local_ref< array< local_ref< java::lang::String >, 1> > getPackagesForUid(jint);
		local_ref< java::lang::String > getNameForUid(jint);
		local_ref< java::util::List > getInstalledApplications(jint);
		local_ref< android::content::pm::ResolveInfo > resolveActivity(local_ref< android::content::Intent >  const&, jint);
		local_ref< java::util::List > queryIntentActivities(local_ref< android::content::Intent >  const&, jint);
		local_ref< java::util::List > queryIntentActivityOptions(local_ref< android::content::ComponentName >  const&, local_ref< array< local_ref< android::content::Intent >, 1> >  const&, local_ref< android::content::Intent >  const&, jint);
		local_ref< java::util::List > queryBroadcastReceivers(local_ref< android::content::Intent >  const&, jint);
		local_ref< android::content::pm::ResolveInfo > resolveService(local_ref< android::content::Intent >  const&, jint);
		local_ref< java::util::List > queryIntentServices(local_ref< android::content::Intent >  const&, jint);
		local_ref< android::content::pm::ProviderInfo > resolveContentProvider(local_ref< java::lang::String >  const&, jint);
		local_ref< java::util::List > queryContentProviders(local_ref< java::lang::String >  const&, jint, jint);
		local_ref< android::content::pm::InstrumentationInfo > getInstrumentationInfo(local_ref< android::content::ComponentName >  const&, jint);
		local_ref< java::util::List > queryInstrumentation(local_ref< java::lang::String >  const&, jint);
		local_ref< android::graphics::drawable::Drawable > getDrawable(local_ref< java::lang::String >  const&, jint, local_ref< android::content::pm::ApplicationInfo >  const&);
		local_ref< android::graphics::drawable::Drawable > getActivityIcon(local_ref< android::content::ComponentName >  const&);
		local_ref< android::graphics::drawable::Drawable > getActivityIcon(local_ref< android::content::Intent >  const&);
		local_ref< android::graphics::drawable::Drawable > getDefaultActivityIcon();
		local_ref< android::graphics::drawable::Drawable > getApplicationIcon(local_ref< android::content::pm::ApplicationInfo >  const&);
		local_ref< android::graphics::drawable::Drawable > getApplicationIcon(local_ref< java::lang::String >  const&);
		local_ref< android::graphics::drawable::Drawable > getActivityLogo(local_ref< android::content::ComponentName >  const&);
		local_ref< android::graphics::drawable::Drawable > getActivityLogo(local_ref< android::content::Intent >  const&);
		local_ref< android::graphics::drawable::Drawable > getApplicationLogo(local_ref< android::content::pm::ApplicationInfo >  const&);
		local_ref< android::graphics::drawable::Drawable > getApplicationLogo(local_ref< java::lang::String >  const&);
		local_ref< java::lang::CharSequence > getText(local_ref< java::lang::String >  const&, jint, local_ref< android::content::pm::ApplicationInfo >  const&);
		local_ref< android::content::res::XmlResourceParser > getXml(local_ref< java::lang::String >  const&, jint, local_ref< android::content::pm::ApplicationInfo >  const&);
		local_ref< java::lang::CharSequence > getApplicationLabel(local_ref< android::content::pm::ApplicationInfo >  const&);
		local_ref< android::content::res::Resources > getResourcesForActivity(local_ref< android::content::ComponentName >  const&);
		local_ref< android::content::res::Resources > getResourcesForApplication(local_ref< android::content::pm::ApplicationInfo >  const&);
		local_ref< android::content::res::Resources > getResourcesForApplication(local_ref< java::lang::String >  const&);
		local_ref< android::content::pm::PackageInfo > getPackageArchiveInfo(local_ref< java::lang::String >  const&, jint);
		local_ref< java::lang::String > getInstallerPackageName(local_ref< java::lang::String >  const&);
		void addPackageToPreferred(local_ref< java::lang::String >  const&);
		void removePackageFromPreferred(local_ref< java::lang::String >  const&);
		local_ref< java::util::List > getPreferredPackages(jint);
		void setComponentEnabledSetting(local_ref< android::content::ComponentName >  const&, jint, jint);
		jint getComponentEnabledSetting(local_ref< android::content::ComponentName >  const&);
		void setApplicationEnabledSetting(local_ref< java::lang::String >  const&, jint, jint);
		jint getApplicationEnabledSetting(local_ref< java::lang::String >  const&);
		void addPreferredActivity(local_ref< android::content::IntentFilter >  const&, jint, local_ref< array< local_ref< android::content::ComponentName >, 1> >  const&, local_ref< android::content::ComponentName >  const&);
		void clearPackagePreferredActivities(local_ref< java::lang::String >  const&);
		jint getPreferredActivities(local_ref< java::util::List >  const&, local_ref< java::util::List >  const&, local_ref< java::lang::String >  const&);
		local_ref< array< local_ref< java::lang::String >, 1> > getSystemSharedLibraryNames();
		local_ref< array< local_ref< android::content::pm::FeatureInfo >, 1> > getSystemAvailableFeatures();
		jboolean hasSystemFeature(local_ref< java::lang::String >  const&);
		jboolean isSafeMode();
		void setPackageObbPath(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
	}; //class MockPackageManager

} //namespace mock
} //namespace test
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEST_MOCK_MOCKPACKAGEMANAGER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEST_MOCK_MOCKPACKAGEMANAGER_HPP_IMPL
#define J2CPP_ANDROID_TEST_MOCK_MOCKPACKAGEMANAGER_HPP_IMPL

namespace j2cpp {



android::test::mock::MockPackageManager::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::test::mock::MockPackageManager::operator local_ref<android::content::pm::PackageManager>() const
{
	return local_ref<android::content::pm::PackageManager>(get_jobject());
}


android::test::mock::MockPackageManager::MockPackageManager()
: object<android::test::mock::MockPackageManager>(
	call_new_object<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(0),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


local_ref< android::content::pm::PackageInfo > android::test::mock::MockPackageManager::getPackageInfo(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(1),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::content::pm::PackageInfo >
	>(get_jobject(), a0, a1);
}

local_ref< array< local_ref< java::lang::String >, 1> > android::test::mock::MockPackageManager::currentToCanonicalPackageNames(local_ref< array< local_ref< java::lang::String >, 1> > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(2),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject(), a0);
}

local_ref< array< local_ref< java::lang::String >, 1> > android::test::mock::MockPackageManager::canonicalToCurrentPackageNames(local_ref< array< local_ref< java::lang::String >, 1> > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(3),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject(), a0);
}

local_ref< android::content::Intent > android::test::mock::MockPackageManager::getLaunchIntentForPackage(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(4),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< android::content::Intent >
	>(get_jobject(), a0);
}

local_ref< array<jint,1> > android::test::mock::MockPackageManager::getPackageGids(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(5),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< array<jint,1> >
	>(get_jobject(), a0);
}

local_ref< android::content::pm::PermissionInfo > android::test::mock::MockPackageManager::getPermissionInfo(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(6),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< android::content::pm::PermissionInfo >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::queryPermissionsByGroup(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(7),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::util::List >
	>(get_jobject(), a0, a1);
}

local_ref< android::content::pm::PermissionGroupInfo > android::test::mock::MockPackageManager::getPermissionGroupInfo(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(8),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< android::content::pm::PermissionGroupInfo >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::getAllPermissionGroups(jint a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(9),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::util::List >
	>(get_jobject(), a0);
}

local_ref< android::content::pm::ApplicationInfo > android::test::mock::MockPackageManager::getApplicationInfo(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(10),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< android::content::pm::ApplicationInfo >
	>(get_jobject(), a0, a1);
}

local_ref< android::content::pm::ActivityInfo > android::test::mock::MockPackageManager::getActivityInfo(local_ref< android::content::ComponentName > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(11),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< android::content::pm::ActivityInfo >
	>(get_jobject(), a0, a1);
}

local_ref< android::content::pm::ActivityInfo > android::test::mock::MockPackageManager::getReceiverInfo(local_ref< android::content::ComponentName > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(12),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< android::content::pm::ActivityInfo >
	>(get_jobject(), a0, a1);
}

local_ref< android::content::pm::ServiceInfo > android::test::mock::MockPackageManager::getServiceInfo(local_ref< android::content::ComponentName > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(13),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(13), 
		local_ref< android::content::pm::ServiceInfo >
	>(get_jobject(), a0, a1);
}

local_ref< android::content::pm::ProviderInfo > android::test::mock::MockPackageManager::getProviderInfo(local_ref< android::content::ComponentName > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(14),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(14), 
		local_ref< android::content::pm::ProviderInfo >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::getInstalledPackages(jint a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(15),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(15), 
		local_ref< java::util::List >
	>(get_jobject(), a0);
}

jint android::test::mock::MockPackageManager::checkPermission(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(16),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(16), 
		jint
	>(get_jobject(), a0, a1);
}

jboolean android::test::mock::MockPackageManager::addPermission(local_ref< android::content::pm::PermissionInfo > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(17),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(17), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::test::mock::MockPackageManager::addPermissionAsync(local_ref< android::content::pm::PermissionInfo > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(18),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(18), 
		jboolean
	>(get_jobject(), a0);
}

void android::test::mock::MockPackageManager::removePermission(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(19),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(19), 
		void
	>(get_jobject(), a0);
}

jint android::test::mock::MockPackageManager::checkSignatures(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(20),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(20), 
		jint
	>(get_jobject(), a0, a1);
}

jint android::test::mock::MockPackageManager::checkSignatures(jint a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(21),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(21), 
		jint
	>(get_jobject(), a0, a1);
}

local_ref< array< local_ref< java::lang::String >, 1> > android::test::mock::MockPackageManager::getPackagesForUid(jint a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(22),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(22), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject(), a0);
}

local_ref< java::lang::String > android::test::mock::MockPackageManager::getNameForUid(jint a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(23),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(23), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::getInstalledApplications(jint a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(24),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(24), 
		local_ref< java::util::List >
	>(get_jobject(), a0);
}

local_ref< android::content::pm::ResolveInfo > android::test::mock::MockPackageManager::resolveActivity(local_ref< android::content::Intent > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(25),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(25), 
		local_ref< android::content::pm::ResolveInfo >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::queryIntentActivities(local_ref< android::content::Intent > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(26),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(26), 
		local_ref< java::util::List >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::queryIntentActivityOptions(local_ref< android::content::ComponentName > const &a0, local_ref< array< local_ref< android::content::Intent >, 1> > const &a1, local_ref< android::content::Intent > const &a2, jint a3)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(27),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(27), 
		local_ref< java::util::List >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::queryBroadcastReceivers(local_ref< android::content::Intent > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(28),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(28), 
		local_ref< java::util::List >
	>(get_jobject(), a0, a1);
}

local_ref< android::content::pm::ResolveInfo > android::test::mock::MockPackageManager::resolveService(local_ref< android::content::Intent > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(29),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(29), 
		local_ref< android::content::pm::ResolveInfo >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::queryIntentServices(local_ref< android::content::Intent > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(30),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(30), 
		local_ref< java::util::List >
	>(get_jobject(), a0, a1);
}

local_ref< android::content::pm::ProviderInfo > android::test::mock::MockPackageManager::resolveContentProvider(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(31),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(31), 
		local_ref< android::content::pm::ProviderInfo >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::queryContentProviders(local_ref< java::lang::String > const &a0, jint a1, jint a2)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(32),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(32), 
		local_ref< java::util::List >
	>(get_jobject(), a0, a1, a2);
}

local_ref< android::content::pm::InstrumentationInfo > android::test::mock::MockPackageManager::getInstrumentationInfo(local_ref< android::content::ComponentName > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(33),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(33), 
		local_ref< android::content::pm::InstrumentationInfo >
	>(get_jobject(), a0, a1);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::queryInstrumentation(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(34),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(34), 
		local_ref< java::util::List >
	>(get_jobject(), a0, a1);
}

local_ref< android::graphics::drawable::Drawable > android::test::mock::MockPackageManager::getDrawable(local_ref< java::lang::String > const &a0, jint a1, local_ref< android::content::pm::ApplicationInfo > const &a2)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(35),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(35), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject(), a0, a1, a2);
}

local_ref< android::graphics::drawable::Drawable > android::test::mock::MockPackageManager::getActivityIcon(local_ref< android::content::ComponentName > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(36),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(36), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject(), a0);
}

local_ref< android::graphics::drawable::Drawable > android::test::mock::MockPackageManager::getActivityIcon(local_ref< android::content::Intent > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(37),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(37), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject(), a0);
}

local_ref< android::graphics::drawable::Drawable > android::test::mock::MockPackageManager::getDefaultActivityIcon()
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(38),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(38), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject());
}

local_ref< android::graphics::drawable::Drawable > android::test::mock::MockPackageManager::getApplicationIcon(local_ref< android::content::pm::ApplicationInfo > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(39),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(39), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject(), a0);
}

local_ref< android::graphics::drawable::Drawable > android::test::mock::MockPackageManager::getApplicationIcon(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(40),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(40), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject(), a0);
}

local_ref< android::graphics::drawable::Drawable > android::test::mock::MockPackageManager::getActivityLogo(local_ref< android::content::ComponentName > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(41),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(41), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject(), a0);
}

local_ref< android::graphics::drawable::Drawable > android::test::mock::MockPackageManager::getActivityLogo(local_ref< android::content::Intent > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(42),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(42), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject(), a0);
}

local_ref< android::graphics::drawable::Drawable > android::test::mock::MockPackageManager::getApplicationLogo(local_ref< android::content::pm::ApplicationInfo > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(43),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(43), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject(), a0);
}

local_ref< android::graphics::drawable::Drawable > android::test::mock::MockPackageManager::getApplicationLogo(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(44),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(44), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject(), a0);
}

local_ref< java::lang::CharSequence > android::test::mock::MockPackageManager::getText(local_ref< java::lang::String > const &a0, jint a1, local_ref< android::content::pm::ApplicationInfo > const &a2)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(45),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(45), 
		local_ref< java::lang::CharSequence >
	>(get_jobject(), a0, a1, a2);
}

local_ref< android::content::res::XmlResourceParser > android::test::mock::MockPackageManager::getXml(local_ref< java::lang::String > const &a0, jint a1, local_ref< android::content::pm::ApplicationInfo > const &a2)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(46),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(46), 
		local_ref< android::content::res::XmlResourceParser >
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::lang::CharSequence > android::test::mock::MockPackageManager::getApplicationLabel(local_ref< android::content::pm::ApplicationInfo > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(47),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(47), 
		local_ref< java::lang::CharSequence >
	>(get_jobject(), a0);
}

local_ref< android::content::res::Resources > android::test::mock::MockPackageManager::getResourcesForActivity(local_ref< android::content::ComponentName > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(48),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(48), 
		local_ref< android::content::res::Resources >
	>(get_jobject(), a0);
}

local_ref< android::content::res::Resources > android::test::mock::MockPackageManager::getResourcesForApplication(local_ref< android::content::pm::ApplicationInfo > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(49),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(49), 
		local_ref< android::content::res::Resources >
	>(get_jobject(), a0);
}

local_ref< android::content::res::Resources > android::test::mock::MockPackageManager::getResourcesForApplication(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(50),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(50), 
		local_ref< android::content::res::Resources >
	>(get_jobject(), a0);
}

local_ref< android::content::pm::PackageInfo > android::test::mock::MockPackageManager::getPackageArchiveInfo(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(51),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(51), 
		local_ref< android::content::pm::PackageInfo >
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::String > android::test::mock::MockPackageManager::getInstallerPackageName(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(52),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(52), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

void android::test::mock::MockPackageManager::addPackageToPreferred(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(53),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(53), 
		void
	>(get_jobject(), a0);
}

void android::test::mock::MockPackageManager::removePackageFromPreferred(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(54),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(54), 
		void
	>(get_jobject(), a0);
}

local_ref< java::util::List > android::test::mock::MockPackageManager::getPreferredPackages(jint a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(55),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(55), 
		local_ref< java::util::List >
	>(get_jobject(), a0);
}

void android::test::mock::MockPackageManager::setComponentEnabledSetting(local_ref< android::content::ComponentName > const &a0, jint a1, jint a2)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(56),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(56), 
		void
	>(get_jobject(), a0, a1, a2);
}

jint android::test::mock::MockPackageManager::getComponentEnabledSetting(local_ref< android::content::ComponentName > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(57),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(57), 
		jint
	>(get_jobject(), a0);
}

void android::test::mock::MockPackageManager::setApplicationEnabledSetting(local_ref< java::lang::String > const &a0, jint a1, jint a2)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(58),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(58), 
		void
	>(get_jobject(), a0, a1, a2);
}

jint android::test::mock::MockPackageManager::getApplicationEnabledSetting(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(59),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(59), 
		jint
	>(get_jobject(), a0);
}

void android::test::mock::MockPackageManager::addPreferredActivity(local_ref< android::content::IntentFilter > const &a0, jint a1, local_ref< array< local_ref< android::content::ComponentName >, 1> > const &a2, local_ref< android::content::ComponentName > const &a3)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(60),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(60), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

void android::test::mock::MockPackageManager::clearPackagePreferredActivities(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(61),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(61), 
		void
	>(get_jobject(), a0);
}

jint android::test::mock::MockPackageManager::getPreferredActivities(local_ref< java::util::List > const &a0, local_ref< java::util::List > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(62),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(62), 
		jint
	>(get_jobject(), a0, a1, a2);
}

local_ref< array< local_ref< java::lang::String >, 1> > android::test::mock::MockPackageManager::getSystemSharedLibraryNames()
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(63),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(63), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject());
}

local_ref< array< local_ref< android::content::pm::FeatureInfo >, 1> > android::test::mock::MockPackageManager::getSystemAvailableFeatures()
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(64),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(64), 
		local_ref< array< local_ref< android::content::pm::FeatureInfo >, 1> >
	>(get_jobject());
}

jboolean android::test::mock::MockPackageManager::hasSystemFeature(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(65),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(65), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::test::mock::MockPackageManager::isSafeMode()
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(66),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(66), 
		jboolean
	>(get_jobject());
}

void android::test::mock::MockPackageManager::setPackageObbPath(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::test::mock::MockPackageManager::J2CPP_CLASS_NAME,
		android::test::mock::MockPackageManager::J2CPP_METHOD_NAME(67),
		android::test::mock::MockPackageManager::J2CPP_METHOD_SIGNATURE(67), 
		void
	>(get_jobject(), a0, a1);
}


J2CPP_DEFINE_CLASS(android::test::mock::MockPackageManager,"android/test/mock/MockPackageManager")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,1,"getPackageInfo","(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,2,"currentToCanonicalPackageNames","([java.lang.String)[java.lang.String")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,3,"canonicalToCurrentPackageNames","([java.lang.String)[java.lang.String")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,4,"getLaunchIntentForPackage","(Ljava/lang/String;)Landroid/content/Intent;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,5,"getPackageGids","(Ljava/lang/String;)[I")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,6,"getPermissionInfo","(Ljava/lang/String;I)Landroid/content/pm/PermissionInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,7,"queryPermissionsByGroup","(Ljava/lang/String;I)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,8,"getPermissionGroupInfo","(Ljava/lang/String;I)Landroid/content/pm/PermissionGroupInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,9,"getAllPermissionGroups","(I)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,10,"getApplicationInfo","(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,11,"getActivityInfo","(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,12,"getReceiverInfo","(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,13,"getServiceInfo","(Landroid/content/ComponentName;I)Landroid/content/pm/ServiceInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,14,"getProviderInfo","(Landroid/content/ComponentName;I)Landroid/content/pm/ProviderInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,15,"getInstalledPackages","(I)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,16,"checkPermission","(Ljava/lang/String;Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,17,"addPermission","(Landroid/content/pm/PermissionInfo;)Z")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,18,"addPermissionAsync","(Landroid/content/pm/PermissionInfo;)Z")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,19,"removePermission","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,20,"checkSignatures","(Ljava/lang/String;Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,21,"checkSignatures","(II)I")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,22,"getPackagesForUid","(I)[java.lang.String")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,23,"getNameForUid","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,24,"getInstalledApplications","(I)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,25,"resolveActivity","(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,26,"queryIntentActivities","(Landroid/content/Intent;I)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,27,"queryIntentActivityOptions","(Landroid/content/ComponentName;[android.content.IntentLandroid/content/Intent;I)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,28,"queryBroadcastReceivers","(Landroid/content/Intent;I)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,29,"resolveService","(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,30,"queryIntentServices","(Landroid/content/Intent;I)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,31,"resolveContentProvider","(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,32,"queryContentProviders","(Ljava/lang/String;II)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,33,"getInstrumentationInfo","(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,34,"queryInstrumentation","(Ljava/lang/String;I)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,35,"getDrawable","(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,36,"getActivityIcon","(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,37,"getActivityIcon","(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,38,"getDefaultActivityIcon","()Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,39,"getApplicationIcon","(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,40,"getApplicationIcon","(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,41,"getActivityLogo","(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,42,"getActivityLogo","(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,43,"getApplicationLogo","(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,44,"getApplicationLogo","(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,45,"getText","(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,46,"getXml","(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/content/res/XmlResourceParser;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,47,"getApplicationLabel","(Landroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,48,"getResourcesForActivity","(Landroid/content/ComponentName;)Landroid/content/res/Resources;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,49,"getResourcesForApplication","(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/Resources;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,50,"getResourcesForApplication","(Ljava/lang/String;)Landroid/content/res/Resources;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,51,"getPackageArchiveInfo","(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,52,"getInstallerPackageName","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,53,"addPackageToPreferred","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,54,"removePackageFromPreferred","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,55,"getPreferredPackages","(I)Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,56,"setComponentEnabledSetting","(Landroid/content/ComponentName;II)V")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,57,"getComponentEnabledSetting","(Landroid/content/ComponentName;)I")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,58,"setApplicationEnabledSetting","(Ljava/lang/String;II)V")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,59,"getApplicationEnabledSetting","(Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,60,"addPreferredActivity","(Landroid/content/IntentFilter;I[android.content.ComponentNameLandroid/content/ComponentName;)V")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,61,"clearPackagePreferredActivities","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,62,"getPreferredActivities","(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,63,"getSystemSharedLibraryNames","()[java.lang.String")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,64,"getSystemAvailableFeatures","()[android.content.pm.FeatureInfo")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,65,"hasSystemFeature","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,66,"isSafeMode","()Z")
J2CPP_DEFINE_METHOD(android::test::mock::MockPackageManager,67,"setPackageObbPath","(Ljava/lang/String;Ljava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEST_MOCK_MOCKPACKAGEMANAGER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
