/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.view.View
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_VIEW_HPP_DECL
#define J2CPP_ANDROID_VIEW_VIEW_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Runnable; } } }
namespace j2cpp { namespace java { namespace util { class ArrayList; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace content { namespace res { class Resources; } } } }
namespace j2cpp { namespace android { namespace content { namespace res { class Configuration; } } } }
namespace j2cpp { namespace android { namespace util { class SparseArray; } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }
namespace j2cpp { namespace android { namespace view { namespace View_ { class OnFocusChangeListener; } } } }
namespace j2cpp { namespace android { namespace view { class ViewTreeObserver; } } }
namespace j2cpp { namespace android { namespace view { class AbsSavedState; } } }
namespace j2cpp { namespace android { namespace view { class TouchDelegate; } } }
namespace j2cpp { namespace android { namespace view { class KeyEvent; } } }
namespace j2cpp { namespace android { namespace view { class ViewGroup; } } }
namespace j2cpp { namespace android { namespace view { class ContextMenu; } } }
namespace j2cpp { namespace android { namespace view { namespace ContextMenu_ { class ContextMenuInfo; } } } }
namespace j2cpp { namespace android { namespace view { namespace View_ { class OnKeyListener; } } } }
namespace j2cpp { namespace android { namespace view { namespace animation { class Animation; } } } }
namespace j2cpp { namespace android { namespace view { namespace View_ { class OnCreateContextMenuListener; } } } }
namespace j2cpp { namespace android { namespace view { namespace View_ { class OnClickListener; } } } }
namespace j2cpp { namespace android { namespace view { namespace accessibility { class AccessibilityEventSource; } } } }
namespace j2cpp { namespace android { namespace view { namespace accessibility { class AccessibilityEvent; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class EditorInfo; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class InputConnection; } } } }
namespace j2cpp { namespace android { namespace view { class MotionEvent; } } }
namespace j2cpp { namespace android { namespace view { namespace View_ { class OnLongClickListener; } } } }
namespace j2cpp { namespace android { namespace view { namespace ViewGroup_ { class LayoutParams; } } } }
namespace j2cpp { namespace android { namespace view { class ViewParent; } } }
namespace j2cpp { namespace android { namespace view { namespace KeyEvent_ { class DispatcherState; } } } }
namespace j2cpp { namespace android { namespace view { namespace View_ { class OnTouchListener; } } } }
namespace j2cpp { namespace android { namespace os { class IBinder; } } }
namespace j2cpp { namespace android { namespace os { class Parcelable; } } }
namespace j2cpp { namespace android { namespace os { class Handler; } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }
namespace j2cpp { namespace android { namespace graphics { class Canvas; } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace android { namespace graphics { class Bitmap; } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { class Drawable; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { namespace Drawable_ { class Callback; } } } } }
namespace j2cpp { namespace android { namespace graphics { class Point; } } }


#include <android/content/Context.hpp>
#include <android/content/res/Configuration.hpp>
#include <android/content/res/Resources.hpp>
#include <android/graphics/Bitmap.hpp>
#include <android/graphics/Canvas.hpp>
#include <android/graphics/Point.hpp>
#include <android/graphics/Rect.hpp>
#include <android/graphics/drawable/Drawable.hpp>
#include <android/os/Handler.hpp>
#include <android/os/IBinder.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <android/util/AttributeSet.hpp>
#include <android/util/SparseArray.hpp>
#include <android/view/AbsSavedState.hpp>
#include <android/view/ContextMenu.hpp>
#include <android/view/KeyEvent.hpp>
#include <android/view/MotionEvent.hpp>
#include <android/view/TouchDelegate.hpp>
#include <android/view/View.hpp>
#include <android/view/ViewGroup.hpp>
#include <android/view/ViewParent.hpp>
#include <android/view/ViewTreeObserver.hpp>
#include <android/view/accessibility/AccessibilityEvent.hpp>
#include <android/view/accessibility/AccessibilityEventSource.hpp>
#include <android/view/animation/Animation.hpp>
#include <android/view/inputmethod/EditorInfo.hpp>
#include <android/view/inputmethod/InputConnection.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/Runnable.hpp>
#include <java/lang/String.hpp>
#include <java/util/ArrayList.hpp>


namespace j2cpp {

namespace android { namespace view {

	class View;
	namespace View_ {

		class OnFocusChangeListener;
		class OnFocusChangeListener
			: public object<OnFocusChangeListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit OnFocusChangeListener(jobject jobj)
			: object<OnFocusChangeListener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			void onFocusChange(local_ref< android::view::View >  const&, jboolean);
		}; //class OnFocusChangeListener

		class BaseSavedState;
		class BaseSavedState
			: public object<BaseSavedState>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_FIELD(0)

			explicit BaseSavedState(jobject jobj)
			: object<BaseSavedState>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;
			operator local_ref<android::view::AbsSavedState>() const;
			operator local_ref<android::os::Parcelable>() const;


			BaseSavedState(local_ref< android::os::Parcel > const&);
			BaseSavedState(local_ref< android::os::Parcelable > const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::os::Parcelable_::Creator > > CREATOR;
		}; //class BaseSavedState

		class OnKeyListener;
		class OnKeyListener
			: public object<OnKeyListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit OnKeyListener(jobject jobj)
			: object<OnKeyListener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			jboolean onKey(local_ref< android::view::View >  const&, jint, local_ref< android::view::KeyEvent >  const&);
		}; //class OnKeyListener

		class OnCreateContextMenuListener;
		class OnCreateContextMenuListener
			: public object<OnCreateContextMenuListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit OnCreateContextMenuListener(jobject jobj)
			: object<OnCreateContextMenuListener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			void onCreateContextMenu(local_ref< android::view::ContextMenu >  const&, local_ref< android::view::View >  const&, local_ref< android::view::ContextMenu_::ContextMenuInfo >  const&);
		}; //class OnCreateContextMenuListener

		class OnClickListener;
		class OnClickListener
			: public object<OnClickListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit OnClickListener(jobject jobj)
			: object<OnClickListener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			void onClick(local_ref< android::view::View >  const&);
		}; //class OnClickListener

		class OnLongClickListener;
		class OnLongClickListener
			: public object<OnLongClickListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit OnLongClickListener(jobject jobj)
			: object<OnLongClickListener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			jboolean onLongClick(local_ref< android::view::View >  const&);
		}; //class OnLongClickListener

		class MeasureSpec;
		class MeasureSpec
			: public object<MeasureSpec>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)

			explicit MeasureSpec(jobject jobj)
			: object<MeasureSpec>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			MeasureSpec();
			static jint makeMeasureSpec(jint, jint);
			static jint getMode(jint);
			static jint getSize(jint);
			static local_ref< java::lang::String > toString(jint);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > UNSPECIFIED;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > EXACTLY;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > AT_MOST;
		}; //class MeasureSpec

		class OnTouchListener;
		class OnTouchListener
			: public object<OnTouchListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit OnTouchListener(jobject jobj)
			: object<OnTouchListener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			jboolean onTouch(local_ref< android::view::View >  const&, local_ref< android::view::MotionEvent >  const&);
		}; //class OnTouchListener

	} //namespace View_

	class View
		: public object<View>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)
		J2CPP_DECLARE_METHOD(77)
		J2CPP_DECLARE_METHOD(78)
		J2CPP_DECLARE_METHOD(79)
		J2CPP_DECLARE_METHOD(80)
		J2CPP_DECLARE_METHOD(81)
		J2CPP_DECLARE_METHOD(82)
		J2CPP_DECLARE_METHOD(83)
		J2CPP_DECLARE_METHOD(84)
		J2CPP_DECLARE_METHOD(85)
		J2CPP_DECLARE_METHOD(86)
		J2CPP_DECLARE_METHOD(87)
		J2CPP_DECLARE_METHOD(88)
		J2CPP_DECLARE_METHOD(89)
		J2CPP_DECLARE_METHOD(90)
		J2CPP_DECLARE_METHOD(91)
		J2CPP_DECLARE_METHOD(92)
		J2CPP_DECLARE_METHOD(93)
		J2CPP_DECLARE_METHOD(94)
		J2CPP_DECLARE_METHOD(95)
		J2CPP_DECLARE_METHOD(96)
		J2CPP_DECLARE_METHOD(97)
		J2CPP_DECLARE_METHOD(98)
		J2CPP_DECLARE_METHOD(99)
		J2CPP_DECLARE_METHOD(100)
		J2CPP_DECLARE_METHOD(101)
		J2CPP_DECLARE_METHOD(102)
		J2CPP_DECLARE_METHOD(103)
		J2CPP_DECLARE_METHOD(104)
		J2CPP_DECLARE_METHOD(105)
		J2CPP_DECLARE_METHOD(106)
		J2CPP_DECLARE_METHOD(107)
		J2CPP_DECLARE_METHOD(108)
		J2CPP_DECLARE_METHOD(109)
		J2CPP_DECLARE_METHOD(110)
		J2CPP_DECLARE_METHOD(111)
		J2CPP_DECLARE_METHOD(112)
		J2CPP_DECLARE_METHOD(113)
		J2CPP_DECLARE_METHOD(114)
		J2CPP_DECLARE_METHOD(115)
		J2CPP_DECLARE_METHOD(116)
		J2CPP_DECLARE_METHOD(117)
		J2CPP_DECLARE_METHOD(118)
		J2CPP_DECLARE_METHOD(119)
		J2CPP_DECLARE_METHOD(120)
		J2CPP_DECLARE_METHOD(121)
		J2CPP_DECLARE_METHOD(122)
		J2CPP_DECLARE_METHOD(123)
		J2CPP_DECLARE_METHOD(124)
		J2CPP_DECLARE_METHOD(125)
		J2CPP_DECLARE_METHOD(126)
		J2CPP_DECLARE_METHOD(127)
		J2CPP_DECLARE_METHOD(128)
		J2CPP_DECLARE_METHOD(129)
		J2CPP_DECLARE_METHOD(130)
		J2CPP_DECLARE_METHOD(131)
		J2CPP_DECLARE_METHOD(132)
		J2CPP_DECLARE_METHOD(133)
		J2CPP_DECLARE_METHOD(134)
		J2CPP_DECLARE_METHOD(135)
		J2CPP_DECLARE_METHOD(136)
		J2CPP_DECLARE_METHOD(137)
		J2CPP_DECLARE_METHOD(138)
		J2CPP_DECLARE_METHOD(139)
		J2CPP_DECLARE_METHOD(140)
		J2CPP_DECLARE_METHOD(141)
		J2CPP_DECLARE_METHOD(142)
		J2CPP_DECLARE_METHOD(143)
		J2CPP_DECLARE_METHOD(144)
		J2CPP_DECLARE_METHOD(145)
		J2CPP_DECLARE_METHOD(146)
		J2CPP_DECLARE_METHOD(147)
		J2CPP_DECLARE_METHOD(148)
		J2CPP_DECLARE_METHOD(149)
		J2CPP_DECLARE_METHOD(150)
		J2CPP_DECLARE_METHOD(151)
		J2CPP_DECLARE_METHOD(152)
		J2CPP_DECLARE_METHOD(153)
		J2CPP_DECLARE_METHOD(154)
		J2CPP_DECLARE_METHOD(155)
		J2CPP_DECLARE_METHOD(156)
		J2CPP_DECLARE_METHOD(157)
		J2CPP_DECLARE_METHOD(158)
		J2CPP_DECLARE_METHOD(159)
		J2CPP_DECLARE_METHOD(160)
		J2CPP_DECLARE_METHOD(161)
		J2CPP_DECLARE_METHOD(162)
		J2CPP_DECLARE_METHOD(163)
		J2CPP_DECLARE_METHOD(164)
		J2CPP_DECLARE_METHOD(165)
		J2CPP_DECLARE_METHOD(166)
		J2CPP_DECLARE_METHOD(167)
		J2CPP_DECLARE_METHOD(168)
		J2CPP_DECLARE_METHOD(169)
		J2CPP_DECLARE_METHOD(170)
		J2CPP_DECLARE_METHOD(171)
		J2CPP_DECLARE_METHOD(172)
		J2CPP_DECLARE_METHOD(173)
		J2CPP_DECLARE_METHOD(174)
		J2CPP_DECLARE_METHOD(175)
		J2CPP_DECLARE_METHOD(176)
		J2CPP_DECLARE_METHOD(177)
		J2CPP_DECLARE_METHOD(178)
		J2CPP_DECLARE_METHOD(179)
		J2CPP_DECLARE_METHOD(180)
		J2CPP_DECLARE_METHOD(181)
		J2CPP_DECLARE_METHOD(182)
		J2CPP_DECLARE_METHOD(183)
		J2CPP_DECLARE_METHOD(184)
		J2CPP_DECLARE_METHOD(185)
		J2CPP_DECLARE_METHOD(186)
		J2CPP_DECLARE_METHOD(187)
		J2CPP_DECLARE_METHOD(188)
		J2CPP_DECLARE_METHOD(189)
		J2CPP_DECLARE_METHOD(190)
		J2CPP_DECLARE_METHOD(191)
		J2CPP_DECLARE_METHOD(192)
		J2CPP_DECLARE_METHOD(193)
		J2CPP_DECLARE_METHOD(194)
		J2CPP_DECLARE_METHOD(195)
		J2CPP_DECLARE_METHOD(196)
		J2CPP_DECLARE_METHOD(197)
		J2CPP_DECLARE_METHOD(198)
		J2CPP_DECLARE_METHOD(199)
		J2CPP_DECLARE_METHOD(200)
		J2CPP_DECLARE_METHOD(201)
		J2CPP_DECLARE_METHOD(202)
		J2CPP_DECLARE_METHOD(203)
		J2CPP_DECLARE_METHOD(204)
		J2CPP_DECLARE_METHOD(205)
		J2CPP_DECLARE_METHOD(206)
		J2CPP_DECLARE_METHOD(207)
		J2CPP_DECLARE_METHOD(208)
		J2CPP_DECLARE_METHOD(209)
		J2CPP_DECLARE_METHOD(210)
		J2CPP_DECLARE_METHOD(211)
		J2CPP_DECLARE_METHOD(212)
		J2CPP_DECLARE_METHOD(213)
		J2CPP_DECLARE_METHOD(214)
		J2CPP_DECLARE_METHOD(215)
		J2CPP_DECLARE_METHOD(216)
		J2CPP_DECLARE_METHOD(217)
		J2CPP_DECLARE_METHOD(218)
		J2CPP_DECLARE_METHOD(219)
		J2CPP_DECLARE_METHOD(220)
		J2CPP_DECLARE_METHOD(221)
		J2CPP_DECLARE_METHOD(222)
		J2CPP_DECLARE_METHOD(223)
		J2CPP_DECLARE_METHOD(224)
		J2CPP_DECLARE_METHOD(225)
		J2CPP_DECLARE_METHOD(226)
		J2CPP_DECLARE_METHOD(227)
		J2CPP_DECLARE_METHOD(228)
		J2CPP_DECLARE_METHOD(229)
		J2CPP_DECLARE_METHOD(230)
		J2CPP_DECLARE_METHOD(231)
		J2CPP_DECLARE_METHOD(232)
		J2CPP_DECLARE_METHOD(233)
		J2CPP_DECLARE_METHOD(234)
		J2CPP_DECLARE_METHOD(235)
		J2CPP_DECLARE_METHOD(236)
		J2CPP_DECLARE_METHOD(237)
		J2CPP_DECLARE_METHOD(238)
		J2CPP_DECLARE_METHOD(239)
		J2CPP_DECLARE_METHOD(240)
		J2CPP_DECLARE_METHOD(241)
		J2CPP_DECLARE_METHOD(242)
		J2CPP_DECLARE_METHOD(243)
		J2CPP_DECLARE_METHOD(244)
		J2CPP_DECLARE_METHOD(245)
		J2CPP_DECLARE_METHOD(246)
		J2CPP_DECLARE_METHOD(247)
		J2CPP_DECLARE_METHOD(248)
		J2CPP_DECLARE_METHOD(249)
		J2CPP_DECLARE_METHOD(250)
		J2CPP_DECLARE_METHOD(251)
		J2CPP_DECLARE_METHOD(252)
		J2CPP_DECLARE_METHOD(253)
		J2CPP_DECLARE_METHOD(254)
		J2CPP_DECLARE_METHOD(255)
		J2CPP_DECLARE_METHOD(256)
		J2CPP_DECLARE_METHOD(257)
		J2CPP_DECLARE_METHOD(258)
		J2CPP_DECLARE_METHOD(259)
		J2CPP_DECLARE_METHOD(260)
		J2CPP_DECLARE_METHOD(261)
		J2CPP_DECLARE_METHOD(262)
		J2CPP_DECLARE_METHOD(263)
		J2CPP_DECLARE_METHOD(264)
		J2CPP_DECLARE_METHOD(265)
		J2CPP_DECLARE_METHOD(266)
		J2CPP_DECLARE_METHOD(267)
		J2CPP_DECLARE_METHOD(268)
		J2CPP_DECLARE_METHOD(269)
		J2CPP_DECLARE_METHOD(270)
		J2CPP_DECLARE_METHOD(271)
		J2CPP_DECLARE_METHOD(272)
		J2CPP_DECLARE_METHOD(273)
		J2CPP_DECLARE_METHOD(274)
		J2CPP_DECLARE_METHOD(275)
		J2CPP_DECLARE_METHOD(276)
		J2CPP_DECLARE_METHOD(277)
		J2CPP_DECLARE_METHOD(278)
		J2CPP_DECLARE_METHOD(279)
		J2CPP_DECLARE_METHOD(280)
		J2CPP_DECLARE_METHOD(281)
		J2CPP_DECLARE_METHOD(282)
		J2CPP_DECLARE_METHOD(283)
		J2CPP_DECLARE_METHOD(284)
		J2CPP_DECLARE_METHOD(285)
		J2CPP_DECLARE_METHOD(286)
		J2CPP_DECLARE_METHOD(287)
		J2CPP_DECLARE_METHOD(288)
		J2CPP_DECLARE_METHOD(289)
		J2CPP_DECLARE_METHOD(290)
		J2CPP_DECLARE_METHOD(291)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)
		J2CPP_DECLARE_FIELD(8)
		J2CPP_DECLARE_FIELD(9)
		J2CPP_DECLARE_FIELD(10)
		J2CPP_DECLARE_FIELD(11)
		J2CPP_DECLARE_FIELD(12)
		J2CPP_DECLARE_FIELD(13)
		J2CPP_DECLARE_FIELD(14)
		J2CPP_DECLARE_FIELD(15)
		J2CPP_DECLARE_FIELD(16)
		J2CPP_DECLARE_FIELD(17)
		J2CPP_DECLARE_FIELD(18)
		J2CPP_DECLARE_FIELD(19)
		J2CPP_DECLARE_FIELD(20)
		J2CPP_DECLARE_FIELD(21)
		J2CPP_DECLARE_FIELD(22)
		J2CPP_DECLARE_FIELD(23)
		J2CPP_DECLARE_FIELD(24)
		J2CPP_DECLARE_FIELD(25)
		J2CPP_DECLARE_FIELD(26)
		J2CPP_DECLARE_FIELD(27)
		J2CPP_DECLARE_FIELD(28)
		J2CPP_DECLARE_FIELD(29)
		J2CPP_DECLARE_FIELD(30)
		J2CPP_DECLARE_FIELD(31)
		J2CPP_DECLARE_FIELD(32)
		J2CPP_DECLARE_FIELD(33)
		J2CPP_DECLARE_FIELD(34)
		J2CPP_DECLARE_FIELD(35)
		J2CPP_DECLARE_FIELD(36)
		J2CPP_DECLARE_FIELD(37)
		J2CPP_DECLARE_FIELD(38)
		J2CPP_DECLARE_FIELD(39)
		J2CPP_DECLARE_FIELD(40)
		J2CPP_DECLARE_FIELD(41)
		J2CPP_DECLARE_FIELD(42)
		J2CPP_DECLARE_FIELD(43)
		J2CPP_DECLARE_FIELD(44)
		J2CPP_DECLARE_FIELD(45)
		J2CPP_DECLARE_FIELD(46)
		J2CPP_DECLARE_FIELD(47)
		J2CPP_DECLARE_FIELD(48)
		J2CPP_DECLARE_FIELD(49)
		J2CPP_DECLARE_FIELD(50)
		J2CPP_DECLARE_FIELD(51)
		J2CPP_DECLARE_FIELD(52)
		J2CPP_DECLARE_FIELD(53)
		J2CPP_DECLARE_FIELD(54)
		J2CPP_DECLARE_FIELD(55)
		J2CPP_DECLARE_FIELD(56)

		typedef View_::OnFocusChangeListener OnFocusChangeListener;
		typedef View_::BaseSavedState BaseSavedState;
		typedef View_::OnKeyListener OnKeyListener;
		typedef View_::OnCreateContextMenuListener OnCreateContextMenuListener;
		typedef View_::OnClickListener OnClickListener;
		typedef View_::OnLongClickListener OnLongClickListener;
		typedef View_::MeasureSpec MeasureSpec;
		typedef View_::OnTouchListener OnTouchListener;

		explicit View(jobject jobj)
		: object<View>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::view::accessibility::AccessibilityEventSource>() const;
		operator local_ref<android::graphics::drawable::Drawable_::Callback>() const;


		View(local_ref< android::content::Context > const&);
		View(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&);
		View(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&, jint);
		jint getVerticalFadingEdgeLength();
		void setFadingEdgeLength(jint);
		jint getHorizontalFadingEdgeLength();
		jint getVerticalScrollbarWidth();
		void setOnFocusChangeListener(local_ref< android::view::View_::OnFocusChangeListener >  const&);
		local_ref< android::view::View_::OnFocusChangeListener > getOnFocusChangeListener();
		void setOnClickListener(local_ref< android::view::View_::OnClickListener >  const&);
		void setOnLongClickListener(local_ref< android::view::View_::OnLongClickListener >  const&);
		void setOnCreateContextMenuListener(local_ref< android::view::View_::OnCreateContextMenuListener >  const&);
		jboolean performClick();
		jboolean performLongClick();
		jboolean showContextMenu();
		void setOnKeyListener(local_ref< android::view::View_::OnKeyListener >  const&);
		void setOnTouchListener(local_ref< android::view::View_::OnTouchListener >  const&);
		jboolean requestRectangleOnScreen(local_ref< android::graphics::Rect >  const&);
		jboolean requestRectangleOnScreen(local_ref< android::graphics::Rect >  const&, jboolean);
		void clearFocus();
		jboolean hasFocus();
		jboolean hasFocusable();
		void sendAccessibilityEvent(jint);
		void sendAccessibilityEventUnchecked(local_ref< android::view::accessibility::AccessibilityEvent >  const&);
		jboolean dispatchPopulateAccessibilityEvent(local_ref< android::view::accessibility::AccessibilityEvent >  const&);
		local_ref< java::lang::CharSequence > getContentDescription();
		void setContentDescription(local_ref< java::lang::CharSequence >  const&);
		jboolean isFocused();
		local_ref< android::view::View > findFocus();
		void setScrollContainer(jboolean);
		jint getDrawingCacheQuality();
		void setDrawingCacheQuality(jint);
		jboolean getKeepScreenOn();
		void setKeepScreenOn(jboolean);
		jint getNextFocusLeftId();
		void setNextFocusLeftId(jint);
		jint getNextFocusRightId();
		void setNextFocusRightId(jint);
		jint getNextFocusUpId();
		void setNextFocusUpId(jint);
		jint getNextFocusDownId();
		void setNextFocusDownId(jint);
		jboolean isShown();
		jint getVisibility();
		void setVisibility(jint);
		jboolean isEnabled();
		void setEnabled(jboolean);
		void setFocusable(jboolean);
		void setFocusableInTouchMode(jboolean);
		void setSoundEffectsEnabled(jboolean);
		jboolean isSoundEffectsEnabled();
		void setHapticFeedbackEnabled(jboolean);
		jboolean isHapticFeedbackEnabled();
		void setWillNotDraw(jboolean);
		jboolean willNotDraw();
		void setWillNotCacheDrawing(jboolean);
		jboolean willNotCacheDrawing();
		jboolean isClickable();
		void setClickable(jboolean);
		jboolean isLongClickable();
		void setLongClickable(jboolean);
		void setPressed(jboolean);
		jboolean isPressed();
		jboolean isSaveEnabled();
		void setSaveEnabled(jboolean);
		jboolean getFilterTouchesWhenObscured();
		void setFilterTouchesWhenObscured(jboolean);
		jboolean isFocusable();
		jboolean isFocusableInTouchMode();
		local_ref< android::view::View > focusSearch(jint);
		jboolean dispatchUnhandledMove(local_ref< android::view::View >  const&, jint);
		local_ref< java::util::ArrayList > getFocusables(jint);
		void addFocusables(local_ref< java::util::ArrayList >  const&, jint);
		void addFocusables(local_ref< java::util::ArrayList >  const&, jint, jint);
		local_ref< java::util::ArrayList > getTouchables();
		void addTouchables(local_ref< java::util::ArrayList >  const&);
		jboolean requestFocus();
		jboolean requestFocus(jint);
		jboolean requestFocus(jint, local_ref< android::graphics::Rect >  const&);
		jboolean requestFocusFromTouch();
		void onStartTemporaryDetach();
		void onFinishTemporaryDetach();
		local_ref< android::view::KeyEvent_::DispatcherState > getKeyDispatcherState();
		jboolean dispatchKeyEventPreIme(local_ref< android::view::KeyEvent >  const&);
		jboolean dispatchKeyEvent(local_ref< android::view::KeyEvent >  const&);
		jboolean dispatchKeyShortcutEvent(local_ref< android::view::KeyEvent >  const&);
		jboolean dispatchTouchEvent(local_ref< android::view::MotionEvent >  const&);
		jboolean onFilterTouchEventForSecurity(local_ref< android::view::MotionEvent >  const&);
		jboolean dispatchTrackballEvent(local_ref< android::view::MotionEvent >  const&);
		void dispatchWindowFocusChanged(jboolean);
		void onWindowFocusChanged(jboolean);
		jboolean hasWindowFocus();
		void dispatchDisplayHint(jint);
		void dispatchWindowVisibilityChanged(jint);
		jint getWindowVisibility();
		void getWindowVisibleDisplayFrame(local_ref< android::graphics::Rect >  const&);
		void dispatchConfigurationChanged(local_ref< android::content::res::Configuration >  const&);
		jboolean isInTouchMode();
		local_ref< android::content::Context > getContext();
		jboolean onKeyPreIme(jint, local_ref< android::view::KeyEvent >  const&);
		jboolean onKeyDown(jint, local_ref< android::view::KeyEvent >  const&);
		jboolean onKeyLongPress(jint, local_ref< android::view::KeyEvent >  const&);
		jboolean onKeyUp(jint, local_ref< android::view::KeyEvent >  const&);
		jboolean onKeyMultiple(jint, jint, local_ref< android::view::KeyEvent >  const&);
		jboolean onKeyShortcut(jint, local_ref< android::view::KeyEvent >  const&);
		jboolean onCheckIsTextEditor();
		local_ref< android::view::inputmethod::InputConnection > onCreateInputConnection(local_ref< android::view::inputmethod::EditorInfo >  const&);
		jboolean checkInputConnectionProxy(local_ref< android::view::View >  const&);
		void createContextMenu(local_ref< android::view::ContextMenu >  const&);
		jboolean onTrackballEvent(local_ref< android::view::MotionEvent >  const&);
		jboolean onTouchEvent(local_ref< android::view::MotionEvent >  const&);
		void cancelLongPress();
		void setTouchDelegate(local_ref< android::view::TouchDelegate >  const&);
		local_ref< android::view::TouchDelegate > getTouchDelegate();
		void bringToFront();
		local_ref< android::view::ViewParent > getParent();
		jint getScrollX();
		jint getScrollY();
		jint getWidth();
		jint getHeight();
		void getDrawingRect(local_ref< android::graphics::Rect >  const&);
		jint getMeasuredWidth();
		jint getMeasuredHeight();
		jint getTop();
		jint getBottom();
		jint getLeft();
		jint getRight();
		void getHitRect(local_ref< android::graphics::Rect >  const&);
		void getFocusedRect(local_ref< android::graphics::Rect >  const&);
		jboolean getGlobalVisibleRect(local_ref< android::graphics::Rect >  const&, local_ref< android::graphics::Point >  const&);
		jboolean getGlobalVisibleRect(local_ref< android::graphics::Rect >  const&);
		jboolean getLocalVisibleRect(local_ref< android::graphics::Rect >  const&);
		void offsetTopAndBottom(jint);
		void offsetLeftAndRight(jint);
		local_ref< android::view::ViewGroup_::LayoutParams > getLayoutParams();
		void setLayoutParams(local_ref< android::view::ViewGroup_::LayoutParams >  const&);
		void scrollTo(jint, jint);
		void scrollBy(jint, jint);
		void invalidate(local_ref< android::graphics::Rect >  const&);
		void invalidate(jint, jint, jint, jint);
		void invalidate();
		jboolean isOpaque();
		local_ref< android::os::Handler > getHandler();
		jboolean post(local_ref< java::lang::Runnable >  const&);
		jboolean postDelayed(local_ref< java::lang::Runnable >  const&, jlong);
		jboolean removeCallbacks(local_ref< java::lang::Runnable >  const&);
		void postInvalidate();
		void postInvalidate(jint, jint, jint, jint);
		void postInvalidateDelayed(jlong);
		void postInvalidateDelayed(jlong, jint, jint, jint, jint);
		void computeScroll();
		jboolean isHorizontalFadingEdgeEnabled();
		void setHorizontalFadingEdgeEnabled(jboolean);
		jboolean isVerticalFadingEdgeEnabled();
		void setVerticalFadingEdgeEnabled(jboolean);
		jboolean isHorizontalScrollBarEnabled();
		void setHorizontalScrollBarEnabled(jboolean);
		jboolean isVerticalScrollBarEnabled();
		void setVerticalScrollBarEnabled(jboolean);
		void setScrollbarFadingEnabled(jboolean);
		jboolean isScrollbarFadingEnabled();
		void setScrollBarStyle(jint);
		jint getScrollBarStyle();
		local_ref< android::os::IBinder > getWindowToken();
		local_ref< android::os::IBinder > getApplicationWindowToken();
		void saveHierarchyState(local_ref< android::util::SparseArray >  const&);
		void restoreHierarchyState(local_ref< android::util::SparseArray >  const&);
		jlong getDrawingTime();
		void setDuplicateParentStateEnabled(jboolean);
		jboolean isDuplicateParentStateEnabled();
		void setDrawingCacheEnabled(jboolean);
		jboolean isDrawingCacheEnabled();
		local_ref< android::graphics::Bitmap > getDrawingCache();
		local_ref< android::graphics::Bitmap > getDrawingCache(jboolean);
		void destroyDrawingCache();
		void setDrawingCacheBackgroundColor(jint);
		jint getDrawingCacheBackgroundColor();
		void buildDrawingCache();
		void buildDrawingCache(jboolean);
		jboolean isInEditMode();
		void draw(local_ref< android::graphics::Canvas >  const&);
		jint getSolidColor();
		jboolean isLayoutRequested();
		void layout(jint, jint, jint, jint);
		local_ref< android::content::res::Resources > getResources();
		void invalidateDrawable(local_ref< android::graphics::drawable::Drawable >  const&);
		void scheduleDrawable(local_ref< android::graphics::drawable::Drawable >  const&, local_ref< java::lang::Runnable >  const&, jlong);
		void unscheduleDrawable(local_ref< android::graphics::drawable::Drawable >  const&, local_ref< java::lang::Runnable >  const&);
		void unscheduleDrawable(local_ref< android::graphics::drawable::Drawable >  const&);
		void refreshDrawableState();
		local_ref< array<jint,1> > getDrawableState();
		void setBackgroundColor(jint);
		void setBackgroundResource(jint);
		void setBackgroundDrawable(local_ref< android::graphics::drawable::Drawable >  const&);
		local_ref< android::graphics::drawable::Drawable > getBackground();
		void setPadding(jint, jint, jint, jint);
		jint getPaddingTop();
		jint getPaddingBottom();
		jint getPaddingLeft();
		jint getPaddingRight();
		void setSelected(jboolean);
		jboolean isSelected();
		local_ref< android::view::ViewTreeObserver > getViewTreeObserver();
		local_ref< android::view::View > getRootView();
		void getLocationOnScreen(local_ref< array<jint,1> >  const&);
		void getLocationInWindow(local_ref< array<jint,1> >  const&);
		local_ref< android::view::View > findViewById(jint);
		local_ref< android::view::View > findViewWithTag(local_ref< java::lang::Object >  const&);
		void setId(jint);
		jint getId();
		local_ref< java::lang::Object > getTag();
		void setTag(local_ref< java::lang::Object >  const&);
		local_ref< java::lang::Object > getTag(jint);
		void setTag(jint, local_ref< java::lang::Object >  const&);
		jint getBaseline();
		void requestLayout();
		void forceLayout();
		void measure(jint, jint);
		static jint resolveSize(jint, jint);
		static jint getDefaultSize(jint, jint);
		void setMinimumHeight(jint);
		void setMinimumWidth(jint);
		local_ref< android::view::animation::Animation > getAnimation();
		void startAnimation(local_ref< android::view::animation::Animation >  const&);
		void clearAnimation();
		void setAnimation(local_ref< android::view::animation::Animation >  const&);
		void playSoundEffect(jint);
		jboolean performHapticFeedback(jint);
		jboolean performHapticFeedback(jint, jint);
		static local_ref< android::view::View > inflate(local_ref< android::content::Context >  const&, jint, local_ref< android::view::ViewGroup >  const&);
		jint getOverScrollMode();
		void setOverScrollMode(jint);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > NO_ID;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > VISIBLE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > INVISIBLE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > GONE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jint > DRAWING_CACHE_QUALITY_LOW;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), jint > DRAWING_CACHE_QUALITY_HIGH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), jint > DRAWING_CACHE_QUALITY_AUTO;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), jint > SCROLLBARS_INSIDE_OVERLAY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(9), J2CPP_FIELD_SIGNATURE(9), jint > SCROLLBARS_INSIDE_INSET;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(10), J2CPP_FIELD_SIGNATURE(10), jint > SCROLLBARS_OUTSIDE_OVERLAY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(11), J2CPP_FIELD_SIGNATURE(11), jint > SCROLLBARS_OUTSIDE_INSET;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(12), J2CPP_FIELD_SIGNATURE(12), jint > KEEP_SCREEN_ON;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(13), J2CPP_FIELD_SIGNATURE(13), jint > SOUND_EFFECTS_ENABLED;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(14), J2CPP_FIELD_SIGNATURE(14), jint > HAPTIC_FEEDBACK_ENABLED;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(15), J2CPP_FIELD_SIGNATURE(15), jint > FOCUSABLES_ALL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(16), J2CPP_FIELD_SIGNATURE(16), jint > FOCUSABLES_TOUCH_MODE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(17), J2CPP_FIELD_SIGNATURE(17), jint > FOCUS_BACKWARD;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(18), J2CPP_FIELD_SIGNATURE(18), jint > FOCUS_FORWARD;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(19), J2CPP_FIELD_SIGNATURE(19), jint > FOCUS_LEFT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(20), J2CPP_FIELD_SIGNATURE(20), jint > FOCUS_UP;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(21), J2CPP_FIELD_SIGNATURE(21), jint > FOCUS_RIGHT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(22), J2CPP_FIELD_SIGNATURE(22), jint > FOCUS_DOWN;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(54), J2CPP_FIELD_SIGNATURE(54), jint > OVER_SCROLL_ALWAYS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(55), J2CPP_FIELD_SIGNATURE(55), jint > OVER_SCROLL_IF_CONTENT_SCROLLS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(56), J2CPP_FIELD_SIGNATURE(56), jint > OVER_SCROLL_NEVER;
	}; //class View

} //namespace view
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_VIEW_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_VIEW_HPP_IMPL
#define J2CPP_ANDROID_VIEW_VIEW_HPP_IMPL

namespace j2cpp {




android::view::View_::OnFocusChangeListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void android::view::View_::OnFocusChangeListener::onFocusChange(local_ref< android::view::View > const &a0, jboolean a1)
{
	return call_method<
		android::view::View_::OnFocusChangeListener::J2CPP_CLASS_NAME,
		android::view::View_::OnFocusChangeListener::J2CPP_METHOD_NAME(0),
		android::view::View_::OnFocusChangeListener::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject(), a0, a1);
}


J2CPP_DEFINE_CLASS(android::view::View_::OnFocusChangeListener,"android/view/View$OnFocusChangeListener")
J2CPP_DEFINE_METHOD(android::view::View_::OnFocusChangeListener,0,"onFocusChange","(Landroid/view/View;Z)V")


android::view::View_::BaseSavedState::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::view::View_::BaseSavedState::operator local_ref<android::view::AbsSavedState>() const
{
	return local_ref<android::view::AbsSavedState>(get_jobject());
}

android::view::View_::BaseSavedState::operator local_ref<android::os::Parcelable>() const
{
	return local_ref<android::os::Parcelable>(get_jobject());
}


android::view::View_::BaseSavedState::BaseSavedState(local_ref< android::os::Parcel > const &a0)
: object<android::view::View_::BaseSavedState>(
	call_new_object<
		android::view::View_::BaseSavedState::J2CPP_CLASS_NAME,
		android::view::View_::BaseSavedState::J2CPP_METHOD_NAME(0),
		android::view::View_::BaseSavedState::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



android::view::View_::BaseSavedState::BaseSavedState(local_ref< android::os::Parcelable > const &a0)
: object<android::view::View_::BaseSavedState>(
	call_new_object<
		android::view::View_::BaseSavedState::J2CPP_CLASS_NAME,
		android::view::View_::BaseSavedState::J2CPP_METHOD_NAME(1),
		android::view::View_::BaseSavedState::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}




static_field<
	android::view::View_::BaseSavedState::J2CPP_CLASS_NAME,
	android::view::View_::BaseSavedState::J2CPP_FIELD_NAME(0),
	android::view::View_::BaseSavedState::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::os::Parcelable_::Creator >
> android::view::View_::BaseSavedState::CREATOR;


J2CPP_DEFINE_CLASS(android::view::View_::BaseSavedState,"android/view/View$BaseSavedState")
J2CPP_DEFINE_METHOD(android::view::View_::BaseSavedState,0,"<init>","(Landroid/os/Parcel;)V")
J2CPP_DEFINE_METHOD(android::view::View_::BaseSavedState,1,"<init>","(Landroid/os/Parcelable;)V")
J2CPP_DEFINE_METHOD(android::view::View_::BaseSavedState,2,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::view::View_::BaseSavedState,0,"CREATOR","Landroid/os/Parcelable$Creator;")


android::view::View_::OnKeyListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

jboolean android::view::View_::OnKeyListener::onKey(local_ref< android::view::View > const &a0, jint a1, local_ref< android::view::KeyEvent > const &a2)
{
	return call_method<
		android::view::View_::OnKeyListener::J2CPP_CLASS_NAME,
		android::view::View_::OnKeyListener::J2CPP_METHOD_NAME(0),
		android::view::View_::OnKeyListener::J2CPP_METHOD_SIGNATURE(0), 
		jboolean
	>(get_jobject(), a0, a1, a2);
}


J2CPP_DEFINE_CLASS(android::view::View_::OnKeyListener,"android/view/View$OnKeyListener")
J2CPP_DEFINE_METHOD(android::view::View_::OnKeyListener,0,"onKey","(Landroid/view/View;ILandroid/view/KeyEvent;)Z")


android::view::View_::OnCreateContextMenuListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void android::view::View_::OnCreateContextMenuListener::onCreateContextMenu(local_ref< android::view::ContextMenu > const &a0, local_ref< android::view::View > const &a1, local_ref< android::view::ContextMenu_::ContextMenuInfo > const &a2)
{
	return call_method<
		android::view::View_::OnCreateContextMenuListener::J2CPP_CLASS_NAME,
		android::view::View_::OnCreateContextMenuListener::J2CPP_METHOD_NAME(0),
		android::view::View_::OnCreateContextMenuListener::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject(), a0, a1, a2);
}


J2CPP_DEFINE_CLASS(android::view::View_::OnCreateContextMenuListener,"android/view/View$OnCreateContextMenuListener")
J2CPP_DEFINE_METHOD(android::view::View_::OnCreateContextMenuListener,0,"onCreateContextMenu","(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V")


android::view::View_::OnClickListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void android::view::View_::OnClickListener::onClick(local_ref< android::view::View > const &a0)
{
	return call_method<
		android::view::View_::OnClickListener::J2CPP_CLASS_NAME,
		android::view::View_::OnClickListener::J2CPP_METHOD_NAME(0),
		android::view::View_::OnClickListener::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(android::view::View_::OnClickListener,"android/view/View$OnClickListener")
J2CPP_DEFINE_METHOD(android::view::View_::OnClickListener,0,"onClick","(Landroid/view/View;)V")


android::view::View_::OnLongClickListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

jboolean android::view::View_::OnLongClickListener::onLongClick(local_ref< android::view::View > const &a0)
{
	return call_method<
		android::view::View_::OnLongClickListener::J2CPP_CLASS_NAME,
		android::view::View_::OnLongClickListener::J2CPP_METHOD_NAME(0),
		android::view::View_::OnLongClickListener::J2CPP_METHOD_SIGNATURE(0), 
		jboolean
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(android::view::View_::OnLongClickListener,"android/view/View$OnLongClickListener")
J2CPP_DEFINE_METHOD(android::view::View_::OnLongClickListener,0,"onLongClick","(Landroid/view/View;)Z")


android::view::View_::MeasureSpec::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::view::View_::MeasureSpec::MeasureSpec()
: object<android::view::View_::MeasureSpec>(
	call_new_object<
		android::view::View_::MeasureSpec::J2CPP_CLASS_NAME,
		android::view::View_::MeasureSpec::J2CPP_METHOD_NAME(0),
		android::view::View_::MeasureSpec::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


jint android::view::View_::MeasureSpec::makeMeasureSpec(jint a0, jint a1)
{
	return call_static_method<
		android::view::View_::MeasureSpec::J2CPP_CLASS_NAME,
		android::view::View_::MeasureSpec::J2CPP_METHOD_NAME(1),
		android::view::View_::MeasureSpec::J2CPP_METHOD_SIGNATURE(1), 
		jint
	>(a0, a1);
}

jint android::view::View_::MeasureSpec::getMode(jint a0)
{
	return call_static_method<
		android::view::View_::MeasureSpec::J2CPP_CLASS_NAME,
		android::view::View_::MeasureSpec::J2CPP_METHOD_NAME(2),
		android::view::View_::MeasureSpec::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(a0);
}

jint android::view::View_::MeasureSpec::getSize(jint a0)
{
	return call_static_method<
		android::view::View_::MeasureSpec::J2CPP_CLASS_NAME,
		android::view::View_::MeasureSpec::J2CPP_METHOD_NAME(3),
		android::view::View_::MeasureSpec::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(a0);
}

local_ref< java::lang::String > android::view::View_::MeasureSpec::toString(jint a0)
{
	return call_static_method<
		android::view::View_::MeasureSpec::J2CPP_CLASS_NAME,
		android::view::View_::MeasureSpec::J2CPP_METHOD_NAME(4),
		android::view::View_::MeasureSpec::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(a0);
}


static_field<
	android::view::View_::MeasureSpec::J2CPP_CLASS_NAME,
	android::view::View_::MeasureSpec::J2CPP_FIELD_NAME(0),
	android::view::View_::MeasureSpec::J2CPP_FIELD_SIGNATURE(0),
	jint
> android::view::View_::MeasureSpec::UNSPECIFIED;

static_field<
	android::view::View_::MeasureSpec::J2CPP_CLASS_NAME,
	android::view::View_::MeasureSpec::J2CPP_FIELD_NAME(1),
	android::view::View_::MeasureSpec::J2CPP_FIELD_SIGNATURE(1),
	jint
> android::view::View_::MeasureSpec::EXACTLY;

static_field<
	android::view::View_::MeasureSpec::J2CPP_CLASS_NAME,
	android::view::View_::MeasureSpec::J2CPP_FIELD_NAME(2),
	android::view::View_::MeasureSpec::J2CPP_FIELD_SIGNATURE(2),
	jint
> android::view::View_::MeasureSpec::AT_MOST;


J2CPP_DEFINE_CLASS(android::view::View_::MeasureSpec,"android/view/View$MeasureSpec")
J2CPP_DEFINE_METHOD(android::view::View_::MeasureSpec,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::view::View_::MeasureSpec,1,"makeMeasureSpec","(II)I")
J2CPP_DEFINE_METHOD(android::view::View_::MeasureSpec,2,"getMode","(I)I")
J2CPP_DEFINE_METHOD(android::view::View_::MeasureSpec,3,"getSize","(I)I")
J2CPP_DEFINE_METHOD(android::view::View_::MeasureSpec,4,"toString","(I)Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::view::View_::MeasureSpec,0,"UNSPECIFIED","I")
J2CPP_DEFINE_FIELD(android::view::View_::MeasureSpec,1,"EXACTLY","I")
J2CPP_DEFINE_FIELD(android::view::View_::MeasureSpec,2,"AT_MOST","I")


android::view::View_::OnTouchListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

jboolean android::view::View_::OnTouchListener::onTouch(local_ref< android::view::View > const &a0, local_ref< android::view::MotionEvent > const &a1)
{
	return call_method<
		android::view::View_::OnTouchListener::J2CPP_CLASS_NAME,
		android::view::View_::OnTouchListener::J2CPP_METHOD_NAME(0),
		android::view::View_::OnTouchListener::J2CPP_METHOD_SIGNATURE(0), 
		jboolean
	>(get_jobject(), a0, a1);
}


J2CPP_DEFINE_CLASS(android::view::View_::OnTouchListener,"android/view/View$OnTouchListener")
J2CPP_DEFINE_METHOD(android::view::View_::OnTouchListener,0,"onTouch","(Landroid/view/View;Landroid/view/MotionEvent;)Z")



android::view::View::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::view::View::operator local_ref<android::view::accessibility::AccessibilityEventSource>() const
{
	return local_ref<android::view::accessibility::AccessibilityEventSource>(get_jobject());
}

android::view::View::operator local_ref<android::graphics::drawable::Drawable_::Callback>() const
{
	return local_ref<android::graphics::drawable::Drawable_::Callback>(get_jobject());
}


android::view::View::View(local_ref< android::content::Context > const &a0)
: object<android::view::View>(
	call_new_object<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(0),
		android::view::View::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



android::view::View::View(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
: object<android::view::View>(
	call_new_object<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(1),
		android::view::View::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1)
)
{
}



android::view::View::View(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1, jint a2)
: object<android::view::View>(
	call_new_object<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(2),
		android::view::View::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1, a2)
)
{
}



jint android::view::View::getVerticalFadingEdgeLength()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(4),
		android::view::View::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

void android::view::View::setFadingEdgeLength(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(5),
		android::view::View::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getHorizontalFadingEdgeLength()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(6),
		android::view::View::J2CPP_METHOD_SIGNATURE(6), 
		jint
	>(get_jobject());
}

jint android::view::View::getVerticalScrollbarWidth()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(7),
		android::view::View::J2CPP_METHOD_SIGNATURE(7), 
		jint
	>(get_jobject());
}



void android::view::View::setOnFocusChangeListener(local_ref< android::view::View_::OnFocusChangeListener > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(10),
		android::view::View::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(get_jobject(), a0);
}

local_ref< android::view::View_::OnFocusChangeListener > android::view::View::getOnFocusChangeListener()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(11),
		android::view::View::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< android::view::View_::OnFocusChangeListener >
	>(get_jobject());
}

void android::view::View::setOnClickListener(local_ref< android::view::View_::OnClickListener > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(12),
		android::view::View::J2CPP_METHOD_SIGNATURE(12), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setOnLongClickListener(local_ref< android::view::View_::OnLongClickListener > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(13),
		android::view::View::J2CPP_METHOD_SIGNATURE(13), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setOnCreateContextMenuListener(local_ref< android::view::View_::OnCreateContextMenuListener > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(14),
		android::view::View::J2CPP_METHOD_SIGNATURE(14), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::performClick()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(15),
		android::view::View::J2CPP_METHOD_SIGNATURE(15), 
		jboolean
	>(get_jobject());
}

jboolean android::view::View::performLongClick()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(16),
		android::view::View::J2CPP_METHOD_SIGNATURE(16), 
		jboolean
	>(get_jobject());
}

jboolean android::view::View::showContextMenu()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(17),
		android::view::View::J2CPP_METHOD_SIGNATURE(17), 
		jboolean
	>(get_jobject());
}

void android::view::View::setOnKeyListener(local_ref< android::view::View_::OnKeyListener > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(18),
		android::view::View::J2CPP_METHOD_SIGNATURE(18), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setOnTouchListener(local_ref< android::view::View_::OnTouchListener > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(19),
		android::view::View::J2CPP_METHOD_SIGNATURE(19), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::requestRectangleOnScreen(local_ref< android::graphics::Rect > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(20),
		android::view::View::J2CPP_METHOD_SIGNATURE(20), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::requestRectangleOnScreen(local_ref< android::graphics::Rect > const &a0, jboolean a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(21),
		android::view::View::J2CPP_METHOD_SIGNATURE(21), 
		jboolean
	>(get_jobject(), a0, a1);
}

void android::view::View::clearFocus()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(22),
		android::view::View::J2CPP_METHOD_SIGNATURE(22), 
		void
	>(get_jobject());
}

jboolean android::view::View::hasFocus()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(23),
		android::view::View::J2CPP_METHOD_SIGNATURE(23), 
		jboolean
	>(get_jobject());
}

jboolean android::view::View::hasFocusable()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(24),
		android::view::View::J2CPP_METHOD_SIGNATURE(24), 
		jboolean
	>(get_jobject());
}


void android::view::View::sendAccessibilityEvent(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(26),
		android::view::View::J2CPP_METHOD_SIGNATURE(26), 
		void
	>(get_jobject(), a0);
}

void android::view::View::sendAccessibilityEventUnchecked(local_ref< android::view::accessibility::AccessibilityEvent > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(27),
		android::view::View::J2CPP_METHOD_SIGNATURE(27), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::dispatchPopulateAccessibilityEvent(local_ref< android::view::accessibility::AccessibilityEvent > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(28),
		android::view::View::J2CPP_METHOD_SIGNATURE(28), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::lang::CharSequence > android::view::View::getContentDescription()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(29),
		android::view::View::J2CPP_METHOD_SIGNATURE(29), 
		local_ref< java::lang::CharSequence >
	>(get_jobject());
}

void android::view::View::setContentDescription(local_ref< java::lang::CharSequence > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(30),
		android::view::View::J2CPP_METHOD_SIGNATURE(30), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isFocused()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(31),
		android::view::View::J2CPP_METHOD_SIGNATURE(31), 
		jboolean
	>(get_jobject());
}

local_ref< android::view::View > android::view::View::findFocus()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(32),
		android::view::View::J2CPP_METHOD_SIGNATURE(32), 
		local_ref< android::view::View >
	>(get_jobject());
}

void android::view::View::setScrollContainer(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(33),
		android::view::View::J2CPP_METHOD_SIGNATURE(33), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getDrawingCacheQuality()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(34),
		android::view::View::J2CPP_METHOD_SIGNATURE(34), 
		jint
	>(get_jobject());
}

void android::view::View::setDrawingCacheQuality(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(35),
		android::view::View::J2CPP_METHOD_SIGNATURE(35), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::getKeepScreenOn()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(36),
		android::view::View::J2CPP_METHOD_SIGNATURE(36), 
		jboolean
	>(get_jobject());
}

void android::view::View::setKeepScreenOn(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(37),
		android::view::View::J2CPP_METHOD_SIGNATURE(37), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getNextFocusLeftId()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(38),
		android::view::View::J2CPP_METHOD_SIGNATURE(38), 
		jint
	>(get_jobject());
}

void android::view::View::setNextFocusLeftId(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(39),
		android::view::View::J2CPP_METHOD_SIGNATURE(39), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getNextFocusRightId()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(40),
		android::view::View::J2CPP_METHOD_SIGNATURE(40), 
		jint
	>(get_jobject());
}

void android::view::View::setNextFocusRightId(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(41),
		android::view::View::J2CPP_METHOD_SIGNATURE(41), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getNextFocusUpId()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(42),
		android::view::View::J2CPP_METHOD_SIGNATURE(42), 
		jint
	>(get_jobject());
}

void android::view::View::setNextFocusUpId(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(43),
		android::view::View::J2CPP_METHOD_SIGNATURE(43), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getNextFocusDownId()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(44),
		android::view::View::J2CPP_METHOD_SIGNATURE(44), 
		jint
	>(get_jobject());
}

void android::view::View::setNextFocusDownId(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(45),
		android::view::View::J2CPP_METHOD_SIGNATURE(45), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isShown()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(46),
		android::view::View::J2CPP_METHOD_SIGNATURE(46), 
		jboolean
	>(get_jobject());
}


jint android::view::View::getVisibility()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(48),
		android::view::View::J2CPP_METHOD_SIGNATURE(48), 
		jint
	>(get_jobject());
}

void android::view::View::setVisibility(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(49),
		android::view::View::J2CPP_METHOD_SIGNATURE(49), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(50),
		android::view::View::J2CPP_METHOD_SIGNATURE(50), 
		jboolean
	>(get_jobject());
}

void android::view::View::setEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(51),
		android::view::View::J2CPP_METHOD_SIGNATURE(51), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setFocusable(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(52),
		android::view::View::J2CPP_METHOD_SIGNATURE(52), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setFocusableInTouchMode(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(53),
		android::view::View::J2CPP_METHOD_SIGNATURE(53), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setSoundEffectsEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(54),
		android::view::View::J2CPP_METHOD_SIGNATURE(54), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isSoundEffectsEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(55),
		android::view::View::J2CPP_METHOD_SIGNATURE(55), 
		jboolean
	>(get_jobject());
}

void android::view::View::setHapticFeedbackEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(56),
		android::view::View::J2CPP_METHOD_SIGNATURE(56), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isHapticFeedbackEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(57),
		android::view::View::J2CPP_METHOD_SIGNATURE(57), 
		jboolean
	>(get_jobject());
}

void android::view::View::setWillNotDraw(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(58),
		android::view::View::J2CPP_METHOD_SIGNATURE(58), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::willNotDraw()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(59),
		android::view::View::J2CPP_METHOD_SIGNATURE(59), 
		jboolean
	>(get_jobject());
}

void android::view::View::setWillNotCacheDrawing(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(60),
		android::view::View::J2CPP_METHOD_SIGNATURE(60), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::willNotCacheDrawing()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(61),
		android::view::View::J2CPP_METHOD_SIGNATURE(61), 
		jboolean
	>(get_jobject());
}

jboolean android::view::View::isClickable()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(62),
		android::view::View::J2CPP_METHOD_SIGNATURE(62), 
		jboolean
	>(get_jobject());
}

void android::view::View::setClickable(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(63),
		android::view::View::J2CPP_METHOD_SIGNATURE(63), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isLongClickable()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(64),
		android::view::View::J2CPP_METHOD_SIGNATURE(64), 
		jboolean
	>(get_jobject());
}

void android::view::View::setLongClickable(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(65),
		android::view::View::J2CPP_METHOD_SIGNATURE(65), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setPressed(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(66),
		android::view::View::J2CPP_METHOD_SIGNATURE(66), 
		void
	>(get_jobject(), a0);
}


jboolean android::view::View::isPressed()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(68),
		android::view::View::J2CPP_METHOD_SIGNATURE(68), 
		jboolean
	>(get_jobject());
}

jboolean android::view::View::isSaveEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(69),
		android::view::View::J2CPP_METHOD_SIGNATURE(69), 
		jboolean
	>(get_jobject());
}

void android::view::View::setSaveEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(70),
		android::view::View::J2CPP_METHOD_SIGNATURE(70), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::getFilterTouchesWhenObscured()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(71),
		android::view::View::J2CPP_METHOD_SIGNATURE(71), 
		jboolean
	>(get_jobject());
}

void android::view::View::setFilterTouchesWhenObscured(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(72),
		android::view::View::J2CPP_METHOD_SIGNATURE(72), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isFocusable()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(73),
		android::view::View::J2CPP_METHOD_SIGNATURE(73), 
		jboolean
	>(get_jobject());
}

jboolean android::view::View::isFocusableInTouchMode()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(74),
		android::view::View::J2CPP_METHOD_SIGNATURE(74), 
		jboolean
	>(get_jobject());
}

local_ref< android::view::View > android::view::View::focusSearch(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(75),
		android::view::View::J2CPP_METHOD_SIGNATURE(75), 
		local_ref< android::view::View >
	>(get_jobject(), a0);
}

jboolean android::view::View::dispatchUnhandledMove(local_ref< android::view::View > const &a0, jint a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(76),
		android::view::View::J2CPP_METHOD_SIGNATURE(76), 
		jboolean
	>(get_jobject(), a0, a1);
}

local_ref< java::util::ArrayList > android::view::View::getFocusables(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(77),
		android::view::View::J2CPP_METHOD_SIGNATURE(77), 
		local_ref< java::util::ArrayList >
	>(get_jobject(), a0);
}

void android::view::View::addFocusables(local_ref< java::util::ArrayList > const &a0, jint a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(78),
		android::view::View::J2CPP_METHOD_SIGNATURE(78), 
		void
	>(get_jobject(), a0, a1);
}

void android::view::View::addFocusables(local_ref< java::util::ArrayList > const &a0, jint a1, jint a2)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(79),
		android::view::View::J2CPP_METHOD_SIGNATURE(79), 
		void
	>(get_jobject(), a0, a1, a2);
}

local_ref< java::util::ArrayList > android::view::View::getTouchables()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(80),
		android::view::View::J2CPP_METHOD_SIGNATURE(80), 
		local_ref< java::util::ArrayList >
	>(get_jobject());
}

void android::view::View::addTouchables(local_ref< java::util::ArrayList > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(81),
		android::view::View::J2CPP_METHOD_SIGNATURE(81), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::requestFocus()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(82),
		android::view::View::J2CPP_METHOD_SIGNATURE(82), 
		jboolean
	>(get_jobject());
}

jboolean android::view::View::requestFocus(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(83),
		android::view::View::J2CPP_METHOD_SIGNATURE(83), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::requestFocus(jint a0, local_ref< android::graphics::Rect > const &a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(84),
		android::view::View::J2CPP_METHOD_SIGNATURE(84), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::view::View::requestFocusFromTouch()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(85),
		android::view::View::J2CPP_METHOD_SIGNATURE(85), 
		jboolean
	>(get_jobject());
}

void android::view::View::onStartTemporaryDetach()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(86),
		android::view::View::J2CPP_METHOD_SIGNATURE(86), 
		void
	>(get_jobject());
}

void android::view::View::onFinishTemporaryDetach()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(87),
		android::view::View::J2CPP_METHOD_SIGNATURE(87), 
		void
	>(get_jobject());
}

local_ref< android::view::KeyEvent_::DispatcherState > android::view::View::getKeyDispatcherState()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(88),
		android::view::View::J2CPP_METHOD_SIGNATURE(88), 
		local_ref< android::view::KeyEvent_::DispatcherState >
	>(get_jobject());
}

jboolean android::view::View::dispatchKeyEventPreIme(local_ref< android::view::KeyEvent > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(89),
		android::view::View::J2CPP_METHOD_SIGNATURE(89), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::dispatchKeyEvent(local_ref< android::view::KeyEvent > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(90),
		android::view::View::J2CPP_METHOD_SIGNATURE(90), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::dispatchKeyShortcutEvent(local_ref< android::view::KeyEvent > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(91),
		android::view::View::J2CPP_METHOD_SIGNATURE(91), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::dispatchTouchEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(92),
		android::view::View::J2CPP_METHOD_SIGNATURE(92), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::onFilterTouchEventForSecurity(local_ref< android::view::MotionEvent > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(93),
		android::view::View::J2CPP_METHOD_SIGNATURE(93), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::dispatchTrackballEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(94),
		android::view::View::J2CPP_METHOD_SIGNATURE(94), 
		jboolean
	>(get_jobject(), a0);
}

void android::view::View::dispatchWindowFocusChanged(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(95),
		android::view::View::J2CPP_METHOD_SIGNATURE(95), 
		void
	>(get_jobject(), a0);
}

void android::view::View::onWindowFocusChanged(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(96),
		android::view::View::J2CPP_METHOD_SIGNATURE(96), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::hasWindowFocus()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(97),
		android::view::View::J2CPP_METHOD_SIGNATURE(97), 
		jboolean
	>(get_jobject());
}



void android::view::View::dispatchDisplayHint(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(100),
		android::view::View::J2CPP_METHOD_SIGNATURE(100), 
		void
	>(get_jobject(), a0);
}


void android::view::View::dispatchWindowVisibilityChanged(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(102),
		android::view::View::J2CPP_METHOD_SIGNATURE(102), 
		void
	>(get_jobject(), a0);
}


jint android::view::View::getWindowVisibility()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(104),
		android::view::View::J2CPP_METHOD_SIGNATURE(104), 
		jint
	>(get_jobject());
}

void android::view::View::getWindowVisibleDisplayFrame(local_ref< android::graphics::Rect > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(105),
		android::view::View::J2CPP_METHOD_SIGNATURE(105), 
		void
	>(get_jobject(), a0);
}

void android::view::View::dispatchConfigurationChanged(local_ref< android::content::res::Configuration > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(106),
		android::view::View::J2CPP_METHOD_SIGNATURE(106), 
		void
	>(get_jobject(), a0);
}


jboolean android::view::View::isInTouchMode()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(108),
		android::view::View::J2CPP_METHOD_SIGNATURE(108), 
		jboolean
	>(get_jobject());
}

local_ref< android::content::Context > android::view::View::getContext()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(109),
		android::view::View::J2CPP_METHOD_SIGNATURE(109), 
		local_ref< android::content::Context >
	>(get_jobject());
}

jboolean android::view::View::onKeyPreIme(jint a0, local_ref< android::view::KeyEvent > const &a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(110),
		android::view::View::J2CPP_METHOD_SIGNATURE(110), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::view::View::onKeyDown(jint a0, local_ref< android::view::KeyEvent > const &a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(111),
		android::view::View::J2CPP_METHOD_SIGNATURE(111), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::view::View::onKeyLongPress(jint a0, local_ref< android::view::KeyEvent > const &a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(112),
		android::view::View::J2CPP_METHOD_SIGNATURE(112), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::view::View::onKeyUp(jint a0, local_ref< android::view::KeyEvent > const &a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(113),
		android::view::View::J2CPP_METHOD_SIGNATURE(113), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::view::View::onKeyMultiple(jint a0, jint a1, local_ref< android::view::KeyEvent > const &a2)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(114),
		android::view::View::J2CPP_METHOD_SIGNATURE(114), 
		jboolean
	>(get_jobject(), a0, a1, a2);
}

jboolean android::view::View::onKeyShortcut(jint a0, local_ref< android::view::KeyEvent > const &a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(115),
		android::view::View::J2CPP_METHOD_SIGNATURE(115), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::view::View::onCheckIsTextEditor()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(116),
		android::view::View::J2CPP_METHOD_SIGNATURE(116), 
		jboolean
	>(get_jobject());
}

local_ref< android::view::inputmethod::InputConnection > android::view::View::onCreateInputConnection(local_ref< android::view::inputmethod::EditorInfo > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(117),
		android::view::View::J2CPP_METHOD_SIGNATURE(117), 
		local_ref< android::view::inputmethod::InputConnection >
	>(get_jobject(), a0);
}

jboolean android::view::View::checkInputConnectionProxy(local_ref< android::view::View > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(118),
		android::view::View::J2CPP_METHOD_SIGNATURE(118), 
		jboolean
	>(get_jobject(), a0);
}

void android::view::View::createContextMenu(local_ref< android::view::ContextMenu > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(119),
		android::view::View::J2CPP_METHOD_SIGNATURE(119), 
		void
	>(get_jobject(), a0);
}



jboolean android::view::View::onTrackballEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(122),
		android::view::View::J2CPP_METHOD_SIGNATURE(122), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::onTouchEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(123),
		android::view::View::J2CPP_METHOD_SIGNATURE(123), 
		jboolean
	>(get_jobject(), a0);
}

void android::view::View::cancelLongPress()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(124),
		android::view::View::J2CPP_METHOD_SIGNATURE(124), 
		void
	>(get_jobject());
}

void android::view::View::setTouchDelegate(local_ref< android::view::TouchDelegate > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(125),
		android::view::View::J2CPP_METHOD_SIGNATURE(125), 
		void
	>(get_jobject(), a0);
}

local_ref< android::view::TouchDelegate > android::view::View::getTouchDelegate()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(126),
		android::view::View::J2CPP_METHOD_SIGNATURE(126), 
		local_ref< android::view::TouchDelegate >
	>(get_jobject());
}

void android::view::View::bringToFront()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(127),
		android::view::View::J2CPP_METHOD_SIGNATURE(127), 
		void
	>(get_jobject());
}




local_ref< android::view::ViewParent > android::view::View::getParent()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(131),
		android::view::View::J2CPP_METHOD_SIGNATURE(131), 
		local_ref< android::view::ViewParent >
	>(get_jobject());
}

jint android::view::View::getScrollX()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(132),
		android::view::View::J2CPP_METHOD_SIGNATURE(132), 
		jint
	>(get_jobject());
}

jint android::view::View::getScrollY()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(133),
		android::view::View::J2CPP_METHOD_SIGNATURE(133), 
		jint
	>(get_jobject());
}

jint android::view::View::getWidth()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(134),
		android::view::View::J2CPP_METHOD_SIGNATURE(134), 
		jint
	>(get_jobject());
}

jint android::view::View::getHeight()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(135),
		android::view::View::J2CPP_METHOD_SIGNATURE(135), 
		jint
	>(get_jobject());
}

void android::view::View::getDrawingRect(local_ref< android::graphics::Rect > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(136),
		android::view::View::J2CPP_METHOD_SIGNATURE(136), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getMeasuredWidth()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(137),
		android::view::View::J2CPP_METHOD_SIGNATURE(137), 
		jint
	>(get_jobject());
}

jint android::view::View::getMeasuredHeight()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(138),
		android::view::View::J2CPP_METHOD_SIGNATURE(138), 
		jint
	>(get_jobject());
}

jint android::view::View::getTop()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(139),
		android::view::View::J2CPP_METHOD_SIGNATURE(139), 
		jint
	>(get_jobject());
}

jint android::view::View::getBottom()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(140),
		android::view::View::J2CPP_METHOD_SIGNATURE(140), 
		jint
	>(get_jobject());
}

jint android::view::View::getLeft()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(141),
		android::view::View::J2CPP_METHOD_SIGNATURE(141), 
		jint
	>(get_jobject());
}

jint android::view::View::getRight()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(142),
		android::view::View::J2CPP_METHOD_SIGNATURE(142), 
		jint
	>(get_jobject());
}

void android::view::View::getHitRect(local_ref< android::graphics::Rect > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(143),
		android::view::View::J2CPP_METHOD_SIGNATURE(143), 
		void
	>(get_jobject(), a0);
}

void android::view::View::getFocusedRect(local_ref< android::graphics::Rect > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(144),
		android::view::View::J2CPP_METHOD_SIGNATURE(144), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::getGlobalVisibleRect(local_ref< android::graphics::Rect > const &a0, local_ref< android::graphics::Point > const &a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(145),
		android::view::View::J2CPP_METHOD_SIGNATURE(145), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::view::View::getGlobalVisibleRect(local_ref< android::graphics::Rect > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(146),
		android::view::View::J2CPP_METHOD_SIGNATURE(146), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::getLocalVisibleRect(local_ref< android::graphics::Rect > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(147),
		android::view::View::J2CPP_METHOD_SIGNATURE(147), 
		jboolean
	>(get_jobject(), a0);
}

void android::view::View::offsetTopAndBottom(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(148),
		android::view::View::J2CPP_METHOD_SIGNATURE(148), 
		void
	>(get_jobject(), a0);
}

void android::view::View::offsetLeftAndRight(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(149),
		android::view::View::J2CPP_METHOD_SIGNATURE(149), 
		void
	>(get_jobject(), a0);
}

local_ref< android::view::ViewGroup_::LayoutParams > android::view::View::getLayoutParams()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(150),
		android::view::View::J2CPP_METHOD_SIGNATURE(150), 
		local_ref< android::view::ViewGroup_::LayoutParams >
	>(get_jobject());
}

void android::view::View::setLayoutParams(local_ref< android::view::ViewGroup_::LayoutParams > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(151),
		android::view::View::J2CPP_METHOD_SIGNATURE(151), 
		void
	>(get_jobject(), a0);
}

void android::view::View::scrollTo(jint a0, jint a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(152),
		android::view::View::J2CPP_METHOD_SIGNATURE(152), 
		void
	>(get_jobject(), a0, a1);
}

void android::view::View::scrollBy(jint a0, jint a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(153),
		android::view::View::J2CPP_METHOD_SIGNATURE(153), 
		void
	>(get_jobject(), a0, a1);
}




void android::view::View::invalidate(local_ref< android::graphics::Rect > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(157),
		android::view::View::J2CPP_METHOD_SIGNATURE(157), 
		void
	>(get_jobject(), a0);
}

void android::view::View::invalidate(jint a0, jint a1, jint a2, jint a3)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(158),
		android::view::View::J2CPP_METHOD_SIGNATURE(158), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

void android::view::View::invalidate()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(159),
		android::view::View::J2CPP_METHOD_SIGNATURE(159), 
		void
	>(get_jobject());
}

jboolean android::view::View::isOpaque()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(160),
		android::view::View::J2CPP_METHOD_SIGNATURE(160), 
		jboolean
	>(get_jobject());
}

local_ref< android::os::Handler > android::view::View::getHandler()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(161),
		android::view::View::J2CPP_METHOD_SIGNATURE(161), 
		local_ref< android::os::Handler >
	>(get_jobject());
}

jboolean android::view::View::post(local_ref< java::lang::Runnable > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(162),
		android::view::View::J2CPP_METHOD_SIGNATURE(162), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::postDelayed(local_ref< java::lang::Runnable > const &a0, jlong a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(163),
		android::view::View::J2CPP_METHOD_SIGNATURE(163), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::view::View::removeCallbacks(local_ref< java::lang::Runnable > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(164),
		android::view::View::J2CPP_METHOD_SIGNATURE(164), 
		jboolean
	>(get_jobject(), a0);
}

void android::view::View::postInvalidate()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(165),
		android::view::View::J2CPP_METHOD_SIGNATURE(165), 
		void
	>(get_jobject());
}

void android::view::View::postInvalidate(jint a0, jint a1, jint a2, jint a3)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(166),
		android::view::View::J2CPP_METHOD_SIGNATURE(166), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

void android::view::View::postInvalidateDelayed(jlong a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(167),
		android::view::View::J2CPP_METHOD_SIGNATURE(167), 
		void
	>(get_jobject(), a0);
}

void android::view::View::postInvalidateDelayed(jlong a0, jint a1, jint a2, jint a3, jint a4)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(168),
		android::view::View::J2CPP_METHOD_SIGNATURE(168), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4);
}

void android::view::View::computeScroll()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(169),
		android::view::View::J2CPP_METHOD_SIGNATURE(169), 
		void
	>(get_jobject());
}

jboolean android::view::View::isHorizontalFadingEdgeEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(170),
		android::view::View::J2CPP_METHOD_SIGNATURE(170), 
		jboolean
	>(get_jobject());
}

void android::view::View::setHorizontalFadingEdgeEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(171),
		android::view::View::J2CPP_METHOD_SIGNATURE(171), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isVerticalFadingEdgeEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(172),
		android::view::View::J2CPP_METHOD_SIGNATURE(172), 
		jboolean
	>(get_jobject());
}

void android::view::View::setVerticalFadingEdgeEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(173),
		android::view::View::J2CPP_METHOD_SIGNATURE(173), 
		void
	>(get_jobject(), a0);
}





jboolean android::view::View::isHorizontalScrollBarEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(178),
		android::view::View::J2CPP_METHOD_SIGNATURE(178), 
		jboolean
	>(get_jobject());
}

void android::view::View::setHorizontalScrollBarEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(179),
		android::view::View::J2CPP_METHOD_SIGNATURE(179), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isVerticalScrollBarEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(180),
		android::view::View::J2CPP_METHOD_SIGNATURE(180), 
		jboolean
	>(get_jobject());
}

void android::view::View::setVerticalScrollBarEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(181),
		android::view::View::J2CPP_METHOD_SIGNATURE(181), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setScrollbarFadingEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(182),
		android::view::View::J2CPP_METHOD_SIGNATURE(182), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isScrollbarFadingEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(183),
		android::view::View::J2CPP_METHOD_SIGNATURE(183), 
		jboolean
	>(get_jobject());
}

void android::view::View::setScrollBarStyle(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(184),
		android::view::View::J2CPP_METHOD_SIGNATURE(184), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getScrollBarStyle()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(185),
		android::view::View::J2CPP_METHOD_SIGNATURE(185), 
		jint
	>(get_jobject());
}












local_ref< android::os::IBinder > android::view::View::getWindowToken()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(197),
		android::view::View::J2CPP_METHOD_SIGNATURE(197), 
		local_ref< android::os::IBinder >
	>(get_jobject());
}

local_ref< android::os::IBinder > android::view::View::getApplicationWindowToken()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(198),
		android::view::View::J2CPP_METHOD_SIGNATURE(198), 
		local_ref< android::os::IBinder >
	>(get_jobject());
}

void android::view::View::saveHierarchyState(local_ref< android::util::SparseArray > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(199),
		android::view::View::J2CPP_METHOD_SIGNATURE(199), 
		void
	>(get_jobject(), a0);
}



void android::view::View::restoreHierarchyState(local_ref< android::util::SparseArray > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(202),
		android::view::View::J2CPP_METHOD_SIGNATURE(202), 
		void
	>(get_jobject(), a0);
}



jlong android::view::View::getDrawingTime()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(205),
		android::view::View::J2CPP_METHOD_SIGNATURE(205), 
		jlong
	>(get_jobject());
}

void android::view::View::setDuplicateParentStateEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(206),
		android::view::View::J2CPP_METHOD_SIGNATURE(206), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isDuplicateParentStateEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(207),
		android::view::View::J2CPP_METHOD_SIGNATURE(207), 
		jboolean
	>(get_jobject());
}

void android::view::View::setDrawingCacheEnabled(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(208),
		android::view::View::J2CPP_METHOD_SIGNATURE(208), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isDrawingCacheEnabled()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(209),
		android::view::View::J2CPP_METHOD_SIGNATURE(209), 
		jboolean
	>(get_jobject());
}

local_ref< android::graphics::Bitmap > android::view::View::getDrawingCache()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(210),
		android::view::View::J2CPP_METHOD_SIGNATURE(210), 
		local_ref< android::graphics::Bitmap >
	>(get_jobject());
}

local_ref< android::graphics::Bitmap > android::view::View::getDrawingCache(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(211),
		android::view::View::J2CPP_METHOD_SIGNATURE(211), 
		local_ref< android::graphics::Bitmap >
	>(get_jobject(), a0);
}

void android::view::View::destroyDrawingCache()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(212),
		android::view::View::J2CPP_METHOD_SIGNATURE(212), 
		void
	>(get_jobject());
}

void android::view::View::setDrawingCacheBackgroundColor(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(213),
		android::view::View::J2CPP_METHOD_SIGNATURE(213), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getDrawingCacheBackgroundColor()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(214),
		android::view::View::J2CPP_METHOD_SIGNATURE(214), 
		jint
	>(get_jobject());
}

void android::view::View::buildDrawingCache()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(215),
		android::view::View::J2CPP_METHOD_SIGNATURE(215), 
		void
	>(get_jobject());
}

void android::view::View::buildDrawingCache(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(216),
		android::view::View::J2CPP_METHOD_SIGNATURE(216), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::isInEditMode()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(217),
		android::view::View::J2CPP_METHOD_SIGNATURE(217), 
		jboolean
	>(get_jobject());
}






void android::view::View::draw(local_ref< android::graphics::Canvas > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(223),
		android::view::View::J2CPP_METHOD_SIGNATURE(223), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getSolidColor()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(224),
		android::view::View::J2CPP_METHOD_SIGNATURE(224), 
		jint
	>(get_jobject());
}

jboolean android::view::View::isLayoutRequested()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(225),
		android::view::View::J2CPP_METHOD_SIGNATURE(225), 
		jboolean
	>(get_jobject());
}

void android::view::View::layout(jint a0, jint a1, jint a2, jint a3)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(226),
		android::view::View::J2CPP_METHOD_SIGNATURE(226), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}



local_ref< android::content::res::Resources > android::view::View::getResources()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(229),
		android::view::View::J2CPP_METHOD_SIGNATURE(229), 
		local_ref< android::content::res::Resources >
	>(get_jobject());
}

void android::view::View::invalidateDrawable(local_ref< android::graphics::drawable::Drawable > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(230),
		android::view::View::J2CPP_METHOD_SIGNATURE(230), 
		void
	>(get_jobject(), a0);
}

void android::view::View::scheduleDrawable(local_ref< android::graphics::drawable::Drawable > const &a0, local_ref< java::lang::Runnable > const &a1, jlong a2)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(231),
		android::view::View::J2CPP_METHOD_SIGNATURE(231), 
		void
	>(get_jobject(), a0, a1, a2);
}

void android::view::View::unscheduleDrawable(local_ref< android::graphics::drawable::Drawable > const &a0, local_ref< java::lang::Runnable > const &a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(232),
		android::view::View::J2CPP_METHOD_SIGNATURE(232), 
		void
	>(get_jobject(), a0, a1);
}

void android::view::View::unscheduleDrawable(local_ref< android::graphics::drawable::Drawable > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(233),
		android::view::View::J2CPP_METHOD_SIGNATURE(233), 
		void
	>(get_jobject(), a0);
}



void android::view::View::refreshDrawableState()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(236),
		android::view::View::J2CPP_METHOD_SIGNATURE(236), 
		void
	>(get_jobject());
}

local_ref< array<jint,1> > android::view::View::getDrawableState()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(237),
		android::view::View::J2CPP_METHOD_SIGNATURE(237), 
		local_ref< array<jint,1> >
	>(get_jobject());
}



void android::view::View::setBackgroundColor(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(240),
		android::view::View::J2CPP_METHOD_SIGNATURE(240), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setBackgroundResource(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(241),
		android::view::View::J2CPP_METHOD_SIGNATURE(241), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setBackgroundDrawable(local_ref< android::graphics::drawable::Drawable > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(242),
		android::view::View::J2CPP_METHOD_SIGNATURE(242), 
		void
	>(get_jobject(), a0);
}

local_ref< android::graphics::drawable::Drawable > android::view::View::getBackground()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(243),
		android::view::View::J2CPP_METHOD_SIGNATURE(243), 
		local_ref< android::graphics::drawable::Drawable >
	>(get_jobject());
}

void android::view::View::setPadding(jint a0, jint a1, jint a2, jint a3)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(244),
		android::view::View::J2CPP_METHOD_SIGNATURE(244), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

jint android::view::View::getPaddingTop()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(245),
		android::view::View::J2CPP_METHOD_SIGNATURE(245), 
		jint
	>(get_jobject());
}

jint android::view::View::getPaddingBottom()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(246),
		android::view::View::J2CPP_METHOD_SIGNATURE(246), 
		jint
	>(get_jobject());
}

jint android::view::View::getPaddingLeft()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(247),
		android::view::View::J2CPP_METHOD_SIGNATURE(247), 
		jint
	>(get_jobject());
}

jint android::view::View::getPaddingRight()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(248),
		android::view::View::J2CPP_METHOD_SIGNATURE(248), 
		jint
	>(get_jobject());
}

void android::view::View::setSelected(jboolean a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(249),
		android::view::View::J2CPP_METHOD_SIGNATURE(249), 
		void
	>(get_jobject(), a0);
}


jboolean android::view::View::isSelected()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(251),
		android::view::View::J2CPP_METHOD_SIGNATURE(251), 
		jboolean
	>(get_jobject());
}

local_ref< android::view::ViewTreeObserver > android::view::View::getViewTreeObserver()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(252),
		android::view::View::J2CPP_METHOD_SIGNATURE(252), 
		local_ref< android::view::ViewTreeObserver >
	>(get_jobject());
}

local_ref< android::view::View > android::view::View::getRootView()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(253),
		android::view::View::J2CPP_METHOD_SIGNATURE(253), 
		local_ref< android::view::View >
	>(get_jobject());
}

void android::view::View::getLocationOnScreen(local_ref< array<jint,1> > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(254),
		android::view::View::J2CPP_METHOD_SIGNATURE(254), 
		void
	>(get_jobject(), a0);
}

void android::view::View::getLocationInWindow(local_ref< array<jint,1> > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(255),
		android::view::View::J2CPP_METHOD_SIGNATURE(255), 
		void
	>(get_jobject(), a0);
}

local_ref< android::view::View > android::view::View::findViewById(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(256),
		android::view::View::J2CPP_METHOD_SIGNATURE(256), 
		local_ref< android::view::View >
	>(get_jobject(), a0);
}

local_ref< android::view::View > android::view::View::findViewWithTag(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(257),
		android::view::View::J2CPP_METHOD_SIGNATURE(257), 
		local_ref< android::view::View >
	>(get_jobject(), a0);
}

void android::view::View::setId(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(258),
		android::view::View::J2CPP_METHOD_SIGNATURE(258), 
		void
	>(get_jobject(), a0);
}

jint android::view::View::getId()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(259),
		android::view::View::J2CPP_METHOD_SIGNATURE(259), 
		jint
	>(get_jobject());
}

local_ref< java::lang::Object > android::view::View::getTag()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(260),
		android::view::View::J2CPP_METHOD_SIGNATURE(260), 
		local_ref< java::lang::Object >
	>(get_jobject());
}

void android::view::View::setTag(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(261),
		android::view::View::J2CPP_METHOD_SIGNATURE(261), 
		void
	>(get_jobject(), a0);
}

local_ref< java::lang::Object > android::view::View::getTag(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(262),
		android::view::View::J2CPP_METHOD_SIGNATURE(262), 
		local_ref< java::lang::Object >
	>(get_jobject(), a0);
}

void android::view::View::setTag(jint a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(263),
		android::view::View::J2CPP_METHOD_SIGNATURE(263), 
		void
	>(get_jobject(), a0, a1);
}

jint android::view::View::getBaseline()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(264),
		android::view::View::J2CPP_METHOD_SIGNATURE(264), 
		jint
	>(get_jobject());
}

void android::view::View::requestLayout()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(265),
		android::view::View::J2CPP_METHOD_SIGNATURE(265), 
		void
	>(get_jobject());
}

void android::view::View::forceLayout()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(266),
		android::view::View::J2CPP_METHOD_SIGNATURE(266), 
		void
	>(get_jobject());
}

void android::view::View::measure(jint a0, jint a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(267),
		android::view::View::J2CPP_METHOD_SIGNATURE(267), 
		void
	>(get_jobject(), a0, a1);
}



jint android::view::View::resolveSize(jint a0, jint a1)
{
	return call_static_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(270),
		android::view::View::J2CPP_METHOD_SIGNATURE(270), 
		jint
	>(a0, a1);
}

jint android::view::View::getDefaultSize(jint a0, jint a1)
{
	return call_static_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(271),
		android::view::View::J2CPP_METHOD_SIGNATURE(271), 
		jint
	>(a0, a1);
}



void android::view::View::setMinimumHeight(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(274),
		android::view::View::J2CPP_METHOD_SIGNATURE(274), 
		void
	>(get_jobject(), a0);
}

void android::view::View::setMinimumWidth(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(275),
		android::view::View::J2CPP_METHOD_SIGNATURE(275), 
		void
	>(get_jobject(), a0);
}

local_ref< android::view::animation::Animation > android::view::View::getAnimation()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(276),
		android::view::View::J2CPP_METHOD_SIGNATURE(276), 
		local_ref< android::view::animation::Animation >
	>(get_jobject());
}

void android::view::View::startAnimation(local_ref< android::view::animation::Animation > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(277),
		android::view::View::J2CPP_METHOD_SIGNATURE(277), 
		void
	>(get_jobject(), a0);
}

void android::view::View::clearAnimation()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(278),
		android::view::View::J2CPP_METHOD_SIGNATURE(278), 
		void
	>(get_jobject());
}

void android::view::View::setAnimation(local_ref< android::view::animation::Animation > const &a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(279),
		android::view::View::J2CPP_METHOD_SIGNATURE(279), 
		void
	>(get_jobject(), a0);
}




void android::view::View::playSoundEffect(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(283),
		android::view::View::J2CPP_METHOD_SIGNATURE(283), 
		void
	>(get_jobject(), a0);
}

jboolean android::view::View::performHapticFeedback(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(284),
		android::view::View::J2CPP_METHOD_SIGNATURE(284), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::view::View::performHapticFeedback(jint a0, jint a1)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(285),
		android::view::View::J2CPP_METHOD_SIGNATURE(285), 
		jboolean
	>(get_jobject(), a0, a1);
}

local_ref< android::view::View > android::view::View::inflate(local_ref< android::content::Context > const &a0, jint a1, local_ref< android::view::ViewGroup > const &a2)
{
	return call_static_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(286),
		android::view::View::J2CPP_METHOD_SIGNATURE(286), 
		local_ref< android::view::View >
	>(a0, a1, a2);
}



jint android::view::View::getOverScrollMode()
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(289),
		android::view::View::J2CPP_METHOD_SIGNATURE(289), 
		jint
	>(get_jobject());
}

void android::view::View::setOverScrollMode(jint a0)
{
	return call_method<
		android::view::View::J2CPP_CLASS_NAME,
		android::view::View::J2CPP_METHOD_NAME(290),
		android::view::View::J2CPP_METHOD_SIGNATURE(290), 
		void
	>(get_jobject(), a0);
}



static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(1),
	android::view::View::J2CPP_FIELD_SIGNATURE(1),
	jint
> android::view::View::NO_ID;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(2),
	android::view::View::J2CPP_FIELD_SIGNATURE(2),
	jint
> android::view::View::VISIBLE;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(3),
	android::view::View::J2CPP_FIELD_SIGNATURE(3),
	jint
> android::view::View::INVISIBLE;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(4),
	android::view::View::J2CPP_FIELD_SIGNATURE(4),
	jint
> android::view::View::GONE;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(5),
	android::view::View::J2CPP_FIELD_SIGNATURE(5),
	jint
> android::view::View::DRAWING_CACHE_QUALITY_LOW;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(6),
	android::view::View::J2CPP_FIELD_SIGNATURE(6),
	jint
> android::view::View::DRAWING_CACHE_QUALITY_HIGH;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(7),
	android::view::View::J2CPP_FIELD_SIGNATURE(7),
	jint
> android::view::View::DRAWING_CACHE_QUALITY_AUTO;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(8),
	android::view::View::J2CPP_FIELD_SIGNATURE(8),
	jint
> android::view::View::SCROLLBARS_INSIDE_OVERLAY;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(9),
	android::view::View::J2CPP_FIELD_SIGNATURE(9),
	jint
> android::view::View::SCROLLBARS_INSIDE_INSET;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(10),
	android::view::View::J2CPP_FIELD_SIGNATURE(10),
	jint
> android::view::View::SCROLLBARS_OUTSIDE_OVERLAY;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(11),
	android::view::View::J2CPP_FIELD_SIGNATURE(11),
	jint
> android::view::View::SCROLLBARS_OUTSIDE_INSET;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(12),
	android::view::View::J2CPP_FIELD_SIGNATURE(12),
	jint
> android::view::View::KEEP_SCREEN_ON;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(13),
	android::view::View::J2CPP_FIELD_SIGNATURE(13),
	jint
> android::view::View::SOUND_EFFECTS_ENABLED;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(14),
	android::view::View::J2CPP_FIELD_SIGNATURE(14),
	jint
> android::view::View::HAPTIC_FEEDBACK_ENABLED;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(15),
	android::view::View::J2CPP_FIELD_SIGNATURE(15),
	jint
> android::view::View::FOCUSABLES_ALL;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(16),
	android::view::View::J2CPP_FIELD_SIGNATURE(16),
	jint
> android::view::View::FOCUSABLES_TOUCH_MODE;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(17),
	android::view::View::J2CPP_FIELD_SIGNATURE(17),
	jint
> android::view::View::FOCUS_BACKWARD;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(18),
	android::view::View::J2CPP_FIELD_SIGNATURE(18),
	jint
> android::view::View::FOCUS_FORWARD;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(19),
	android::view::View::J2CPP_FIELD_SIGNATURE(19),
	jint
> android::view::View::FOCUS_LEFT;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(20),
	android::view::View::J2CPP_FIELD_SIGNATURE(20),
	jint
> android::view::View::FOCUS_UP;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(21),
	android::view::View::J2CPP_FIELD_SIGNATURE(21),
	jint
> android::view::View::FOCUS_RIGHT;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(22),
	android::view::View::J2CPP_FIELD_SIGNATURE(22),
	jint
> android::view::View::FOCUS_DOWN;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(54),
	android::view::View::J2CPP_FIELD_SIGNATURE(54),
	jint
> android::view::View::OVER_SCROLL_ALWAYS;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(55),
	android::view::View::J2CPP_FIELD_SIGNATURE(55),
	jint
> android::view::View::OVER_SCROLL_IF_CONTENT_SCROLLS;

static_field<
	android::view::View::J2CPP_CLASS_NAME,
	android::view::View::J2CPP_FIELD_NAME(56),
	android::view::View::J2CPP_FIELD_SIGNATURE(56),
	jint
> android::view::View::OVER_SCROLL_NEVER;


J2CPP_DEFINE_CLASS(android::view::View,"android/view/View")
J2CPP_DEFINE_METHOD(android::view::View,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(android::view::View,1,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::view::View,2,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;I)V")
J2CPP_DEFINE_METHOD(android::view::View,3,"initializeFadingEdge","(Landroid/content/res/TypedArray;)V")
J2CPP_DEFINE_METHOD(android::view::View,4,"getVerticalFadingEdgeLength","()I")
J2CPP_DEFINE_METHOD(android::view::View,5,"setFadingEdgeLength","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,6,"getHorizontalFadingEdgeLength","()I")
J2CPP_DEFINE_METHOD(android::view::View,7,"getVerticalScrollbarWidth","()I")
J2CPP_DEFINE_METHOD(android::view::View,8,"getHorizontalScrollbarHeight","()I")
J2CPP_DEFINE_METHOD(android::view::View,9,"initializeScrollbars","(Landroid/content/res/TypedArray;)V")
J2CPP_DEFINE_METHOD(android::view::View,10,"setOnFocusChangeListener","(Landroid/view/View$OnFocusChangeListener;)V")
J2CPP_DEFINE_METHOD(android::view::View,11,"getOnFocusChangeListener","()Landroid/view/View$OnFocusChangeListener;")
J2CPP_DEFINE_METHOD(android::view::View,12,"setOnClickListener","(Landroid/view/View$OnClickListener;)V")
J2CPP_DEFINE_METHOD(android::view::View,13,"setOnLongClickListener","(Landroid/view/View$OnLongClickListener;)V")
J2CPP_DEFINE_METHOD(android::view::View,14,"setOnCreateContextMenuListener","(Landroid/view/View$OnCreateContextMenuListener;)V")
J2CPP_DEFINE_METHOD(android::view::View,15,"performClick","()Z")
J2CPP_DEFINE_METHOD(android::view::View,16,"performLongClick","()Z")
J2CPP_DEFINE_METHOD(android::view::View,17,"showContextMenu","()Z")
J2CPP_DEFINE_METHOD(android::view::View,18,"setOnKeyListener","(Landroid/view/View$OnKeyListener;)V")
J2CPP_DEFINE_METHOD(android::view::View,19,"setOnTouchListener","(Landroid/view/View$OnTouchListener;)V")
J2CPP_DEFINE_METHOD(android::view::View,20,"requestRectangleOnScreen","(Landroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::view::View,21,"requestRectangleOnScreen","(Landroid/graphics/Rect;Z)Z")
J2CPP_DEFINE_METHOD(android::view::View,22,"clearFocus","()V")
J2CPP_DEFINE_METHOD(android::view::View,23,"hasFocus","()Z")
J2CPP_DEFINE_METHOD(android::view::View,24,"hasFocusable","()Z")
J2CPP_DEFINE_METHOD(android::view::View,25,"onFocusChanged","(ZILandroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::View,26,"sendAccessibilityEvent","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,27,"sendAccessibilityEventUnchecked","(Landroid/view/accessibility/AccessibilityEvent;)V")
J2CPP_DEFINE_METHOD(android::view::View,28,"dispatchPopulateAccessibilityEvent","(Landroid/view/accessibility/AccessibilityEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,29,"getContentDescription","()Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(android::view::View,30,"setContentDescription","(Ljava/lang/CharSequence;)V")
J2CPP_DEFINE_METHOD(android::view::View,31,"isFocused","()Z")
J2CPP_DEFINE_METHOD(android::view::View,32,"findFocus","()Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::View,33,"setScrollContainer","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,34,"getDrawingCacheQuality","()I")
J2CPP_DEFINE_METHOD(android::view::View,35,"setDrawingCacheQuality","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,36,"getKeepScreenOn","()Z")
J2CPP_DEFINE_METHOD(android::view::View,37,"setKeepScreenOn","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,38,"getNextFocusLeftId","()I")
J2CPP_DEFINE_METHOD(android::view::View,39,"setNextFocusLeftId","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,40,"getNextFocusRightId","()I")
J2CPP_DEFINE_METHOD(android::view::View,41,"setNextFocusRightId","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,42,"getNextFocusUpId","()I")
J2CPP_DEFINE_METHOD(android::view::View,43,"setNextFocusUpId","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,44,"getNextFocusDownId","()I")
J2CPP_DEFINE_METHOD(android::view::View,45,"setNextFocusDownId","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,46,"isShown","()Z")
J2CPP_DEFINE_METHOD(android::view::View,47,"fitSystemWindows","(Landroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::view::View,48,"getVisibility","()I")
J2CPP_DEFINE_METHOD(android::view::View,49,"setVisibility","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,50,"isEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,51,"setEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,52,"setFocusable","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,53,"setFocusableInTouchMode","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,54,"setSoundEffectsEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,55,"isSoundEffectsEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,56,"setHapticFeedbackEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,57,"isHapticFeedbackEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,58,"setWillNotDraw","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,59,"willNotDraw","()Z")
J2CPP_DEFINE_METHOD(android::view::View,60,"setWillNotCacheDrawing","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,61,"willNotCacheDrawing","()Z")
J2CPP_DEFINE_METHOD(android::view::View,62,"isClickable","()Z")
J2CPP_DEFINE_METHOD(android::view::View,63,"setClickable","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,64,"isLongClickable","()Z")
J2CPP_DEFINE_METHOD(android::view::View,65,"setLongClickable","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,66,"setPressed","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,67,"dispatchSetPressed","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,68,"isPressed","()Z")
J2CPP_DEFINE_METHOD(android::view::View,69,"isSaveEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,70,"setSaveEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,71,"getFilterTouchesWhenObscured","()Z")
J2CPP_DEFINE_METHOD(android::view::View,72,"setFilterTouchesWhenObscured","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,73,"isFocusable","()Z")
J2CPP_DEFINE_METHOD(android::view::View,74,"isFocusableInTouchMode","()Z")
J2CPP_DEFINE_METHOD(android::view::View,75,"focusSearch","(I)Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::View,76,"dispatchUnhandledMove","(Landroid/view/View;I)Z")
J2CPP_DEFINE_METHOD(android::view::View,77,"getFocusables","(I)Ljava/util/ArrayList;")
J2CPP_DEFINE_METHOD(android::view::View,78,"addFocusables","(Ljava/util/ArrayList;I)V")
J2CPP_DEFINE_METHOD(android::view::View,79,"addFocusables","(Ljava/util/ArrayList;II)V")
J2CPP_DEFINE_METHOD(android::view::View,80,"getTouchables","()Ljava/util/ArrayList;")
J2CPP_DEFINE_METHOD(android::view::View,81,"addTouchables","(Ljava/util/ArrayList;)V")
J2CPP_DEFINE_METHOD(android::view::View,82,"requestFocus","()Z")
J2CPP_DEFINE_METHOD(android::view::View,83,"requestFocus","(I)Z")
J2CPP_DEFINE_METHOD(android::view::View,84,"requestFocus","(ILandroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::view::View,85,"requestFocusFromTouch","()Z")
J2CPP_DEFINE_METHOD(android::view::View,86,"onStartTemporaryDetach","()V")
J2CPP_DEFINE_METHOD(android::view::View,87,"onFinishTemporaryDetach","()V")
J2CPP_DEFINE_METHOD(android::view::View,88,"getKeyDispatcherState","()Landroid/view/KeyEvent$DispatcherState;")
J2CPP_DEFINE_METHOD(android::view::View,89,"dispatchKeyEventPreIme","(Landroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,90,"dispatchKeyEvent","(Landroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,91,"dispatchKeyShortcutEvent","(Landroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,92,"dispatchTouchEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,93,"onFilterTouchEventForSecurity","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,94,"dispatchTrackballEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,95,"dispatchWindowFocusChanged","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,96,"onWindowFocusChanged","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,97,"hasWindowFocus","()Z")
J2CPP_DEFINE_METHOD(android::view::View,98,"dispatchVisibilityChanged","(Landroid/view/View;I)V")
J2CPP_DEFINE_METHOD(android::view::View,99,"onVisibilityChanged","(Landroid/view/View;I)V")
J2CPP_DEFINE_METHOD(android::view::View,100,"dispatchDisplayHint","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,101,"onDisplayHint","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,102,"dispatchWindowVisibilityChanged","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,103,"onWindowVisibilityChanged","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,104,"getWindowVisibility","()I")
J2CPP_DEFINE_METHOD(android::view::View,105,"getWindowVisibleDisplayFrame","(Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::View,106,"dispatchConfigurationChanged","(Landroid/content/res/Configuration;)V")
J2CPP_DEFINE_METHOD(android::view::View,107,"onConfigurationChanged","(Landroid/content/res/Configuration;)V")
J2CPP_DEFINE_METHOD(android::view::View,108,"isInTouchMode","()Z")
J2CPP_DEFINE_METHOD(android::view::View,109,"getContext","()Landroid/content/Context;")
J2CPP_DEFINE_METHOD(android::view::View,110,"onKeyPreIme","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,111,"onKeyDown","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,112,"onKeyLongPress","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,113,"onKeyUp","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,114,"onKeyMultiple","(IILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,115,"onKeyShortcut","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,116,"onCheckIsTextEditor","()Z")
J2CPP_DEFINE_METHOD(android::view::View,117,"onCreateInputConnection","(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;")
J2CPP_DEFINE_METHOD(android::view::View,118,"checkInputConnectionProxy","(Landroid/view/View;)Z")
J2CPP_DEFINE_METHOD(android::view::View,119,"createContextMenu","(Landroid/view/ContextMenu;)V")
J2CPP_DEFINE_METHOD(android::view::View,120,"getContextMenuInfo","()Landroid/view/ContextMenu$ContextMenuInfo;")
J2CPP_DEFINE_METHOD(android::view::View,121,"onCreateContextMenu","(Landroid/view/ContextMenu;)V")
J2CPP_DEFINE_METHOD(android::view::View,122,"onTrackballEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,123,"onTouchEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::View,124,"cancelLongPress","()V")
J2CPP_DEFINE_METHOD(android::view::View,125,"setTouchDelegate","(Landroid/view/TouchDelegate;)V")
J2CPP_DEFINE_METHOD(android::view::View,126,"getTouchDelegate","()Landroid/view/TouchDelegate;")
J2CPP_DEFINE_METHOD(android::view::View,127,"bringToFront","()V")
J2CPP_DEFINE_METHOD(android::view::View,128,"onScrollChanged","(IIII)V")
J2CPP_DEFINE_METHOD(android::view::View,129,"onSizeChanged","(IIII)V")
J2CPP_DEFINE_METHOD(android::view::View,130,"dispatchDraw","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::view::View,131,"getParent","()Landroid/view/ViewParent;")
J2CPP_DEFINE_METHOD(android::view::View,132,"getScrollX","()I")
J2CPP_DEFINE_METHOD(android::view::View,133,"getScrollY","()I")
J2CPP_DEFINE_METHOD(android::view::View,134,"getWidth","()I")
J2CPP_DEFINE_METHOD(android::view::View,135,"getHeight","()I")
J2CPP_DEFINE_METHOD(android::view::View,136,"getDrawingRect","(Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::View,137,"getMeasuredWidth","()I")
J2CPP_DEFINE_METHOD(android::view::View,138,"getMeasuredHeight","()I")
J2CPP_DEFINE_METHOD(android::view::View,139,"getTop","()I")
J2CPP_DEFINE_METHOD(android::view::View,140,"getBottom","()I")
J2CPP_DEFINE_METHOD(android::view::View,141,"getLeft","()I")
J2CPP_DEFINE_METHOD(android::view::View,142,"getRight","()I")
J2CPP_DEFINE_METHOD(android::view::View,143,"getHitRect","(Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::View,144,"getFocusedRect","(Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::View,145,"getGlobalVisibleRect","(Landroid/graphics/Rect;Landroid/graphics/Point;)Z")
J2CPP_DEFINE_METHOD(android::view::View,146,"getGlobalVisibleRect","(Landroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::view::View,147,"getLocalVisibleRect","(Landroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::view::View,148,"offsetTopAndBottom","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,149,"offsetLeftAndRight","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,150,"getLayoutParams","()Landroid/view/ViewGroup$LayoutParams;")
J2CPP_DEFINE_METHOD(android::view::View,151,"setLayoutParams","(Landroid/view/ViewGroup$LayoutParams;)V")
J2CPP_DEFINE_METHOD(android::view::View,152,"scrollTo","(II)V")
J2CPP_DEFINE_METHOD(android::view::View,153,"scrollBy","(II)V")
J2CPP_DEFINE_METHOD(android::view::View,154,"awakenScrollBars","()Z")
J2CPP_DEFINE_METHOD(android::view::View,155,"awakenScrollBars","(I)Z")
J2CPP_DEFINE_METHOD(android::view::View,156,"awakenScrollBars","(IZ)Z")
J2CPP_DEFINE_METHOD(android::view::View,157,"invalidate","(Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::View,158,"invalidate","(IIII)V")
J2CPP_DEFINE_METHOD(android::view::View,159,"invalidate","()V")
J2CPP_DEFINE_METHOD(android::view::View,160,"isOpaque","()Z")
J2CPP_DEFINE_METHOD(android::view::View,161,"getHandler","()Landroid/os/Handler;")
J2CPP_DEFINE_METHOD(android::view::View,162,"post","(Ljava/lang/Runnable;)Z")
J2CPP_DEFINE_METHOD(android::view::View,163,"postDelayed","(Ljava/lang/Runnable;J)Z")
J2CPP_DEFINE_METHOD(android::view::View,164,"removeCallbacks","(Ljava/lang/Runnable;)Z")
J2CPP_DEFINE_METHOD(android::view::View,165,"postInvalidate","()V")
J2CPP_DEFINE_METHOD(android::view::View,166,"postInvalidate","(IIII)V")
J2CPP_DEFINE_METHOD(android::view::View,167,"postInvalidateDelayed","(J)V")
J2CPP_DEFINE_METHOD(android::view::View,168,"postInvalidateDelayed","(JIIII)V")
J2CPP_DEFINE_METHOD(android::view::View,169,"computeScroll","()V")
J2CPP_DEFINE_METHOD(android::view::View,170,"isHorizontalFadingEdgeEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,171,"setHorizontalFadingEdgeEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,172,"isVerticalFadingEdgeEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,173,"setVerticalFadingEdgeEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,174,"getTopFadingEdgeStrength","()F")
J2CPP_DEFINE_METHOD(android::view::View,175,"getBottomFadingEdgeStrength","()F")
J2CPP_DEFINE_METHOD(android::view::View,176,"getLeftFadingEdgeStrength","()F")
J2CPP_DEFINE_METHOD(android::view::View,177,"getRightFadingEdgeStrength","()F")
J2CPP_DEFINE_METHOD(android::view::View,178,"isHorizontalScrollBarEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,179,"setHorizontalScrollBarEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,180,"isVerticalScrollBarEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,181,"setVerticalScrollBarEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,182,"setScrollbarFadingEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,183,"isScrollbarFadingEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,184,"setScrollBarStyle","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,185,"getScrollBarStyle","()I")
J2CPP_DEFINE_METHOD(android::view::View,186,"computeHorizontalScrollRange","()I")
J2CPP_DEFINE_METHOD(android::view::View,187,"computeHorizontalScrollOffset","()I")
J2CPP_DEFINE_METHOD(android::view::View,188,"computeHorizontalScrollExtent","()I")
J2CPP_DEFINE_METHOD(android::view::View,189,"computeVerticalScrollRange","()I")
J2CPP_DEFINE_METHOD(android::view::View,190,"computeVerticalScrollOffset","()I")
J2CPP_DEFINE_METHOD(android::view::View,191,"computeVerticalScrollExtent","()I")
J2CPP_DEFINE_METHOD(android::view::View,192,"onDrawScrollBars","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::view::View,193,"onDraw","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::view::View,194,"onAttachedToWindow","()V")
J2CPP_DEFINE_METHOD(android::view::View,195,"onDetachedFromWindow","()V")
J2CPP_DEFINE_METHOD(android::view::View,196,"getWindowAttachCount","()I")
J2CPP_DEFINE_METHOD(android::view::View,197,"getWindowToken","()Landroid/os/IBinder;")
J2CPP_DEFINE_METHOD(android::view::View,198,"getApplicationWindowToken","()Landroid/os/IBinder;")
J2CPP_DEFINE_METHOD(android::view::View,199,"saveHierarchyState","(Landroid/util/SparseArray;)V")
J2CPP_DEFINE_METHOD(android::view::View,200,"dispatchSaveInstanceState","(Landroid/util/SparseArray;)V")
J2CPP_DEFINE_METHOD(android::view::View,201,"onSaveInstanceState","()Landroid/os/Parcelable;")
J2CPP_DEFINE_METHOD(android::view::View,202,"restoreHierarchyState","(Landroid/util/SparseArray;)V")
J2CPP_DEFINE_METHOD(android::view::View,203,"dispatchRestoreInstanceState","(Landroid/util/SparseArray;)V")
J2CPP_DEFINE_METHOD(android::view::View,204,"onRestoreInstanceState","(Landroid/os/Parcelable;)V")
J2CPP_DEFINE_METHOD(android::view::View,205,"getDrawingTime","()J")
J2CPP_DEFINE_METHOD(android::view::View,206,"setDuplicateParentStateEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,207,"isDuplicateParentStateEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,208,"setDrawingCacheEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,209,"isDrawingCacheEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::View,210,"getDrawingCache","()Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::view::View,211,"getDrawingCache","(Z)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::view::View,212,"destroyDrawingCache","()V")
J2CPP_DEFINE_METHOD(android::view::View,213,"setDrawingCacheBackgroundColor","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,214,"getDrawingCacheBackgroundColor","()I")
J2CPP_DEFINE_METHOD(android::view::View,215,"buildDrawingCache","()V")
J2CPP_DEFINE_METHOD(android::view::View,216,"buildDrawingCache","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,217,"isInEditMode","()Z")
J2CPP_DEFINE_METHOD(android::view::View,218,"isPaddingOffsetRequired","()Z")
J2CPP_DEFINE_METHOD(android::view::View,219,"getLeftPaddingOffset","()I")
J2CPP_DEFINE_METHOD(android::view::View,220,"getRightPaddingOffset","()I")
J2CPP_DEFINE_METHOD(android::view::View,221,"getTopPaddingOffset","()I")
J2CPP_DEFINE_METHOD(android::view::View,222,"getBottomPaddingOffset","()I")
J2CPP_DEFINE_METHOD(android::view::View,223,"draw","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::view::View,224,"getSolidColor","()I")
J2CPP_DEFINE_METHOD(android::view::View,225,"isLayoutRequested","()Z")
J2CPP_DEFINE_METHOD(android::view::View,226,"layout","(IIII)V")
J2CPP_DEFINE_METHOD(android::view::View,227,"onLayout","(ZIIII)V")
J2CPP_DEFINE_METHOD(android::view::View,228,"onFinishInflate","()V")
J2CPP_DEFINE_METHOD(android::view::View,229,"getResources","()Landroid/content/res/Resources;")
J2CPP_DEFINE_METHOD(android::view::View,230,"invalidateDrawable","(Landroid/graphics/drawable/Drawable;)V")
J2CPP_DEFINE_METHOD(android::view::View,231,"scheduleDrawable","(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V")
J2CPP_DEFINE_METHOD(android::view::View,232,"unscheduleDrawable","(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V")
J2CPP_DEFINE_METHOD(android::view::View,233,"unscheduleDrawable","(Landroid/graphics/drawable/Drawable;)V")
J2CPP_DEFINE_METHOD(android::view::View,234,"verifyDrawable","(Landroid/graphics/drawable/Drawable;)Z")
J2CPP_DEFINE_METHOD(android::view::View,235,"drawableStateChanged","()V")
J2CPP_DEFINE_METHOD(android::view::View,236,"refreshDrawableState","()V")
J2CPP_DEFINE_METHOD(android::view::View,237,"getDrawableState","()[I")
J2CPP_DEFINE_METHOD(android::view::View,238,"onCreateDrawableState","(I)[I")
J2CPP_DEFINE_METHOD(android::view::View,239,"mergeDrawableStates","([I[I)[I")
J2CPP_DEFINE_METHOD(android::view::View,240,"setBackgroundColor","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,241,"setBackgroundResource","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,242,"setBackgroundDrawable","(Landroid/graphics/drawable/Drawable;)V")
J2CPP_DEFINE_METHOD(android::view::View,243,"getBackground","()Landroid/graphics/drawable/Drawable;")
J2CPP_DEFINE_METHOD(android::view::View,244,"setPadding","(IIII)V")
J2CPP_DEFINE_METHOD(android::view::View,245,"getPaddingTop","()I")
J2CPP_DEFINE_METHOD(android::view::View,246,"getPaddingBottom","()I")
J2CPP_DEFINE_METHOD(android::view::View,247,"getPaddingLeft","()I")
J2CPP_DEFINE_METHOD(android::view::View,248,"getPaddingRight","()I")
J2CPP_DEFINE_METHOD(android::view::View,249,"setSelected","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,250,"dispatchSetSelected","(Z)V")
J2CPP_DEFINE_METHOD(android::view::View,251,"isSelected","()Z")
J2CPP_DEFINE_METHOD(android::view::View,252,"getViewTreeObserver","()Landroid/view/ViewTreeObserver;")
J2CPP_DEFINE_METHOD(android::view::View,253,"getRootView","()Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::View,254,"getLocationOnScreen","([I)V")
J2CPP_DEFINE_METHOD(android::view::View,255,"getLocationInWindow","([I)V")
J2CPP_DEFINE_METHOD(android::view::View,256,"findViewById","(I)Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::View,257,"findViewWithTag","(Ljava/lang/Object;)Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::View,258,"setId","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,259,"getId","()I")
J2CPP_DEFINE_METHOD(android::view::View,260,"getTag","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(android::view::View,261,"setTag","(Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::view::View,262,"getTag","(I)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(android::view::View,263,"setTag","(ILjava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::view::View,264,"getBaseline","()I")
J2CPP_DEFINE_METHOD(android::view::View,265,"requestLayout","()V")
J2CPP_DEFINE_METHOD(android::view::View,266,"forceLayout","()V")
J2CPP_DEFINE_METHOD(android::view::View,267,"measure","(II)V")
J2CPP_DEFINE_METHOD(android::view::View,268,"onMeasure","(II)V")
J2CPP_DEFINE_METHOD(android::view::View,269,"setMeasuredDimension","(II)V")
J2CPP_DEFINE_METHOD(android::view::View,270,"resolveSize","(II)I")
J2CPP_DEFINE_METHOD(android::view::View,271,"getDefaultSize","(II)I")
J2CPP_DEFINE_METHOD(android::view::View,272,"getSuggestedMinimumHeight","()I")
J2CPP_DEFINE_METHOD(android::view::View,273,"getSuggestedMinimumWidth","()I")
J2CPP_DEFINE_METHOD(android::view::View,274,"setMinimumHeight","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,275,"setMinimumWidth","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,276,"getAnimation","()Landroid/view/animation/Animation;")
J2CPP_DEFINE_METHOD(android::view::View,277,"startAnimation","(Landroid/view/animation/Animation;)V")
J2CPP_DEFINE_METHOD(android::view::View,278,"clearAnimation","()V")
J2CPP_DEFINE_METHOD(android::view::View,279,"setAnimation","(Landroid/view/animation/Animation;)V")
J2CPP_DEFINE_METHOD(android::view::View,280,"onAnimationStart","()V")
J2CPP_DEFINE_METHOD(android::view::View,281,"onAnimationEnd","()V")
J2CPP_DEFINE_METHOD(android::view::View,282,"onSetAlpha","(I)Z")
J2CPP_DEFINE_METHOD(android::view::View,283,"playSoundEffect","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,284,"performHapticFeedback","(I)Z")
J2CPP_DEFINE_METHOD(android::view::View,285,"performHapticFeedback","(II)Z")
J2CPP_DEFINE_METHOD(android::view::View,286,"inflate","(Landroid/content/Context;ILandroid/view/ViewGroup;)Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::View,287,"overScrollBy","(IIIIIIIIZ)Z")
J2CPP_DEFINE_METHOD(android::view::View,288,"onOverScrolled","(IIZZ)V")
J2CPP_DEFINE_METHOD(android::view::View,289,"getOverScrollMode","()I")
J2CPP_DEFINE_METHOD(android::view::View,290,"setOverScrollMode","(I)V")
J2CPP_DEFINE_METHOD(android::view::View,291,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::view::View,0,"VIEW_LOG_TAG","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::view::View,1,"NO_ID","I")
J2CPP_DEFINE_FIELD(android::view::View,2,"VISIBLE","I")
J2CPP_DEFINE_FIELD(android::view::View,3,"INVISIBLE","I")
J2CPP_DEFINE_FIELD(android::view::View,4,"GONE","I")
J2CPP_DEFINE_FIELD(android::view::View,5,"DRAWING_CACHE_QUALITY_LOW","I")
J2CPP_DEFINE_FIELD(android::view::View,6,"DRAWING_CACHE_QUALITY_HIGH","I")
J2CPP_DEFINE_FIELD(android::view::View,7,"DRAWING_CACHE_QUALITY_AUTO","I")
J2CPP_DEFINE_FIELD(android::view::View,8,"SCROLLBARS_INSIDE_OVERLAY","I")
J2CPP_DEFINE_FIELD(android::view::View,9,"SCROLLBARS_INSIDE_INSET","I")
J2CPP_DEFINE_FIELD(android::view::View,10,"SCROLLBARS_OUTSIDE_OVERLAY","I")
J2CPP_DEFINE_FIELD(android::view::View,11,"SCROLLBARS_OUTSIDE_INSET","I")
J2CPP_DEFINE_FIELD(android::view::View,12,"KEEP_SCREEN_ON","I")
J2CPP_DEFINE_FIELD(android::view::View,13,"SOUND_EFFECTS_ENABLED","I")
J2CPP_DEFINE_FIELD(android::view::View,14,"HAPTIC_FEEDBACK_ENABLED","I")
J2CPP_DEFINE_FIELD(android::view::View,15,"FOCUSABLES_ALL","I")
J2CPP_DEFINE_FIELD(android::view::View,16,"FOCUSABLES_TOUCH_MODE","I")
J2CPP_DEFINE_FIELD(android::view::View,17,"FOCUS_BACKWARD","I")
J2CPP_DEFINE_FIELD(android::view::View,18,"FOCUS_FORWARD","I")
J2CPP_DEFINE_FIELD(android::view::View,19,"FOCUS_LEFT","I")
J2CPP_DEFINE_FIELD(android::view::View,20,"FOCUS_UP","I")
J2CPP_DEFINE_FIELD(android::view::View,21,"FOCUS_RIGHT","I")
J2CPP_DEFINE_FIELD(android::view::View,22,"FOCUS_DOWN","I")
J2CPP_DEFINE_FIELD(android::view::View,23,"EMPTY_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,24,"ENABLED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,25,"FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,26,"SELECTED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,27,"WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,28,"ENABLED_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,29,"ENABLED_SELECTED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,30,"ENABLED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,31,"FOCUSED_SELECTED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,32,"FOCUSED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,33,"SELECTED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,34,"ENABLED_FOCUSED_SELECTED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,35,"ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,36,"ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,37,"FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,38,"ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,39,"PRESSED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,40,"PRESSED_SELECTED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,41,"PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,42,"PRESSED_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,43,"PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,44,"PRESSED_FOCUSED_SELECTED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,45,"PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,46,"PRESSED_ENABLED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,47,"PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,48,"PRESSED_ENABLED_SELECTED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,49,"PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,50,"PRESSED_ENABLED_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,51,"PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,52,"PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,53,"PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET","[I")
J2CPP_DEFINE_FIELD(android::view::View,54,"OVER_SCROLL_ALWAYS","I")
J2CPP_DEFINE_FIELD(android::view::View,55,"OVER_SCROLL_IF_CONTENT_SCROLLS","I")
J2CPP_DEFINE_FIELD(android::view::View,56,"OVER_SCROLL_NEVER","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_VIEW_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
