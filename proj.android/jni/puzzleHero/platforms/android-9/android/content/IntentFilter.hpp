/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.content.IntentFilter
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_INTENTFILTER_HPP_DECL
#define J2CPP_ANDROID_CONTENT_INTENTFILTER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Exception; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Throwable; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Iterator; } } }
namespace j2cpp { namespace java { namespace util { class Set; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }
namespace j2cpp { namespace android { namespace content { class Intent; } } }
namespace j2cpp { namespace android { namespace content { class ContentResolver; } } }
namespace j2cpp { namespace android { namespace content { namespace IntentFilter_ { class AuthorityEntry; } } } }
namespace j2cpp { namespace android { namespace util { class Printer; } } }
namespace j2cpp { namespace android { namespace util { class AndroidException; } } }
namespace j2cpp { namespace android { namespace net { class Uri; } } }
namespace j2cpp { namespace android { namespace os { class Parcelable; } } }
namespace j2cpp { namespace android { namespace os { class PatternMatcher; } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }
namespace j2cpp { namespace org { namespace xmlpull { namespace v1 { class XmlPullParser; } } } }
namespace j2cpp { namespace org { namespace xmlpull { namespace v1 { class XmlSerializer; } } } }


#include <android/content/ContentResolver.hpp>
#include <android/content/Intent.hpp>
#include <android/content/IntentFilter.hpp>
#include <android/net/Uri.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <android/os/PatternMatcher.hpp>
#include <android/util/AndroidException.hpp>
#include <android/util/Printer.hpp>
#include <java/io/Serializable.hpp>
#include <java/lang/Exception.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/lang/Throwable.hpp>
#include <java/util/Iterator.hpp>
#include <java/util/Set.hpp>
#include <org/xmlpull/v1/XmlPullParser.hpp>
#include <org/xmlpull/v1/XmlSerializer.hpp>


namespace j2cpp {

namespace android { namespace content {

	class IntentFilter;
	namespace IntentFilter_ {

		class AuthorityEntry;
		class AuthorityEntry
			: public object<AuthorityEntry>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)

			explicit AuthorityEntry(jobject jobj)
			: object<AuthorityEntry>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			AuthorityEntry(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
			local_ref< java::lang::String > getHost();
			jint getPort();
			jint match(local_ref< android::net::Uri >  const&);
		}; //class AuthorityEntry

		class MalformedMimeTypeException;
		class MalformedMimeTypeException
			: public object<MalformedMimeTypeException>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)

			explicit MalformedMimeTypeException(jobject jobj)
			: object<MalformedMimeTypeException>(jobj)
			{
			}

			operator local_ref<java::lang::Exception>() const;
			operator local_ref<java::lang::Throwable>() const;
			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::io::Serializable>() const;
			operator local_ref<android::util::AndroidException>() const;


			MalformedMimeTypeException();
			MalformedMimeTypeException(local_ref< java::lang::String > const&);
		}; //class MalformedMimeTypeException

	} //namespace IntentFilter_

	class IntentFilter
		: public object<IntentFilter>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)
		J2CPP_DECLARE_FIELD(8)
		J2CPP_DECLARE_FIELD(9)
		J2CPP_DECLARE_FIELD(10)
		J2CPP_DECLARE_FIELD(11)
		J2CPP_DECLARE_FIELD(12)
		J2CPP_DECLARE_FIELD(13)
		J2CPP_DECLARE_FIELD(14)
		J2CPP_DECLARE_FIELD(15)

		typedef IntentFilter_::AuthorityEntry AuthorityEntry;
		typedef IntentFilter_::MalformedMimeTypeException MalformedMimeTypeException;

		explicit IntentFilter(jobject jobj)
		: object<IntentFilter>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::os::Parcelable>() const;


		IntentFilter();
		IntentFilter(local_ref< java::lang::String > const&);
		IntentFilter(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		IntentFilter(local_ref< android::content::IntentFilter > const&);
		static local_ref< android::content::IntentFilter > create(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void setPriority(jint);
		jint getPriority();
		void addAction(local_ref< java::lang::String >  const&);
		jint countActions();
		local_ref< java::lang::String > getAction(jint);
		jboolean hasAction(local_ref< java::lang::String >  const&);
		jboolean matchAction(local_ref< java::lang::String >  const&);
		local_ref< java::util::Iterator > actionsIterator();
		void addDataType(local_ref< java::lang::String >  const&);
		jboolean hasDataType(local_ref< java::lang::String >  const&);
		jint countDataTypes();
		local_ref< java::lang::String > getDataType(jint);
		local_ref< java::util::Iterator > typesIterator();
		void addDataScheme(local_ref< java::lang::String >  const&);
		jint countDataSchemes();
		local_ref< java::lang::String > getDataScheme(jint);
		jboolean hasDataScheme(local_ref< java::lang::String >  const&);
		local_ref< java::util::Iterator > schemesIterator();
		void addDataAuthority(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		jint countDataAuthorities();
		local_ref< android::content::IntentFilter_::AuthorityEntry > getDataAuthority(jint);
		jboolean hasDataAuthority(local_ref< android::net::Uri >  const&);
		local_ref< java::util::Iterator > authoritiesIterator();
		void addDataPath(local_ref< java::lang::String >  const&, jint);
		jint countDataPaths();
		local_ref< android::os::PatternMatcher > getDataPath(jint);
		jboolean hasDataPath(local_ref< java::lang::String >  const&);
		local_ref< java::util::Iterator > pathsIterator();
		jint matchDataAuthority(local_ref< android::net::Uri >  const&);
		jint matchData(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< android::net::Uri >  const&);
		void addCategory(local_ref< java::lang::String >  const&);
		jint countCategories();
		local_ref< java::lang::String > getCategory(jint);
		jboolean hasCategory(local_ref< java::lang::String >  const&);
		local_ref< java::util::Iterator > categoriesIterator();
		local_ref< java::lang::String > matchCategories(local_ref< java::util::Set >  const&);
		jint match(local_ref< android::content::ContentResolver >  const&, local_ref< android::content::Intent >  const&, jboolean, local_ref< java::lang::String >  const&);
		jint match(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< android::net::Uri >  const&, local_ref< java::util::Set >  const&, local_ref< java::lang::String >  const&);
		void writeToXml(local_ref< org::xmlpull::v1::XmlSerializer >  const&);
		void readFromXml(local_ref< org::xmlpull::v1::XmlPullParser >  const&);
		void dump(local_ref< android::util::Printer >  const&, local_ref< java::lang::String >  const&);
		jint describeContents();
		void writeToParcel(local_ref< android::os::Parcel >  const&, jint);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > SYSTEM_HIGH_PRIORITY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > SYSTEM_LOW_PRIORITY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > MATCH_CATEGORY_MASK;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > MATCH_ADJUSTMENT_MASK;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > MATCH_ADJUSTMENT_NORMAL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jint > MATCH_CATEGORY_EMPTY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), jint > MATCH_CATEGORY_SCHEME;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), jint > MATCH_CATEGORY_HOST;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), jint > MATCH_CATEGORY_PORT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(9), J2CPP_FIELD_SIGNATURE(9), jint > MATCH_CATEGORY_PATH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(10), J2CPP_FIELD_SIGNATURE(10), jint > MATCH_CATEGORY_TYPE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(11), J2CPP_FIELD_SIGNATURE(11), jint > NO_MATCH_TYPE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(12), J2CPP_FIELD_SIGNATURE(12), jint > NO_MATCH_DATA;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(13), J2CPP_FIELD_SIGNATURE(13), jint > NO_MATCH_ACTION;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(14), J2CPP_FIELD_SIGNATURE(14), jint > NO_MATCH_CATEGORY;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(15), J2CPP_FIELD_SIGNATURE(15), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class IntentFilter

} //namespace content
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_INTENTFILTER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_INTENTFILTER_HPP_IMPL
#define J2CPP_ANDROID_CONTENT_INTENTFILTER_HPP_IMPL

namespace j2cpp {




android::content::IntentFilter_::AuthorityEntry::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::content::IntentFilter_::AuthorityEntry::AuthorityEntry(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
: object<android::content::IntentFilter_::AuthorityEntry>(
	call_new_object<
		android::content::IntentFilter_::AuthorityEntry::J2CPP_CLASS_NAME,
		android::content::IntentFilter_::AuthorityEntry::J2CPP_METHOD_NAME(0),
		android::content::IntentFilter_::AuthorityEntry::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1)
)
{
}


local_ref< java::lang::String > android::content::IntentFilter_::AuthorityEntry::getHost()
{
	return call_method<
		android::content::IntentFilter_::AuthorityEntry::J2CPP_CLASS_NAME,
		android::content::IntentFilter_::AuthorityEntry::J2CPP_METHOD_NAME(1),
		android::content::IntentFilter_::AuthorityEntry::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint android::content::IntentFilter_::AuthorityEntry::getPort()
{
	return call_method<
		android::content::IntentFilter_::AuthorityEntry::J2CPP_CLASS_NAME,
		android::content::IntentFilter_::AuthorityEntry::J2CPP_METHOD_NAME(2),
		android::content::IntentFilter_::AuthorityEntry::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(get_jobject());
}

jint android::content::IntentFilter_::AuthorityEntry::match(local_ref< android::net::Uri > const &a0)
{
	return call_method<
		android::content::IntentFilter_::AuthorityEntry::J2CPP_CLASS_NAME,
		android::content::IntentFilter_::AuthorityEntry::J2CPP_METHOD_NAME(3),
		android::content::IntentFilter_::AuthorityEntry::J2CPP_METHOD_SIGNATURE(3), 
		jint
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(android::content::IntentFilter_::AuthorityEntry,"android/content/IntentFilter$AuthorityEntry")
J2CPP_DEFINE_METHOD(android::content::IntentFilter_::AuthorityEntry,0,"<init>","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter_::AuthorityEntry,1,"getHost","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter_::AuthorityEntry,2,"getPort","()I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter_::AuthorityEntry,3,"match","(Landroid/net/Uri;)I")


android::content::IntentFilter_::MalformedMimeTypeException::operator local_ref<java::lang::Exception>() const
{
	return local_ref<java::lang::Exception>(get_jobject());
}

android::content::IntentFilter_::MalformedMimeTypeException::operator local_ref<java::lang::Throwable>() const
{
	return local_ref<java::lang::Throwable>(get_jobject());
}

android::content::IntentFilter_::MalformedMimeTypeException::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::content::IntentFilter_::MalformedMimeTypeException::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

android::content::IntentFilter_::MalformedMimeTypeException::operator local_ref<android::util::AndroidException>() const
{
	return local_ref<android::util::AndroidException>(get_jobject());
}


android::content::IntentFilter_::MalformedMimeTypeException::MalformedMimeTypeException()
: object<android::content::IntentFilter_::MalformedMimeTypeException>(
	call_new_object<
		android::content::IntentFilter_::MalformedMimeTypeException::J2CPP_CLASS_NAME,
		android::content::IntentFilter_::MalformedMimeTypeException::J2CPP_METHOD_NAME(0),
		android::content::IntentFilter_::MalformedMimeTypeException::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



android::content::IntentFilter_::MalformedMimeTypeException::MalformedMimeTypeException(local_ref< java::lang::String > const &a0)
: object<android::content::IntentFilter_::MalformedMimeTypeException>(
	call_new_object<
		android::content::IntentFilter_::MalformedMimeTypeException::J2CPP_CLASS_NAME,
		android::content::IntentFilter_::MalformedMimeTypeException::J2CPP_METHOD_NAME(1),
		android::content::IntentFilter_::MalformedMimeTypeException::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



J2CPP_DEFINE_CLASS(android::content::IntentFilter_::MalformedMimeTypeException,"android/content/IntentFilter$MalformedMimeTypeException")
J2CPP_DEFINE_METHOD(android::content::IntentFilter_::MalformedMimeTypeException,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter_::MalformedMimeTypeException,1,"<init>","(Ljava/lang/String;)V")



android::content::IntentFilter::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::content::IntentFilter::operator local_ref<android::os::Parcelable>() const
{
	return local_ref<android::os::Parcelable>(get_jobject());
}


android::content::IntentFilter::IntentFilter()
: object<android::content::IntentFilter>(
	call_new_object<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(0),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



android::content::IntentFilter::IntentFilter(local_ref< java::lang::String > const &a0)
: object<android::content::IntentFilter>(
	call_new_object<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(1),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



android::content::IntentFilter::IntentFilter(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
: object<android::content::IntentFilter>(
	call_new_object<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(2),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1)
)
{
}



android::content::IntentFilter::IntentFilter(local_ref< android::content::IntentFilter > const &a0)
: object<android::content::IntentFilter>(
	call_new_object<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(3),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(3)
	>(a0)
)
{
}


local_ref< android::content::IntentFilter > android::content::IntentFilter::create(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(4),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< android::content::IntentFilter >
	>(a0, a1);
}

void android::content::IntentFilter::setPriority(jint a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(5),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

jint android::content::IntentFilter::getPriority()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(6),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(6), 
		jint
	>(get_jobject());
}

void android::content::IntentFilter::addAction(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(7),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0);
}

jint android::content::IntentFilter::countActions()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(8),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(8), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > android::content::IntentFilter::getAction(jint a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(9),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jboolean android::content::IntentFilter::hasAction(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(10),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(10), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::content::IntentFilter::matchAction(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(11),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(11), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::util::Iterator > android::content::IntentFilter::actionsIterator()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(12),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

void android::content::IntentFilter::addDataType(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(13),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(13), 
		void
	>(get_jobject(), a0);
}

jboolean android::content::IntentFilter::hasDataType(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(14),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(14), 
		jboolean
	>(get_jobject(), a0);
}

jint android::content::IntentFilter::countDataTypes()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(15),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(15), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > android::content::IntentFilter::getDataType(jint a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(16),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

local_ref< java::util::Iterator > android::content::IntentFilter::typesIterator()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(17),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(17), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

void android::content::IntentFilter::addDataScheme(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(18),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(18), 
		void
	>(get_jobject(), a0);
}

jint android::content::IntentFilter::countDataSchemes()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(19),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(19), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > android::content::IntentFilter::getDataScheme(jint a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(20),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(20), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jboolean android::content::IntentFilter::hasDataScheme(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(21),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(21), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::util::Iterator > android::content::IntentFilter::schemesIterator()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(22),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(22), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

void android::content::IntentFilter::addDataAuthority(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(23),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(23), 
		void
	>(get_jobject(), a0, a1);
}

jint android::content::IntentFilter::countDataAuthorities()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(24),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(24), 
		jint
	>(get_jobject());
}

local_ref< android::content::IntentFilter_::AuthorityEntry > android::content::IntentFilter::getDataAuthority(jint a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(25),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(25), 
		local_ref< android::content::IntentFilter_::AuthorityEntry >
	>(get_jobject(), a0);
}

jboolean android::content::IntentFilter::hasDataAuthority(local_ref< android::net::Uri > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(26),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(26), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::util::Iterator > android::content::IntentFilter::authoritiesIterator()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(27),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(27), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

void android::content::IntentFilter::addDataPath(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(28),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(28), 
		void
	>(get_jobject(), a0, a1);
}

jint android::content::IntentFilter::countDataPaths()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(29),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(29), 
		jint
	>(get_jobject());
}

local_ref< android::os::PatternMatcher > android::content::IntentFilter::getDataPath(jint a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(30),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(30), 
		local_ref< android::os::PatternMatcher >
	>(get_jobject(), a0);
}

jboolean android::content::IntentFilter::hasDataPath(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(31),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(31), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::util::Iterator > android::content::IntentFilter::pathsIterator()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(32),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(32), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

jint android::content::IntentFilter::matchDataAuthority(local_ref< android::net::Uri > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(33),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(33), 
		jint
	>(get_jobject(), a0);
}

jint android::content::IntentFilter::matchData(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::net::Uri > const &a2)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(34),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(34), 
		jint
	>(get_jobject(), a0, a1, a2);
}

void android::content::IntentFilter::addCategory(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(35),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(35), 
		void
	>(get_jobject(), a0);
}

jint android::content::IntentFilter::countCategories()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(36),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(36), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > android::content::IntentFilter::getCategory(jint a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(37),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(37), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jboolean android::content::IntentFilter::hasCategory(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(38),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(38), 
		jboolean
	>(get_jobject(), a0);
}

local_ref< java::util::Iterator > android::content::IntentFilter::categoriesIterator()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(39),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(39), 
		local_ref< java::util::Iterator >
	>(get_jobject());
}

local_ref< java::lang::String > android::content::IntentFilter::matchCategories(local_ref< java::util::Set > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(40),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(40), 
		local_ref< java::lang::String >
	>(get_jobject(), a0);
}

jint android::content::IntentFilter::match(local_ref< android::content::ContentResolver > const &a0, local_ref< android::content::Intent > const &a1, jboolean a2, local_ref< java::lang::String > const &a3)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(41),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(41), 
		jint
	>(get_jobject(), a0, a1, a2, a3);
}

jint android::content::IntentFilter::match(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< android::net::Uri > const &a3, local_ref< java::util::Set > const &a4, local_ref< java::lang::String > const &a5)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(42),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(42), 
		jint
	>(get_jobject(), a0, a1, a2, a3, a4, a5);
}

void android::content::IntentFilter::writeToXml(local_ref< org::xmlpull::v1::XmlSerializer > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(43),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(43), 
		void
	>(get_jobject(), a0);
}

void android::content::IntentFilter::readFromXml(local_ref< org::xmlpull::v1::XmlPullParser > const &a0)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(44),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(44), 
		void
	>(get_jobject(), a0);
}

void android::content::IntentFilter::dump(local_ref< android::util::Printer > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(45),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(45), 
		void
	>(get_jobject(), a0, a1);
}

jint android::content::IntentFilter::describeContents()
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(46),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(46), 
		jint
	>(get_jobject());
}

void android::content::IntentFilter::writeToParcel(local_ref< android::os::Parcel > const &a0, jint a1)
{
	return call_method<
		android::content::IntentFilter::J2CPP_CLASS_NAME,
		android::content::IntentFilter::J2CPP_METHOD_NAME(47),
		android::content::IntentFilter::J2CPP_METHOD_SIGNATURE(47), 
		void
	>(get_jobject(), a0, a1);
}



static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(0),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(0),
	jint
> android::content::IntentFilter::SYSTEM_HIGH_PRIORITY;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(1),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(1),
	jint
> android::content::IntentFilter::SYSTEM_LOW_PRIORITY;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(2),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(2),
	jint
> android::content::IntentFilter::MATCH_CATEGORY_MASK;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(3),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(3),
	jint
> android::content::IntentFilter::MATCH_ADJUSTMENT_MASK;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(4),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(4),
	jint
> android::content::IntentFilter::MATCH_ADJUSTMENT_NORMAL;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(5),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(5),
	jint
> android::content::IntentFilter::MATCH_CATEGORY_EMPTY;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(6),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(6),
	jint
> android::content::IntentFilter::MATCH_CATEGORY_SCHEME;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(7),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(7),
	jint
> android::content::IntentFilter::MATCH_CATEGORY_HOST;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(8),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(8),
	jint
> android::content::IntentFilter::MATCH_CATEGORY_PORT;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(9),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(9),
	jint
> android::content::IntentFilter::MATCH_CATEGORY_PATH;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(10),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(10),
	jint
> android::content::IntentFilter::MATCH_CATEGORY_TYPE;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(11),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(11),
	jint
> android::content::IntentFilter::NO_MATCH_TYPE;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(12),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(12),
	jint
> android::content::IntentFilter::NO_MATCH_DATA;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(13),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(13),
	jint
> android::content::IntentFilter::NO_MATCH_ACTION;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(14),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(14),
	jint
> android::content::IntentFilter::NO_MATCH_CATEGORY;

static_field<
	android::content::IntentFilter::J2CPP_CLASS_NAME,
	android::content::IntentFilter::J2CPP_FIELD_NAME(15),
	android::content::IntentFilter::J2CPP_FIELD_SIGNATURE(15),
	local_ref< android::os::Parcelable_::Creator >
> android::content::IntentFilter::CREATOR;


J2CPP_DEFINE_CLASS(android::content::IntentFilter,"android/content/IntentFilter")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,1,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,2,"<init>","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,3,"<init>","(Landroid/content/IntentFilter;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,4,"create","(Ljava/lang/String;Ljava/lang/String;)Landroid/content/IntentFilter;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,5,"setPriority","(I)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,6,"getPriority","()I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,7,"addAction","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,8,"countActions","()I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,9,"getAction","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,10,"hasAction","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,11,"matchAction","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,12,"actionsIterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,13,"addDataType","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,14,"hasDataType","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,15,"countDataTypes","()I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,16,"getDataType","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,17,"typesIterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,18,"addDataScheme","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,19,"countDataSchemes","()I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,20,"getDataScheme","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,21,"hasDataScheme","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,22,"schemesIterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,23,"addDataAuthority","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,24,"countDataAuthorities","()I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,25,"getDataAuthority","(I)Landroid/content/IntentFilter$AuthorityEntry;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,26,"hasDataAuthority","(Landroid/net/Uri;)Z")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,27,"authoritiesIterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,28,"addDataPath","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,29,"countDataPaths","()I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,30,"getDataPath","(I)Landroid/os/PatternMatcher;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,31,"hasDataPath","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,32,"pathsIterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,33,"matchDataAuthority","(Landroid/net/Uri;)I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,34,"matchData","(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,35,"addCategory","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,36,"countCategories","()I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,37,"getCategory","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,38,"hasCategory","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,39,"categoriesIterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,40,"matchCategories","(Ljava/util/Set;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,41,"match","(Landroid/content/ContentResolver;Landroid/content/Intent;ZLjava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,42,"match","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;Ljava/util/Set;Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,43,"writeToXml","(Lorg/xmlpull/v1/XmlSerializer;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,44,"readFromXml","(Lorg/xmlpull/v1/XmlPullParser;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,45,"dump","(Landroid/util/Printer;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,46,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,47,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::content::IntentFilter,48,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,0,"SYSTEM_HIGH_PRIORITY","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,1,"SYSTEM_LOW_PRIORITY","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,2,"MATCH_CATEGORY_MASK","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,3,"MATCH_ADJUSTMENT_MASK","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,4,"MATCH_ADJUSTMENT_NORMAL","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,5,"MATCH_CATEGORY_EMPTY","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,6,"MATCH_CATEGORY_SCHEME","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,7,"MATCH_CATEGORY_HOST","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,8,"MATCH_CATEGORY_PORT","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,9,"MATCH_CATEGORY_PATH","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,10,"MATCH_CATEGORY_TYPE","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,11,"NO_MATCH_TYPE","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,12,"NO_MATCH_DATA","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,13,"NO_MATCH_ACTION","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,14,"NO_MATCH_CATEGORY","I")
J2CPP_DEFINE_FIELD(android::content::IntentFilter,15,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_INTENTFILTER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
