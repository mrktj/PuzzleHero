/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.opengl.GLES10Ext
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OPENGL_GLES10EXT_HPP_DECL
#define J2CPP_ANDROID_OPENGL_GLES10EXT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace nio { class IntBuffer; } } }


#include <java/lang/Object.hpp>
#include <java/nio/IntBuffer.hpp>


namespace j2cpp {

namespace android { namespace opengl {

	class GLES10Ext;
	class GLES10Ext
		: public object<GLES10Ext>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		explicit GLES10Ext(jobject jobj)
		: object<GLES10Ext>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		GLES10Ext();
		static jint glQueryMatrixxOES(local_ref< array<jint,1> >  const&, jint, local_ref< array<jint,1> >  const&, jint);
		static jint glQueryMatrixxOES(local_ref< java::nio::IntBuffer >  const&, local_ref< java::nio::IntBuffer >  const&);
	}; //class GLES10Ext

} //namespace opengl
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_OPENGL_GLES10EXT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OPENGL_GLES10EXT_HPP_IMPL
#define J2CPP_ANDROID_OPENGL_GLES10EXT_HPP_IMPL

namespace j2cpp {



android::opengl::GLES10Ext::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::opengl::GLES10Ext::GLES10Ext()
: object<android::opengl::GLES10Ext>(
	call_new_object<
		android::opengl::GLES10Ext::J2CPP_CLASS_NAME,
		android::opengl::GLES10Ext::J2CPP_METHOD_NAME(0),
		android::opengl::GLES10Ext::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


jint android::opengl::GLES10Ext::glQueryMatrixxOES(local_ref< array<jint,1> > const &a0, jint a1, local_ref< array<jint,1> > const &a2, jint a3)
{
	return call_static_method<
		android::opengl::GLES10Ext::J2CPP_CLASS_NAME,
		android::opengl::GLES10Ext::J2CPP_METHOD_NAME(1),
		android::opengl::GLES10Ext::J2CPP_METHOD_SIGNATURE(1), 
		jint
	>(a0, a1, a2, a3);
}

jint android::opengl::GLES10Ext::glQueryMatrixxOES(local_ref< java::nio::IntBuffer > const &a0, local_ref< java::nio::IntBuffer > const &a1)
{
	return call_static_method<
		android::opengl::GLES10Ext::J2CPP_CLASS_NAME,
		android::opengl::GLES10Ext::J2CPP_METHOD_NAME(2),
		android::opengl::GLES10Ext::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(a0, a1);
}


J2CPP_DEFINE_CLASS(android::opengl::GLES10Ext,"android/opengl/GLES10Ext")
J2CPP_DEFINE_METHOD(android::opengl::GLES10Ext,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::opengl::GLES10Ext,1,"glQueryMatrixxOES","([II[II)I")
J2CPP_DEFINE_METHOD(android::opengl::GLES10Ext,2,"glQueryMatrixxOES","(Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OPENGL_GLES10EXT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
