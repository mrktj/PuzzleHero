/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.webkit.URLUtil
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_DECL
#define J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace webkit {

	class URLUtil;
	class URLUtil
		: public object<URLUtil>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)

		explicit URLUtil(jobject jobj)
		: object<URLUtil>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		URLUtil();
		static local_ref< java::lang::String > guessUrl(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > composeSearchUrl(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		static local_ref< array<jbyte,1> > decode(local_ref< array<jbyte,1> >  const&);
		static jboolean isAssetUrl(local_ref< java::lang::String >  const&);
		static jboolean isCookielessProxyUrl(local_ref< java::lang::String >  const&);
		static jboolean isFileUrl(local_ref< java::lang::String >  const&);
		static jboolean isAboutUrl(local_ref< java::lang::String >  const&);
		static jboolean isDataUrl(local_ref< java::lang::String >  const&);
		static jboolean isJavaScriptUrl(local_ref< java::lang::String >  const&);
		static jboolean isHttpUrl(local_ref< java::lang::String >  const&);
		static jboolean isHttpsUrl(local_ref< java::lang::String >  const&);
		static jboolean isNetworkUrl(local_ref< java::lang::String >  const&);
		static jboolean isContentUrl(local_ref< java::lang::String >  const&);
		static jboolean isValidUrl(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > stripAnchor(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > guessFileName(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
	}; //class URLUtil

} //namespace webkit
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_IMPL
#define J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_IMPL

namespace j2cpp {



android::webkit::URLUtil::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::webkit::URLUtil::URLUtil()
: object<android::webkit::URLUtil>(
	call_new_object<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(0),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


local_ref< java::lang::String > android::webkit::URLUtil::guessUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(1),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > android::webkit::URLUtil::composeSearchUrl(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(2),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::String >
	>(a0, a1, a2);
}

local_ref< array<jbyte,1> > android::webkit::URLUtil::decode(local_ref< array<jbyte,1> > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(3),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< array<jbyte,1> >
	>(a0);
}

jboolean android::webkit::URLUtil::isAssetUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(4),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(a0);
}

jboolean android::webkit::URLUtil::isCookielessProxyUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(5),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>(a0);
}

jboolean android::webkit::URLUtil::isFileUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(6),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(6), 
		jboolean
	>(a0);
}

jboolean android::webkit::URLUtil::isAboutUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(7),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(a0);
}

jboolean android::webkit::URLUtil::isDataUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(8),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(8), 
		jboolean
	>(a0);
}

jboolean android::webkit::URLUtil::isJavaScriptUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(9),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(9), 
		jboolean
	>(a0);
}

jboolean android::webkit::URLUtil::isHttpUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(10),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(10), 
		jboolean
	>(a0);
}

jboolean android::webkit::URLUtil::isHttpsUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(11),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(11), 
		jboolean
	>(a0);
}

jboolean android::webkit::URLUtil::isNetworkUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(12),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(12), 
		jboolean
	>(a0);
}

jboolean android::webkit::URLUtil::isContentUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(13),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(a0);
}

jboolean android::webkit::URLUtil::isValidUrl(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(14),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(14), 
		jboolean
	>(a0);
}

local_ref< java::lang::String > android::webkit::URLUtil::stripAnchor(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(15),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(15), 
		local_ref< java::lang::String >
	>(a0);
}

local_ref< java::lang::String > android::webkit::URLUtil::guessFileName(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_static_method<
		android::webkit::URLUtil::J2CPP_CLASS_NAME,
		android::webkit::URLUtil::J2CPP_METHOD_NAME(16),
		android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(16), 
		local_ref< java::lang::String >
	>(a0, a1, a2);
}


J2CPP_DEFINE_CLASS(android::webkit::URLUtil,"android/webkit/URLUtil")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,1,"guessUrl","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,2,"composeSearchUrl","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,3,"decode","([B)[B")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,4,"isAssetUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,5,"isCookielessProxyUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,6,"isFileUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,7,"isAboutUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,8,"isDataUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,9,"isJavaScriptUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,10,"isHttpUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,11,"isHttpsUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,12,"isNetworkUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,13,"isContentUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,14,"isValidUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,15,"stripAnchor","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,16,"guessFileName","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
