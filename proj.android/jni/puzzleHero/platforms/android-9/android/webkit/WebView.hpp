/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.webkit.WebView
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_DECL
#define J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Map; } } }
namespace j2cpp { namespace java { namespace io { class File; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }
namespace j2cpp { namespace android { namespace webkit { class WebSettings; } } }
namespace j2cpp { namespace android { namespace webkit { class WebViewClient; } } }
namespace j2cpp { namespace android { namespace webkit { class DownloadListener; } } }
namespace j2cpp { namespace android { namespace webkit { namespace WebView_ { class HitTestResult; } } } }
namespace j2cpp { namespace android { namespace webkit { class WebBackForwardList; } } }
namespace j2cpp { namespace android { namespace webkit { class WebChromeClient; } } }
namespace j2cpp { namespace android { namespace webkit { class PluginList; } } }
namespace j2cpp { namespace android { namespace webkit { namespace WebView_ { class PictureListener; } } } }
namespace j2cpp { namespace android { namespace net { namespace http { class SslCertificate; } } } }
namespace j2cpp { namespace android { namespace view { class ViewManager; } } }
namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace view { class KeyEvent; } } }
namespace j2cpp { namespace android { namespace view { namespace ViewTreeObserver_ { class OnGlobalFocusChangeListener; } } } }
namespace j2cpp { namespace android { namespace view { class ViewGroup; } } }
namespace j2cpp { namespace android { namespace view { namespace accessibility { class AccessibilityEventSource; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class EditorInfo; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class InputConnection; } } } }
namespace j2cpp { namespace android { namespace view { class MotionEvent; } } }
namespace j2cpp { namespace android { namespace view { namespace ViewGroup_ { class OnHierarchyChangeListener; } } } }
namespace j2cpp { namespace android { namespace view { namespace ViewGroup_ { class LayoutParams; } } } }
namespace j2cpp { namespace android { namespace view { class ViewParent; } } }
namespace j2cpp { namespace android { namespace os { class Message; } } }
namespace j2cpp { namespace android { namespace os { class Bundle; } } }
namespace j2cpp { namespace android { namespace graphics { class Canvas; } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace android { namespace graphics { class Bitmap; } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { namespace Drawable_ { class Callback; } } } } }
namespace j2cpp { namespace android { namespace graphics { class Picture; } } }
namespace j2cpp { namespace android { namespace widget { class AbsoluteLayout; } } }


#include <android/content/Context.hpp>
#include <android/graphics/Bitmap.hpp>
#include <android/graphics/Canvas.hpp>
#include <android/graphics/Picture.hpp>
#include <android/graphics/Rect.hpp>
#include <android/graphics/drawable/Drawable.hpp>
#include <android/net/http/SslCertificate.hpp>
#include <android/os/Bundle.hpp>
#include <android/os/Message.hpp>
#include <android/util/AttributeSet.hpp>
#include <android/view/KeyEvent.hpp>
#include <android/view/MotionEvent.hpp>
#include <android/view/View.hpp>
#include <android/view/ViewGroup.hpp>
#include <android/view/ViewManager.hpp>
#include <android/view/ViewParent.hpp>
#include <android/view/ViewTreeObserver.hpp>
#include <android/view/accessibility/AccessibilityEventSource.hpp>
#include <android/view/inputmethod/EditorInfo.hpp>
#include <android/view/inputmethod/InputConnection.hpp>
#include <android/webkit/DownloadListener.hpp>
#include <android/webkit/PluginList.hpp>
#include <android/webkit/WebBackForwardList.hpp>
#include <android/webkit/WebChromeClient.hpp>
#include <android/webkit/WebSettings.hpp>
#include <android/webkit/WebView.hpp>
#include <android/webkit/WebViewClient.hpp>
#include <android/widget/AbsoluteLayout.hpp>
#include <java/io/File.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/Map.hpp>


namespace j2cpp {

namespace android { namespace webkit {

	class WebView;
	namespace WebView_ {

		class WebViewTransport;
		class WebViewTransport
			: public object<WebViewTransport>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_FIELD(0)

			explicit WebViewTransport(jobject jobj)
			: object<WebViewTransport>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			WebViewTransport(local_ref< android::webkit::WebView > const&);
			void setWebView(local_ref< android::webkit::WebView >  const&);
			local_ref< android::webkit::WebView > getWebView();

		}; //class WebViewTransport

		class HitTestResult;
		class HitTestResult
			: public object<HitTestResult>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)
			J2CPP_DECLARE_FIELD(5)
			J2CPP_DECLARE_FIELD(6)
			J2CPP_DECLARE_FIELD(7)
			J2CPP_DECLARE_FIELD(8)
			J2CPP_DECLARE_FIELD(9)
			J2CPP_DECLARE_FIELD(10)

			explicit HitTestResult(jobject jobj)
			: object<HitTestResult>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			jint getType();
			local_ref< java::lang::String > getExtra();

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > UNKNOWN_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > ANCHOR_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > PHONE_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > GEO_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > EMAIL_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jint > IMAGE_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), jint > IMAGE_ANCHOR_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), jint > SRC_ANCHOR_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), jint > SRC_IMAGE_ANCHOR_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(9), J2CPP_FIELD_SIGNATURE(9), jint > EDIT_TEXT_TYPE;
		}; //class HitTestResult

		class PictureListener;
		class PictureListener
			: public object<PictureListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit PictureListener(jobject jobj)
			: object<PictureListener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			void onNewPicture(local_ref< android::webkit::WebView >  const&, local_ref< android::graphics::Picture >  const&);
		}; //class PictureListener

	} //namespace WebView_

	class WebView
		: public object<WebView>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)
		J2CPP_DECLARE_METHOD(77)
		J2CPP_DECLARE_METHOD(78)
		J2CPP_DECLARE_METHOD(79)
		J2CPP_DECLARE_METHOD(80)
		J2CPP_DECLARE_METHOD(81)
		J2CPP_DECLARE_METHOD(82)
		J2CPP_DECLARE_METHOD(83)
		J2CPP_DECLARE_METHOD(84)
		J2CPP_DECLARE_METHOD(85)
		J2CPP_DECLARE_METHOD(86)
		J2CPP_DECLARE_METHOD(87)
		J2CPP_DECLARE_METHOD(88)
		J2CPP_DECLARE_METHOD(89)
		J2CPP_DECLARE_METHOD(90)
		J2CPP_DECLARE_METHOD(91)
		J2CPP_DECLARE_METHOD(92)
		J2CPP_DECLARE_METHOD(93)
		J2CPP_DECLARE_METHOD(94)
		J2CPP_DECLARE_METHOD(95)
		J2CPP_DECLARE_METHOD(96)
		J2CPP_DECLARE_METHOD(97)
		J2CPP_DECLARE_METHOD(98)
		J2CPP_DECLARE_METHOD(99)
		J2CPP_DECLARE_METHOD(100)
		J2CPP_DECLARE_METHOD(101)
		J2CPP_DECLARE_METHOD(102)
		J2CPP_DECLARE_METHOD(103)
		J2CPP_DECLARE_METHOD(104)
		J2CPP_DECLARE_METHOD(105)
		J2CPP_DECLARE_METHOD(106)
		J2CPP_DECLARE_METHOD(107)
		J2CPP_DECLARE_METHOD(108)
		J2CPP_DECLARE_METHOD(109)
		J2CPP_DECLARE_METHOD(110)
		J2CPP_DECLARE_METHOD(111)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)

		typedef WebView_::WebViewTransport WebViewTransport;
		typedef WebView_::HitTestResult HitTestResult;
		typedef WebView_::PictureListener PictureListener;

		explicit WebView(jobject jobj)
		: object<WebView>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::view::ViewManager>() const;
		operator local_ref<android::view::View>() const;
		operator local_ref<android::view::ViewTreeObserver_::OnGlobalFocusChangeListener>() const;
		operator local_ref<android::view::ViewGroup>() const;
		operator local_ref<android::view::accessibility::AccessibilityEventSource>() const;
		operator local_ref<android::view::ViewGroup_::OnHierarchyChangeListener>() const;
		operator local_ref<android::view::ViewParent>() const;
		operator local_ref<android::graphics::drawable::Drawable_::Callback>() const;
		operator local_ref<android::widget::AbsoluteLayout>() const;


		WebView(local_ref< android::content::Context > const&);
		WebView(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&);
		WebView(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&, jint);
		void setOverScrollMode(jint);
		void setScrollBarStyle(jint);
		void setHorizontalScrollbarOverlay(jboolean);
		void setVerticalScrollbarOverlay(jboolean);
		jboolean overlayHorizontalScrollbar();
		jboolean overlayVerticalScrollbar();
		local_ref< android::net::http::SslCertificate > getCertificate();
		void setCertificate(local_ref< android::net::http::SslCertificate >  const&);
		void savePassword(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void setHttpAuthUsernamePassword(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		local_ref< array< local_ref< java::lang::String >, 1> > getHttpAuthUsernamePassword(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void destroy();
		static void enablePlatformNotifications();
		static void disablePlatformNotifications();
		void setNetworkAvailable(jboolean);
		local_ref< android::webkit::WebBackForwardList > saveState(local_ref< android::os::Bundle >  const&);
		jboolean savePicture(local_ref< android::os::Bundle >  const&, local_ref< java::io::File >  const&);
		jboolean restorePicture(local_ref< android::os::Bundle >  const&, local_ref< java::io::File >  const&);
		local_ref< android::webkit::WebBackForwardList > restoreState(local_ref< android::os::Bundle >  const&);
		void loadUrl(local_ref< java::lang::String >  const&, local_ref< java::util::Map >  const&);
		void loadUrl(local_ref< java::lang::String >  const&);
		void postUrl(local_ref< java::lang::String >  const&, local_ref< array<jbyte,1> >  const&);
		void loadData(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void loadDataWithBaseURL(local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&, local_ref< java::lang::String >  const&);
		void stopLoading();
		void reload();
		jboolean canGoBack();
		void goBack();
		jboolean canGoForward();
		void goForward();
		jboolean canGoBackOrForward(jint);
		void goBackOrForward(jint);
		jboolean pageUp(jboolean);
		jboolean pageDown(jboolean);
		void clearView();
		local_ref< android::graphics::Picture > capturePicture();
		jfloat getScale();
		void setInitialScale(jint);
		void invokeZoomPicker();
		local_ref< android::webkit::WebView_::HitTestResult > getHitTestResult();
		void requestFocusNodeHref(local_ref< android::os::Message >  const&);
		void requestImageRef(local_ref< android::os::Message >  const&);
		local_ref< java::lang::String > getUrl();
		local_ref< java::lang::String > getOriginalUrl();
		local_ref< java::lang::String > getTitle();
		local_ref< android::graphics::Bitmap > getFavicon();
		jint getProgress();
		jint getContentHeight();
		void pauseTimers();
		void resumeTimers();
		void freeMemory();
		void clearCache(jboolean);
		void clearFormData();
		void clearHistory();
		void clearSslPreferences();
		local_ref< android::webkit::WebBackForwardList > copyBackForwardList();
		void findNext(jboolean);
		jint findAll(local_ref< java::lang::String >  const&);
		static local_ref< java::lang::String > findAddress(local_ref< java::lang::String >  const&);
		void clearMatches();
		void documentHasImages(local_ref< android::os::Message >  const&);
		void computeScroll();
		void setWebViewClient(local_ref< android::webkit::WebViewClient >  const&);
		void setDownloadListener(local_ref< android::webkit::DownloadListener >  const&);
		void setWebChromeClient(local_ref< android::webkit::WebChromeClient >  const&);
		void setPictureListener(local_ref< android::webkit::WebView_::PictureListener >  const&);
		void addJavascriptInterface(local_ref< java::lang::Object >  const&, local_ref< java::lang::String >  const&);
		local_ref< android::webkit::WebSettings > getSettings();
		static local_ref< android::webkit::PluginList > getPluginList();
		void refreshPlugins(jboolean);
		void draw(local_ref< android::graphics::Canvas >  const&);
		void setLayoutParams(local_ref< android::view::ViewGroup_::LayoutParams >  const&);
		jboolean performLongClick();
		local_ref< android::view::inputmethod::InputConnection > onCreateInputConnection(local_ref< android::view::inputmethod::EditorInfo >  const&);
		jboolean onKeyMultiple(jint, jint, local_ref< android::view::KeyEvent >  const&);
		jboolean onKeyDown(jint, local_ref< android::view::KeyEvent >  const&);
		jboolean onKeyUp(jint, local_ref< android::view::KeyEvent >  const&);
		void emulateShiftHeld();
		void onChildViewAdded(local_ref< android::view::View >  const&, local_ref< android::view::View >  const&);
		void onChildViewRemoved(local_ref< android::view::View >  const&, local_ref< android::view::View >  const&);
		void onGlobalFocusChanged(local_ref< android::view::View >  const&, local_ref< android::view::View >  const&);
		void onWindowFocusChanged(jboolean);
		jboolean dispatchKeyEvent(local_ref< android::view::KeyEvent >  const&);
		jboolean onTouchEvent(local_ref< android::view::MotionEvent >  const&);
		void setMapTrackballToArrowKeys(jboolean);
		jboolean onTrackballEvent(local_ref< android::view::MotionEvent >  const&);
		void flingScroll(jint, jint);
		local_ref< android::view::View > getZoomControls();
		jboolean zoomIn();
		jboolean zoomOut();
		jboolean requestFocus(jint, local_ref< android::graphics::Rect >  const&);
		jboolean requestChildRectangleOnScreen(local_ref< android::view::View >  const&, local_ref< android::graphics::Rect >  const&, jboolean);
		void setBackgroundColor(jint);
		void debugDump();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::lang::String > > SCHEME_TEL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< java::lang::String > > SCHEME_MAILTO;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< java::lang::String > > SCHEME_GEO;
	}; //class WebView

} //namespace webkit
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_IMPL
#define J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_IMPL

namespace j2cpp {




android::webkit::WebView_::WebViewTransport::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::webkit::WebView_::WebViewTransport::WebViewTransport(local_ref< android::webkit::WebView > const &a0)
: object<android::webkit::WebView_::WebViewTransport>(
	call_new_object<
		android::webkit::WebView_::WebViewTransport::J2CPP_CLASS_NAME,
		android::webkit::WebView_::WebViewTransport::J2CPP_METHOD_NAME(0),
		android::webkit::WebView_::WebViewTransport::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


void android::webkit::WebView_::WebViewTransport::setWebView(local_ref< android::webkit::WebView > const &a0)
{
	return call_method<
		android::webkit::WebView_::WebViewTransport::J2CPP_CLASS_NAME,
		android::webkit::WebView_::WebViewTransport::J2CPP_METHOD_NAME(1),
		android::webkit::WebView_::WebViewTransport::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0);
}

local_ref< android::webkit::WebView > android::webkit::WebView_::WebViewTransport::getWebView()
{
	return call_method<
		android::webkit::WebView_::WebViewTransport::J2CPP_CLASS_NAME,
		android::webkit::WebView_::WebViewTransport::J2CPP_METHOD_NAME(2),
		android::webkit::WebView_::WebViewTransport::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< android::webkit::WebView >
	>(get_jobject());
}



J2CPP_DEFINE_CLASS(android::webkit::WebView_::WebViewTransport,"android/webkit/WebView$WebViewTransport")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::WebViewTransport,0,"<init>","(Landroid/webkit/WebView;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::WebViewTransport,1,"setWebView","(Landroid/webkit/WebView;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::WebViewTransport,2,"getWebView","()Landroid/webkit/WebView;")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::WebViewTransport,0,"this$0","Landroid/webkit/WebView;")


android::webkit::WebView_::HitTestResult::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


jint android::webkit::WebView_::HitTestResult::getType()
{
	return call_method<
		android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
		android::webkit::WebView_::HitTestResult::J2CPP_METHOD_NAME(1),
		android::webkit::WebView_::HitTestResult::J2CPP_METHOD_SIGNATURE(1), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > android::webkit::WebView_::HitTestResult::getExtra()
{
	return call_method<
		android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
		android::webkit::WebView_::HitTestResult::J2CPP_METHOD_NAME(2),
		android::webkit::WebView_::HitTestResult::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< java::lang::String >
	>(get_jobject());
}


static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(0),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(0),
	jint
> android::webkit::WebView_::HitTestResult::UNKNOWN_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(1),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(1),
	jint
> android::webkit::WebView_::HitTestResult::ANCHOR_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(2),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(2),
	jint
> android::webkit::WebView_::HitTestResult::PHONE_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(3),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(3),
	jint
> android::webkit::WebView_::HitTestResult::GEO_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(4),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(4),
	jint
> android::webkit::WebView_::HitTestResult::EMAIL_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(5),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(5),
	jint
> android::webkit::WebView_::HitTestResult::IMAGE_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(6),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(6),
	jint
> android::webkit::WebView_::HitTestResult::IMAGE_ANCHOR_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(7),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(7),
	jint
> android::webkit::WebView_::HitTestResult::SRC_ANCHOR_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(8),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(8),
	jint
> android::webkit::WebView_::HitTestResult::SRC_IMAGE_ANCHOR_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(9),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(9),
	jint
> android::webkit::WebView_::HitTestResult::EDIT_TEXT_TYPE;


J2CPP_DEFINE_CLASS(android::webkit::WebView_::HitTestResult,"android/webkit/WebView$HitTestResult")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::HitTestResult,0,"<init>","(Landroid/webkit/WebView;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::HitTestResult,1,"getType","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::HitTestResult,2,"getExtra","()Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,0,"UNKNOWN_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,1,"ANCHOR_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,2,"PHONE_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,3,"GEO_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,4,"EMAIL_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,5,"IMAGE_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,6,"IMAGE_ANCHOR_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,7,"SRC_ANCHOR_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,8,"SRC_IMAGE_ANCHOR_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,9,"EDIT_TEXT_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,10,"this$0","Landroid/webkit/WebView;")


android::webkit::WebView_::PictureListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void android::webkit::WebView_::PictureListener::onNewPicture(local_ref< android::webkit::WebView > const &a0, local_ref< android::graphics::Picture > const &a1)
{
	return call_method<
		android::webkit::WebView_::PictureListener::J2CPP_CLASS_NAME,
		android::webkit::WebView_::PictureListener::J2CPP_METHOD_NAME(0),
		android::webkit::WebView_::PictureListener::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject(), a0, a1);
}


J2CPP_DEFINE_CLASS(android::webkit::WebView_::PictureListener,"android/webkit/WebView$PictureListener")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::PictureListener,0,"onNewPicture","(Landroid/webkit/WebView;Landroid/graphics/Picture;)V")



android::webkit::WebView::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::webkit::WebView::operator local_ref<android::view::ViewManager>() const
{
	return local_ref<android::view::ViewManager>(get_jobject());
}

android::webkit::WebView::operator local_ref<android::view::View>() const
{
	return local_ref<android::view::View>(get_jobject());
}

android::webkit::WebView::operator local_ref<android::view::ViewTreeObserver_::OnGlobalFocusChangeListener>() const
{
	return local_ref<android::view::ViewTreeObserver_::OnGlobalFocusChangeListener>(get_jobject());
}

android::webkit::WebView::operator local_ref<android::view::ViewGroup>() const
{
	return local_ref<android::view::ViewGroup>(get_jobject());
}

android::webkit::WebView::operator local_ref<android::view::accessibility::AccessibilityEventSource>() const
{
	return local_ref<android::view::accessibility::AccessibilityEventSource>(get_jobject());
}

android::webkit::WebView::operator local_ref<android::view::ViewGroup_::OnHierarchyChangeListener>() const
{
	return local_ref<android::view::ViewGroup_::OnHierarchyChangeListener>(get_jobject());
}

android::webkit::WebView::operator local_ref<android::view::ViewParent>() const
{
	return local_ref<android::view::ViewParent>(get_jobject());
}

android::webkit::WebView::operator local_ref<android::graphics::drawable::Drawable_::Callback>() const
{
	return local_ref<android::graphics::drawable::Drawable_::Callback>(get_jobject());
}

android::webkit::WebView::operator local_ref<android::widget::AbsoluteLayout>() const
{
	return local_ref<android::widget::AbsoluteLayout>(get_jobject());
}


android::webkit::WebView::WebView(local_ref< android::content::Context > const &a0)
: object<android::webkit::WebView>(
	call_new_object<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(0),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



android::webkit::WebView::WebView(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
: object<android::webkit::WebView>(
	call_new_object<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(1),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1)
)
{
}



android::webkit::WebView::WebView(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1, jint a2)
: object<android::webkit::WebView>(
	call_new_object<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(2),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1, a2)
)
{
}


void android::webkit::WebView::setOverScrollMode(jint a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(3),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::setScrollBarStyle(jint a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(4),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::setHorizontalScrollbarOverlay(jboolean a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(5),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::setVerticalScrollbarOverlay(jboolean a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(6),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebView::overlayHorizontalScrollbar()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(7),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject());
}

jboolean android::webkit::WebView::overlayVerticalScrollbar()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(8),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(8), 
		jboolean
	>(get_jobject());
}

local_ref< android::net::http::SslCertificate > android::webkit::WebView::getCertificate()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(9),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< android::net::http::SslCertificate >
	>(get_jobject());
}

void android::webkit::WebView::setCertificate(local_ref< android::net::http::SslCertificate > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(10),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::savePassword(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(11),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0, a1, a2);
}

void android::webkit::WebView::setHttpAuthUsernamePassword(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(12),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(12), 
		void
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< array< local_ref< java::lang::String >, 1> > android::webkit::WebView::getHttpAuthUsernamePassword(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(13),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(13), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject(), a0, a1);
}

void android::webkit::WebView::destroy()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(14),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(14), 
		void
	>(get_jobject());
}

void android::webkit::WebView::enablePlatformNotifications()
{
	return call_static_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(15),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(15), 
		void
	>();
}

void android::webkit::WebView::disablePlatformNotifications()
{
	return call_static_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(16),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(16), 
		void
	>();
}

void android::webkit::WebView::setNetworkAvailable(jboolean a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(17),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(17), 
		void
	>(get_jobject(), a0);
}

local_ref< android::webkit::WebBackForwardList > android::webkit::WebView::saveState(local_ref< android::os::Bundle > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(18),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(18), 
		local_ref< android::webkit::WebBackForwardList >
	>(get_jobject(), a0);
}

jboolean android::webkit::WebView::savePicture(local_ref< android::os::Bundle > const &a0, local_ref< java::io::File > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(19),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(19), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::webkit::WebView::restorePicture(local_ref< android::os::Bundle > const &a0, local_ref< java::io::File > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(20),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(20), 
		jboolean
	>(get_jobject(), a0, a1);
}

local_ref< android::webkit::WebBackForwardList > android::webkit::WebView::restoreState(local_ref< android::os::Bundle > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(21),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(21), 
		local_ref< android::webkit::WebBackForwardList >
	>(get_jobject(), a0);
}

void android::webkit::WebView::loadUrl(local_ref< java::lang::String > const &a0, local_ref< java::util::Map > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(22),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(22), 
		void
	>(get_jobject(), a0, a1);
}

void android::webkit::WebView::loadUrl(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(23),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(23), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::postUrl(local_ref< java::lang::String > const &a0, local_ref< array<jbyte,1> > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(24),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(24), 
		void
	>(get_jobject(), a0, a1);
}

void android::webkit::WebView::loadData(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(25),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(25), 
		void
	>(get_jobject(), a0, a1, a2);
}

void android::webkit::WebView::loadDataWithBaseURL(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::String > const &a4)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(26),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(26), 
		void
	>(get_jobject(), a0, a1, a2, a3, a4);
}

void android::webkit::WebView::stopLoading()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(27),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(27), 
		void
	>(get_jobject());
}

void android::webkit::WebView::reload()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(28),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(28), 
		void
	>(get_jobject());
}

jboolean android::webkit::WebView::canGoBack()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(29),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(29), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebView::goBack()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(30),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(30), 
		void
	>(get_jobject());
}

jboolean android::webkit::WebView::canGoForward()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(31),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(31), 
		jboolean
	>(get_jobject());
}

void android::webkit::WebView::goForward()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(32),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(32), 
		void
	>(get_jobject());
}

jboolean android::webkit::WebView::canGoBackOrForward(jint a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(33),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(33), 
		jboolean
	>(get_jobject(), a0);
}

void android::webkit::WebView::goBackOrForward(jint a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(34),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(34), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebView::pageUp(jboolean a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(35),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(35), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::webkit::WebView::pageDown(jboolean a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(36),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(36), 
		jboolean
	>(get_jobject(), a0);
}

void android::webkit::WebView::clearView()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(37),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(37), 
		void
	>(get_jobject());
}

local_ref< android::graphics::Picture > android::webkit::WebView::capturePicture()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(38),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(38), 
		local_ref< android::graphics::Picture >
	>(get_jobject());
}

jfloat android::webkit::WebView::getScale()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(39),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(39), 
		jfloat
	>(get_jobject());
}

void android::webkit::WebView::setInitialScale(jint a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(40),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(40), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::invokeZoomPicker()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(41),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(41), 
		void
	>(get_jobject());
}

local_ref< android::webkit::WebView_::HitTestResult > android::webkit::WebView::getHitTestResult()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(42),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(42), 
		local_ref< android::webkit::WebView_::HitTestResult >
	>(get_jobject());
}

void android::webkit::WebView::requestFocusNodeHref(local_ref< android::os::Message > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(43),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(43), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::requestImageRef(local_ref< android::os::Message > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(44),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(44), 
		void
	>(get_jobject(), a0);
}







local_ref< java::lang::String > android::webkit::WebView::getUrl()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(51),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(51), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > android::webkit::WebView::getOriginalUrl()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(52),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(52), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > android::webkit::WebView::getTitle()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(53),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(53), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< android::graphics::Bitmap > android::webkit::WebView::getFavicon()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(54),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(54), 
		local_ref< android::graphics::Bitmap >
	>(get_jobject());
}

jint android::webkit::WebView::getProgress()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(55),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(55), 
		jint
	>(get_jobject());
}

jint android::webkit::WebView::getContentHeight()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(56),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(56), 
		jint
	>(get_jobject());
}

void android::webkit::WebView::pauseTimers()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(57),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(57), 
		void
	>(get_jobject());
}

void android::webkit::WebView::resumeTimers()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(58),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(58), 
		void
	>(get_jobject());
}

void android::webkit::WebView::freeMemory()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(59),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(59), 
		void
	>(get_jobject());
}

void android::webkit::WebView::clearCache(jboolean a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(60),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(60), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::clearFormData()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(61),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(61), 
		void
	>(get_jobject());
}

void android::webkit::WebView::clearHistory()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(62),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(62), 
		void
	>(get_jobject());
}

void android::webkit::WebView::clearSslPreferences()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(63),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(63), 
		void
	>(get_jobject());
}

local_ref< android::webkit::WebBackForwardList > android::webkit::WebView::copyBackForwardList()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(64),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(64), 
		local_ref< android::webkit::WebBackForwardList >
	>(get_jobject());
}

void android::webkit::WebView::findNext(jboolean a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(65),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(65), 
		void
	>(get_jobject(), a0);
}

jint android::webkit::WebView::findAll(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(66),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(66), 
		jint
	>(get_jobject(), a0);
}

local_ref< java::lang::String > android::webkit::WebView::findAddress(local_ref< java::lang::String > const &a0)
{
	return call_static_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(67),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(67), 
		local_ref< java::lang::String >
	>(a0);
}

void android::webkit::WebView::clearMatches()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(68),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(68), 
		void
	>(get_jobject());
}

void android::webkit::WebView::documentHasImages(local_ref< android::os::Message > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(69),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(69), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::computeScroll()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(70),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(70), 
		void
	>(get_jobject());
}

void android::webkit::WebView::setWebViewClient(local_ref< android::webkit::WebViewClient > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(71),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(71), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::setDownloadListener(local_ref< android::webkit::DownloadListener > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(72),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(72), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::setWebChromeClient(local_ref< android::webkit::WebChromeClient > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(73),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(73), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::setPictureListener(local_ref< android::webkit::WebView_::PictureListener > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(74),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(74), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::addJavascriptInterface(local_ref< java::lang::Object > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(75),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(75), 
		void
	>(get_jobject(), a0, a1);
}

local_ref< android::webkit::WebSettings > android::webkit::WebView::getSettings()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(76),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(76), 
		local_ref< android::webkit::WebSettings >
	>(get_jobject());
}

local_ref< android::webkit::PluginList > android::webkit::WebView::getPluginList()
{
	return call_static_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(77),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(77), 
		local_ref< android::webkit::PluginList >
	>();
}

void android::webkit::WebView::refreshPlugins(jboolean a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(78),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(78), 
		void
	>(get_jobject(), a0);
}




void android::webkit::WebView::draw(local_ref< android::graphics::Canvas > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(82),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(82), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::setLayoutParams(local_ref< android::view::ViewGroup_::LayoutParams > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(83),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(83), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebView::performLongClick()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(84),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(84), 
		jboolean
	>(get_jobject());
}

local_ref< android::view::inputmethod::InputConnection > android::webkit::WebView::onCreateInputConnection(local_ref< android::view::inputmethod::EditorInfo > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(85),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(85), 
		local_ref< android::view::inputmethod::InputConnection >
	>(get_jobject(), a0);
}

jboolean android::webkit::WebView::onKeyMultiple(jint a0, jint a1, local_ref< android::view::KeyEvent > const &a2)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(86),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(86), 
		jboolean
	>(get_jobject(), a0, a1, a2);
}

jboolean android::webkit::WebView::onKeyDown(jint a0, local_ref< android::view::KeyEvent > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(87),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(87), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::webkit::WebView::onKeyUp(jint a0, local_ref< android::view::KeyEvent > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(88),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(88), 
		jboolean
	>(get_jobject(), a0, a1);
}

void android::webkit::WebView::emulateShiftHeld()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(89),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(89), 
		void
	>(get_jobject());
}



void android::webkit::WebView::onChildViewAdded(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(92),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(92), 
		void
	>(get_jobject(), a0, a1);
}

void android::webkit::WebView::onChildViewRemoved(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(93),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(93), 
		void
	>(get_jobject(), a0, a1);
}

void android::webkit::WebView::onGlobalFocusChanged(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(94),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(94), 
		void
	>(get_jobject(), a0, a1);
}

void android::webkit::WebView::onWindowFocusChanged(jboolean a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(95),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(95), 
		void
	>(get_jobject(), a0);
}




jboolean android::webkit::WebView::dispatchKeyEvent(local_ref< android::view::KeyEvent > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(99),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(99), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::webkit::WebView::onTouchEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(100),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(100), 
		jboolean
	>(get_jobject(), a0);
}

void android::webkit::WebView::setMapTrackballToArrowKeys(jboolean a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(101),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(101), 
		void
	>(get_jobject(), a0);
}

jboolean android::webkit::WebView::onTrackballEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(102),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(102), 
		jboolean
	>(get_jobject(), a0);
}

void android::webkit::WebView::flingScroll(jint a0, jint a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(103),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(103), 
		void
	>(get_jobject(), a0, a1);
}

local_ref< android::view::View > android::webkit::WebView::getZoomControls()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(104),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(104), 
		local_ref< android::view::View >
	>(get_jobject());
}

jboolean android::webkit::WebView::zoomIn()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(105),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(105), 
		jboolean
	>(get_jobject());
}

jboolean android::webkit::WebView::zoomOut()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(106),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(106), 
		jboolean
	>(get_jobject());
}

jboolean android::webkit::WebView::requestFocus(jint a0, local_ref< android::graphics::Rect > const &a1)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(107),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(107), 
		jboolean
	>(get_jobject(), a0, a1);
}


jboolean android::webkit::WebView::requestChildRectangleOnScreen(local_ref< android::view::View > const &a0, local_ref< android::graphics::Rect > const &a1, jboolean a2)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(109),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(109), 
		jboolean
	>(get_jobject(), a0, a1, a2);
}

void android::webkit::WebView::setBackgroundColor(jint a0)
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(110),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(110), 
		void
	>(get_jobject(), a0);
}

void android::webkit::WebView::debugDump()
{
	return call_method<
		android::webkit::WebView::J2CPP_CLASS_NAME,
		android::webkit::WebView::J2CPP_METHOD_NAME(111),
		android::webkit::WebView::J2CPP_METHOD_SIGNATURE(111), 
		void
	>(get_jobject());
}


static_field<
	android::webkit::WebView::J2CPP_CLASS_NAME,
	android::webkit::WebView::J2CPP_FIELD_NAME(0),
	android::webkit::WebView::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::lang::String >
> android::webkit::WebView::SCHEME_TEL;

static_field<
	android::webkit::WebView::J2CPP_CLASS_NAME,
	android::webkit::WebView::J2CPP_FIELD_NAME(1),
	android::webkit::WebView::J2CPP_FIELD_SIGNATURE(1),
	local_ref< java::lang::String >
> android::webkit::WebView::SCHEME_MAILTO;

static_field<
	android::webkit::WebView::J2CPP_CLASS_NAME,
	android::webkit::WebView::J2CPP_FIELD_NAME(2),
	android::webkit::WebView::J2CPP_FIELD_SIGNATURE(2),
	local_ref< java::lang::String >
> android::webkit::WebView::SCHEME_GEO;


J2CPP_DEFINE_CLASS(android::webkit::WebView,"android/webkit/WebView")
J2CPP_DEFINE_METHOD(android::webkit::WebView,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,1,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,2,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,3,"setOverScrollMode","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,4,"setScrollBarStyle","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,5,"setHorizontalScrollbarOverlay","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,6,"setVerticalScrollbarOverlay","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,7,"overlayHorizontalScrollbar","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,8,"overlayVerticalScrollbar","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,9,"getCertificate","()Landroid/net/http/SslCertificate;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,10,"setCertificate","(Landroid/net/http/SslCertificate;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,11,"savePassword","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,12,"setHttpAuthUsernamePassword","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,13,"getHttpAuthUsernamePassword","(Ljava/lang/String;Ljava/lang/String;)[java.lang.String")
J2CPP_DEFINE_METHOD(android::webkit::WebView,14,"destroy","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,15,"enablePlatformNotifications","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,16,"disablePlatformNotifications","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,17,"setNetworkAvailable","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,18,"saveState","(Landroid/os/Bundle;)Landroid/webkit/WebBackForwardList;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,19,"savePicture","(Landroid/os/Bundle;Ljava/io/File;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,20,"restorePicture","(Landroid/os/Bundle;Ljava/io/File;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,21,"restoreState","(Landroid/os/Bundle;)Landroid/webkit/WebBackForwardList;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,22,"loadUrl","(Ljava/lang/String;Ljava/util/Map;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,23,"loadUrl","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,24,"postUrl","(Ljava/lang/String;[B)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,25,"loadData","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,26,"loadDataWithBaseURL","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,27,"stopLoading","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,28,"reload","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,29,"canGoBack","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,30,"goBack","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,31,"canGoForward","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,32,"goForward","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,33,"canGoBackOrForward","(I)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,34,"goBackOrForward","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,35,"pageUp","(Z)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,36,"pageDown","(Z)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,37,"clearView","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,38,"capturePicture","()Landroid/graphics/Picture;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,39,"getScale","()F")
J2CPP_DEFINE_METHOD(android::webkit::WebView,40,"setInitialScale","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,41,"invokeZoomPicker","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,42,"getHitTestResult","()Landroid/webkit/WebView$HitTestResult;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,43,"requestFocusNodeHref","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,44,"requestImageRef","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,45,"computeHorizontalScrollRange","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,46,"computeHorizontalScrollOffset","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,47,"computeVerticalScrollRange","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,48,"computeVerticalScrollOffset","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,49,"computeVerticalScrollExtent","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,50,"onOverScrolled","(IIZZ)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,51,"getUrl","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,52,"getOriginalUrl","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,53,"getTitle","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,54,"getFavicon","()Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,55,"getProgress","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,56,"getContentHeight","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,57,"pauseTimers","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,58,"resumeTimers","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,59,"freeMemory","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,60,"clearCache","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,61,"clearFormData","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,62,"clearHistory","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,63,"clearSslPreferences","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,64,"copyBackForwardList","()Landroid/webkit/WebBackForwardList;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,65,"findNext","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,66,"findAll","(Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,67,"findAddress","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,68,"clearMatches","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,69,"documentHasImages","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,70,"computeScroll","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,71,"setWebViewClient","(Landroid/webkit/WebViewClient;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,72,"setDownloadListener","(Landroid/webkit/DownloadListener;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,73,"setWebChromeClient","(Landroid/webkit/WebChromeClient;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,74,"setPictureListener","(Landroid/webkit/WebView$PictureListener;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,75,"addJavascriptInterface","(Ljava/lang/Object;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,76,"getSettings","()Landroid/webkit/WebSettings;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,77,"getPluginList","()Landroid/webkit/PluginList;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,78,"refreshPlugins","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,79,"finalize","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,80,"drawChild","(Landroid/graphics/Canvas;Landroid/view/View;J)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,81,"onDraw","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,82,"draw","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,83,"setLayoutParams","(Landroid/view/ViewGroup$LayoutParams;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,84,"performLongClick","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,85,"onCreateInputConnection","(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,86,"onKeyMultiple","(IILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,87,"onKeyDown","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,88,"onKeyUp","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,89,"emulateShiftHeld","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,90,"onAttachedToWindow","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,91,"onDetachedFromWindow","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,92,"onChildViewAdded","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,93,"onChildViewRemoved","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,94,"onGlobalFocusChanged","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,95,"onWindowFocusChanged","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,96,"onFocusChanged","(ZILandroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,97,"onSizeChanged","(IIII)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,98,"onScrollChanged","(IIII)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,99,"dispatchKeyEvent","(Landroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,100,"onTouchEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,101,"setMapTrackballToArrowKeys","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,102,"onTrackballEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,103,"flingScroll","(II)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,104,"getZoomControls","()Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,105,"zoomIn","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,106,"zoomOut","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,107,"requestFocus","(ILandroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,108,"onMeasure","(II)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,109,"requestChildRectangleOnScreen","(Landroid/view/View;Landroid/graphics/Rect;Z)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,110,"setBackgroundColor","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,111,"debugDump","()V")
J2CPP_DEFINE_FIELD(android::webkit::WebView,0,"SCHEME_TEL","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::webkit::WebView,1,"SCHEME_MAILTO","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::webkit::WebView,2,"SCHEME_GEO","Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
