/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.os.Handler
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_HANDLER_HPP_DECL
#define J2CPP_ANDROID_OS_HANDLER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Runnable; } } }
namespace j2cpp { namespace android { namespace util { class Printer; } } }
namespace j2cpp { namespace android { namespace os { class Message; } } }
namespace j2cpp { namespace android { namespace os { class Looper; } } }
namespace j2cpp { namespace android { namespace os { namespace Handler_ { class Callback; } } } }


#include <android/os/Handler.hpp>
#include <android/os/Looper.hpp>
#include <android/os/Message.hpp>
#include <android/util/Printer.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/Runnable.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace os {

	class Handler;
	namespace Handler_ {

		class Callback;
		class Callback
			: public object<Callback>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit Callback(jobject jobj)
			: object<Callback>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			jboolean handleMessage(local_ref< android::os::Message >  const&);
		}; //class Callback

	} //namespace Handler_

	class Handler
		: public object<Handler>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)

		typedef Handler_::Callback Callback;

		explicit Handler(jobject jobj)
		: object<Handler>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		Handler();
		Handler(local_ref< android::os::Handler_::Callback > const&);
		Handler(local_ref< android::os::Looper > const&);
		Handler(local_ref< android::os::Looper > const&, local_ref< android::os::Handler_::Callback > const&);
		void handleMessage(local_ref< android::os::Message >  const&);
		void dispatchMessage(local_ref< android::os::Message >  const&);
		local_ref< android::os::Message > obtainMessage();
		local_ref< android::os::Message > obtainMessage(jint);
		local_ref< android::os::Message > obtainMessage(jint, local_ref< java::lang::Object >  const&);
		local_ref< android::os::Message > obtainMessage(jint, jint, jint);
		local_ref< android::os::Message > obtainMessage(jint, jint, jint, local_ref< java::lang::Object >  const&);
		jboolean post(local_ref< java::lang::Runnable >  const&);
		jboolean postAtTime(local_ref< java::lang::Runnable >  const&, jlong);
		jboolean postAtTime(local_ref< java::lang::Runnable >  const&, local_ref< java::lang::Object >  const&, jlong);
		jboolean postDelayed(local_ref< java::lang::Runnable >  const&, jlong);
		jboolean postAtFrontOfQueue(local_ref< java::lang::Runnable >  const&);
		void removeCallbacks(local_ref< java::lang::Runnable >  const&);
		void removeCallbacks(local_ref< java::lang::Runnable >  const&, local_ref< java::lang::Object >  const&);
		jboolean sendMessage(local_ref< android::os::Message >  const&);
		jboolean sendEmptyMessage(jint);
		jboolean sendEmptyMessageDelayed(jint, jlong);
		jboolean sendEmptyMessageAtTime(jint, jlong);
		jboolean sendMessageDelayed(local_ref< android::os::Message >  const&, jlong);
		jboolean sendMessageAtTime(local_ref< android::os::Message >  const&, jlong);
		jboolean sendMessageAtFrontOfQueue(local_ref< android::os::Message >  const&);
		void removeMessages(jint);
		void removeMessages(jint, local_ref< java::lang::Object >  const&);
		void removeCallbacksAndMessages(local_ref< java::lang::Object >  const&);
		jboolean hasMessages(jint);
		jboolean hasMessages(jint, local_ref< java::lang::Object >  const&);
		local_ref< android::os::Looper > getLooper();
		void dump(local_ref< android::util::Printer >  const&, local_ref< java::lang::String >  const&);
		local_ref< java::lang::String > toString();
	}; //class Handler

} //namespace os
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_HANDLER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_HANDLER_HPP_IMPL
#define J2CPP_ANDROID_OS_HANDLER_HPP_IMPL

namespace j2cpp {




android::os::Handler_::Callback::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

jboolean android::os::Handler_::Callback::handleMessage(local_ref< android::os::Message > const &a0)
{
	return call_method<
		android::os::Handler_::Callback::J2CPP_CLASS_NAME,
		android::os::Handler_::Callback::J2CPP_METHOD_NAME(0),
		android::os::Handler_::Callback::J2CPP_METHOD_SIGNATURE(0), 
		jboolean
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(android::os::Handler_::Callback,"android/os/Handler$Callback")
J2CPP_DEFINE_METHOD(android::os::Handler_::Callback,0,"handleMessage","(Landroid/os/Message;)Z")



android::os::Handler::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::os::Handler::Handler()
: object<android::os::Handler>(
	call_new_object<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(0),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



android::os::Handler::Handler(local_ref< android::os::Handler_::Callback > const &a0)
: object<android::os::Handler>(
	call_new_object<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(1),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



android::os::Handler::Handler(local_ref< android::os::Looper > const &a0)
: object<android::os::Handler>(
	call_new_object<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(2),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(2)
	>(a0)
)
{
}



android::os::Handler::Handler(local_ref< android::os::Looper > const &a0, local_ref< android::os::Handler_::Callback > const &a1)
: object<android::os::Handler>(
	call_new_object<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(3),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(3)
	>(a0, a1)
)
{
}


void android::os::Handler::handleMessage(local_ref< android::os::Message > const &a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(4),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

void android::os::Handler::dispatchMessage(local_ref< android::os::Message > const &a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(5),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

local_ref< android::os::Message > android::os::Handler::obtainMessage()
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(6),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< android::os::Message >
	>(get_jobject());
}

local_ref< android::os::Message > android::os::Handler::obtainMessage(jint a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(7),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< android::os::Message >
	>(get_jobject(), a0);
}

local_ref< android::os::Message > android::os::Handler::obtainMessage(jint a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(8),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< android::os::Message >
	>(get_jobject(), a0, a1);
}

local_ref< android::os::Message > android::os::Handler::obtainMessage(jint a0, jint a1, jint a2)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(9),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< android::os::Message >
	>(get_jobject(), a0, a1, a2);
}

local_ref< android::os::Message > android::os::Handler::obtainMessage(jint a0, jint a1, jint a2, local_ref< java::lang::Object > const &a3)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(10),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< android::os::Message >
	>(get_jobject(), a0, a1, a2, a3);
}

jboolean android::os::Handler::post(local_ref< java::lang::Runnable > const &a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(11),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(11), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::os::Handler::postAtTime(local_ref< java::lang::Runnable > const &a0, jlong a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(12),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(12), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::os::Handler::postAtTime(local_ref< java::lang::Runnable > const &a0, local_ref< java::lang::Object > const &a1, jlong a2)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(13),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(get_jobject(), a0, a1, a2);
}

jboolean android::os::Handler::postDelayed(local_ref< java::lang::Runnable > const &a0, jlong a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(14),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(14), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::os::Handler::postAtFrontOfQueue(local_ref< java::lang::Runnable > const &a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(15),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(15), 
		jboolean
	>(get_jobject(), a0);
}

void android::os::Handler::removeCallbacks(local_ref< java::lang::Runnable > const &a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(16),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(16), 
		void
	>(get_jobject(), a0);
}

void android::os::Handler::removeCallbacks(local_ref< java::lang::Runnable > const &a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(17),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(17), 
		void
	>(get_jobject(), a0, a1);
}

jboolean android::os::Handler::sendMessage(local_ref< android::os::Message > const &a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(18),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(18), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::os::Handler::sendEmptyMessage(jint a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(19),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(19), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::os::Handler::sendEmptyMessageDelayed(jint a0, jlong a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(20),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(20), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::os::Handler::sendEmptyMessageAtTime(jint a0, jlong a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(21),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(21), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::os::Handler::sendMessageDelayed(local_ref< android::os::Message > const &a0, jlong a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(22),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(22), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::os::Handler::sendMessageAtTime(local_ref< android::os::Message > const &a0, jlong a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(23),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(23), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::os::Handler::sendMessageAtFrontOfQueue(local_ref< android::os::Message > const &a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(24),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(24), 
		jboolean
	>(get_jobject(), a0);
}

void android::os::Handler::removeMessages(jint a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(25),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(25), 
		void
	>(get_jobject(), a0);
}

void android::os::Handler::removeMessages(jint a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(26),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(26), 
		void
	>(get_jobject(), a0, a1);
}

void android::os::Handler::removeCallbacksAndMessages(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(27),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(27), 
		void
	>(get_jobject(), a0);
}

jboolean android::os::Handler::hasMessages(jint a0)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(28),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(28), 
		jboolean
	>(get_jobject(), a0);
}

jboolean android::os::Handler::hasMessages(jint a0, local_ref< java::lang::Object > const &a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(29),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(29), 
		jboolean
	>(get_jobject(), a0, a1);
}

local_ref< android::os::Looper > android::os::Handler::getLooper()
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(30),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(30), 
		local_ref< android::os::Looper >
	>(get_jobject());
}

void android::os::Handler::dump(local_ref< android::util::Printer > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(31),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(31), 
		void
	>(get_jobject(), a0, a1);
}

local_ref< java::lang::String > android::os::Handler::toString()
{
	return call_method<
		android::os::Handler::J2CPP_CLASS_NAME,
		android::os::Handler::J2CPP_METHOD_NAME(32),
		android::os::Handler::J2CPP_METHOD_SIGNATURE(32), 
		local_ref< java::lang::String >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(android::os::Handler,"android/os/Handler")
J2CPP_DEFINE_METHOD(android::os::Handler,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::Handler,1,"<init>","(Landroid/os/Handler$Callback;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,2,"<init>","(Landroid/os/Looper;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,3,"<init>","(Landroid/os/Looper;Landroid/os/Handler$Callback;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,4,"handleMessage","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,5,"dispatchMessage","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,6,"obtainMessage","()Landroid/os/Message;")
J2CPP_DEFINE_METHOD(android::os::Handler,7,"obtainMessage","(I)Landroid/os/Message;")
J2CPP_DEFINE_METHOD(android::os::Handler,8,"obtainMessage","(ILjava/lang/Object;)Landroid/os/Message;")
J2CPP_DEFINE_METHOD(android::os::Handler,9,"obtainMessage","(III)Landroid/os/Message;")
J2CPP_DEFINE_METHOD(android::os::Handler,10,"obtainMessage","(IIILjava/lang/Object;)Landroid/os/Message;")
J2CPP_DEFINE_METHOD(android::os::Handler,11,"post","(Ljava/lang/Runnable;)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,12,"postAtTime","(Ljava/lang/Runnable;J)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,13,"postAtTime","(Ljava/lang/Runnable;Ljava/lang/Object;J)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,14,"postDelayed","(Ljava/lang/Runnable;J)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,15,"postAtFrontOfQueue","(Ljava/lang/Runnable;)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,16,"removeCallbacks","(Ljava/lang/Runnable;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,17,"removeCallbacks","(Ljava/lang/Runnable;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,18,"sendMessage","(Landroid/os/Message;)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,19,"sendEmptyMessage","(I)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,20,"sendEmptyMessageDelayed","(IJ)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,21,"sendEmptyMessageAtTime","(IJ)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,22,"sendMessageDelayed","(Landroid/os/Message;J)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,23,"sendMessageAtTime","(Landroid/os/Message;J)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,24,"sendMessageAtFrontOfQueue","(Landroid/os/Message;)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,25,"removeMessages","(I)V")
J2CPP_DEFINE_METHOD(android::os::Handler,26,"removeMessages","(ILjava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,27,"removeCallbacksAndMessages","(Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,28,"hasMessages","(I)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,29,"hasMessages","(ILjava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,30,"getLooper","()Landroid/os/Looper;")
J2CPP_DEFINE_METHOD(android::os::Handler,31,"dump","(Landroid/util/Printer;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,32,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_HANDLER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
