/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.os.SystemClock
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_SYSTEMCLOCK_HPP_DECL
#define J2CPP_ANDROID_OS_SYSTEMCLOCK_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace os {

	class SystemClock;
	class SystemClock
		: public object<SystemClock>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		explicit SystemClock(jobject jobj)
		: object<SystemClock>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static void sleep(jlong);
		static jboolean setCurrentTimeMillis(jlong);
		static jlong uptimeMillis();
		static jlong elapsedRealtime();
		static jlong currentThreadTimeMillis();
	}; //class SystemClock

} //namespace os
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_SYSTEMCLOCK_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_SYSTEMCLOCK_HPP_IMPL
#define J2CPP_ANDROID_OS_SYSTEMCLOCK_HPP_IMPL

namespace j2cpp {



android::os::SystemClock::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


void android::os::SystemClock::sleep(jlong a0)
{
	return call_static_method<
		android::os::SystemClock::J2CPP_CLASS_NAME,
		android::os::SystemClock::J2CPP_METHOD_NAME(1),
		android::os::SystemClock::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(a0);
}

jboolean android::os::SystemClock::setCurrentTimeMillis(jlong a0)
{
	return call_static_method<
		android::os::SystemClock::J2CPP_CLASS_NAME,
		android::os::SystemClock::J2CPP_METHOD_NAME(2),
		android::os::SystemClock::J2CPP_METHOD_SIGNATURE(2), 
		jboolean
	>(a0);
}

jlong android::os::SystemClock::uptimeMillis()
{
	return call_static_method<
		android::os::SystemClock::J2CPP_CLASS_NAME,
		android::os::SystemClock::J2CPP_METHOD_NAME(3),
		android::os::SystemClock::J2CPP_METHOD_SIGNATURE(3), 
		jlong
	>();
}

jlong android::os::SystemClock::elapsedRealtime()
{
	return call_static_method<
		android::os::SystemClock::J2CPP_CLASS_NAME,
		android::os::SystemClock::J2CPP_METHOD_NAME(4),
		android::os::SystemClock::J2CPP_METHOD_SIGNATURE(4), 
		jlong
	>();
}

jlong android::os::SystemClock::currentThreadTimeMillis()
{
	return call_static_method<
		android::os::SystemClock::J2CPP_CLASS_NAME,
		android::os::SystemClock::J2CPP_METHOD_NAME(5),
		android::os::SystemClock::J2CPP_METHOD_SIGNATURE(5), 
		jlong
	>();
}


J2CPP_DEFINE_CLASS(android::os::SystemClock,"android/os/SystemClock")
J2CPP_DEFINE_METHOD(android::os::SystemClock,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::SystemClock,1,"sleep","(J)V")
J2CPP_DEFINE_METHOD(android::os::SystemClock,2,"setCurrentTimeMillis","(J)Z")
J2CPP_DEFINE_METHOD(android::os::SystemClock,3,"uptimeMillis","()J")
J2CPP_DEFINE_METHOD(android::os::SystemClock,4,"elapsedRealtime","()J")
J2CPP_DEFINE_METHOD(android::os::SystemClock,5,"currentThreadTimeMillis","()J")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_SYSTEMCLOCK_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
