/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.graphics.PointF
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_POINTF_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_POINTF_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace graphics { class Point; } } }


#include <android/graphics/Point.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace graphics {

	class PointF;
	class PointF
		: public object<PointF>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)

		explicit PointF(jobject jobj)
		: object<PointF>(jobj)
		, x(jobj)
		, y(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		PointF();
		PointF(jfloat, jfloat);
		PointF(local_ref< android::graphics::Point > const&);
		void set(jfloat, jfloat);
		void set(local_ref< android::graphics::PointF >  const&);
		void negate();
		void offset(jfloat, jfloat);
		jboolean equals(jfloat, jfloat);
		jfloat length();
		static jfloat length(jfloat, jfloat);

		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jfloat > x;
		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jfloat > y;
	}; //class PointF

} //namespace graphics
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_POINTF_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_POINTF_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_POINTF_HPP_IMPL

namespace j2cpp {



android::graphics::PointF::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::graphics::PointF::PointF()
: object<android::graphics::PointF>(
	call_new_object<
		android::graphics::PointF::J2CPP_CLASS_NAME,
		android::graphics::PointF::J2CPP_METHOD_NAME(0),
		android::graphics::PointF::J2CPP_METHOD_SIGNATURE(0)
	>()
)
, x(get_jobject())
, y(get_jobject())
{
}



android::graphics::PointF::PointF(jfloat a0, jfloat a1)
: object<android::graphics::PointF>(
	call_new_object<
		android::graphics::PointF::J2CPP_CLASS_NAME,
		android::graphics::PointF::J2CPP_METHOD_NAME(1),
		android::graphics::PointF::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1)
)
, x(get_jobject())
, y(get_jobject())
{
}



android::graphics::PointF::PointF(local_ref< android::graphics::Point > const &a0)
: object<android::graphics::PointF>(
	call_new_object<
		android::graphics::PointF::J2CPP_CLASS_NAME,
		android::graphics::PointF::J2CPP_METHOD_NAME(2),
		android::graphics::PointF::J2CPP_METHOD_SIGNATURE(2)
	>(a0)
)
, x(get_jobject())
, y(get_jobject())
{
}


void android::graphics::PointF::set(jfloat a0, jfloat a1)
{
	return call_method<
		android::graphics::PointF::J2CPP_CLASS_NAME,
		android::graphics::PointF::J2CPP_METHOD_NAME(3),
		android::graphics::PointF::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0, a1);
}

void android::graphics::PointF::set(local_ref< android::graphics::PointF > const &a0)
{
	return call_method<
		android::graphics::PointF::J2CPP_CLASS_NAME,
		android::graphics::PointF::J2CPP_METHOD_NAME(4),
		android::graphics::PointF::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

void android::graphics::PointF::negate()
{
	return call_method<
		android::graphics::PointF::J2CPP_CLASS_NAME,
		android::graphics::PointF::J2CPP_METHOD_NAME(5),
		android::graphics::PointF::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject());
}

void android::graphics::PointF::offset(jfloat a0, jfloat a1)
{
	return call_method<
		android::graphics::PointF::J2CPP_CLASS_NAME,
		android::graphics::PointF::J2CPP_METHOD_NAME(6),
		android::graphics::PointF::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0, a1);
}

jboolean android::graphics::PointF::equals(jfloat a0, jfloat a1)
{
	return call_method<
		android::graphics::PointF::J2CPP_CLASS_NAME,
		android::graphics::PointF::J2CPP_METHOD_NAME(7),
		android::graphics::PointF::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject(), a0, a1);
}

jfloat android::graphics::PointF::length()
{
	return call_method<
		android::graphics::PointF::J2CPP_CLASS_NAME,
		android::graphics::PointF::J2CPP_METHOD_NAME(8),
		android::graphics::PointF::J2CPP_METHOD_SIGNATURE(8), 
		jfloat
	>(get_jobject());
}

jfloat android::graphics::PointF::length(jfloat a0, jfloat a1)
{
	return call_static_method<
		android::graphics::PointF::J2CPP_CLASS_NAME,
		android::graphics::PointF::J2CPP_METHOD_NAME(9),
		android::graphics::PointF::J2CPP_METHOD_SIGNATURE(9), 
		jfloat
	>(a0, a1);
}



J2CPP_DEFINE_CLASS(android::graphics::PointF,"android/graphics/PointF")
J2CPP_DEFINE_METHOD(android::graphics::PointF,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::PointF,1,"<init>","(FF)V")
J2CPP_DEFINE_METHOD(android::graphics::PointF,2,"<init>","(Landroid/graphics/Point;)V")
J2CPP_DEFINE_METHOD(android::graphics::PointF,3,"set","(FF)V")
J2CPP_DEFINE_METHOD(android::graphics::PointF,4,"set","(Landroid/graphics/PointF;)V")
J2CPP_DEFINE_METHOD(android::graphics::PointF,5,"negate","()V")
J2CPP_DEFINE_METHOD(android::graphics::PointF,6,"offset","(FF)V")
J2CPP_DEFINE_METHOD(android::graphics::PointF,7,"equals","(FF)Z")
J2CPP_DEFINE_METHOD(android::graphics::PointF,8,"length","()F")
J2CPP_DEFINE_METHOD(android::graphics::PointF,9,"length","(FF)F")
J2CPP_DEFINE_FIELD(android::graphics::PointF,0,"x","F")
J2CPP_DEFINE_FIELD(android::graphics::PointF,1,"y","F")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_POINTF_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
