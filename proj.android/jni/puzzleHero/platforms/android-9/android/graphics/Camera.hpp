/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.graphics.Camera
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace graphics { class Canvas; } } }
namespace j2cpp { namespace android { namespace graphics { class Matrix; } } }


#include <android/graphics/Canvas.hpp>
#include <android/graphics/Matrix.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace graphics {

	class Camera;
	class Camera
		: public object<Camera>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)

		explicit Camera(jobject jobj)
		: object<Camera>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		Camera();
		void save();
		void restore();
		void translate(jfloat, jfloat, jfloat);
		void rotateX(jfloat);
		void rotateY(jfloat);
		void rotateZ(jfloat);
		void getMatrix(local_ref< android::graphics::Matrix >  const&);
		void applyToCanvas(local_ref< android::graphics::Canvas >  const&);
		jfloat dotWithNormal(jfloat, jfloat, jfloat);
	}; //class Camera

} //namespace graphics
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_IMPL

namespace j2cpp {



android::graphics::Camera::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::graphics::Camera::Camera()
: object<android::graphics::Camera>(
	call_new_object<
		android::graphics::Camera::J2CPP_CLASS_NAME,
		android::graphics::Camera::J2CPP_METHOD_NAME(0),
		android::graphics::Camera::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


void android::graphics::Camera::save()
{
	return call_method<
		android::graphics::Camera::J2CPP_CLASS_NAME,
		android::graphics::Camera::J2CPP_METHOD_NAME(1),
		android::graphics::Camera::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject());
}

void android::graphics::Camera::restore()
{
	return call_method<
		android::graphics::Camera::J2CPP_CLASS_NAME,
		android::graphics::Camera::J2CPP_METHOD_NAME(2),
		android::graphics::Camera::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject());
}

void android::graphics::Camera::translate(jfloat a0, jfloat a1, jfloat a2)
{
	return call_method<
		android::graphics::Camera::J2CPP_CLASS_NAME,
		android::graphics::Camera::J2CPP_METHOD_NAME(3),
		android::graphics::Camera::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0, a1, a2);
}

void android::graphics::Camera::rotateX(jfloat a0)
{
	return call_method<
		android::graphics::Camera::J2CPP_CLASS_NAME,
		android::graphics::Camera::J2CPP_METHOD_NAME(4),
		android::graphics::Camera::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

void android::graphics::Camera::rotateY(jfloat a0)
{
	return call_method<
		android::graphics::Camera::J2CPP_CLASS_NAME,
		android::graphics::Camera::J2CPP_METHOD_NAME(5),
		android::graphics::Camera::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

void android::graphics::Camera::rotateZ(jfloat a0)
{
	return call_method<
		android::graphics::Camera::J2CPP_CLASS_NAME,
		android::graphics::Camera::J2CPP_METHOD_NAME(6),
		android::graphics::Camera::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0);
}

void android::graphics::Camera::getMatrix(local_ref< android::graphics::Matrix > const &a0)
{
	return call_method<
		android::graphics::Camera::J2CPP_CLASS_NAME,
		android::graphics::Camera::J2CPP_METHOD_NAME(7),
		android::graphics::Camera::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0);
}

void android::graphics::Camera::applyToCanvas(local_ref< android::graphics::Canvas > const &a0)
{
	return call_method<
		android::graphics::Camera::J2CPP_CLASS_NAME,
		android::graphics::Camera::J2CPP_METHOD_NAME(8),
		android::graphics::Camera::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0);
}

jfloat android::graphics::Camera::dotWithNormal(jfloat a0, jfloat a1, jfloat a2)
{
	return call_method<
		android::graphics::Camera::J2CPP_CLASS_NAME,
		android::graphics::Camera::J2CPP_METHOD_NAME(9),
		android::graphics::Camera::J2CPP_METHOD_SIGNATURE(9), 
		jfloat
	>(get_jobject(), a0, a1, a2);
}



J2CPP_DEFINE_CLASS(android::graphics::Camera,"android/graphics/Camera")
J2CPP_DEFINE_METHOD(android::graphics::Camera,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,1,"save","()V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,2,"restore","()V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,3,"translate","(FFF)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,4,"rotateX","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,5,"rotateY","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,6,"rotateZ","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,7,"getMatrix","(Landroid/graphics/Matrix;)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,8,"applyToCanvas","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,9,"dotWithNormal","(FFF)F")
J2CPP_DEFINE_METHOD(android::graphics::Camera,10,"finalize","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
