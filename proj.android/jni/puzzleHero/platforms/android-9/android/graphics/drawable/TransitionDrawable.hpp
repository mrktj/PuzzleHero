/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.graphics.drawable.TransitionDrawable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace graphics { class Canvas; } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { class LayerDrawable; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { class Drawable; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { namespace Drawable_ { class Callback; } } } } }


#include <android/graphics/Canvas.hpp>
#include <android/graphics/drawable/Drawable.hpp>
#include <android/graphics/drawable/LayerDrawable.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace graphics { namespace drawable {

	class TransitionDrawable;
	class TransitionDrawable
		: public object<TransitionDrawable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		explicit TransitionDrawable(jobject jobj)
		: object<TransitionDrawable>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::graphics::drawable::LayerDrawable>() const;
		operator local_ref<android::graphics::drawable::Drawable>() const;
		operator local_ref<android::graphics::drawable::Drawable_::Callback>() const;


		TransitionDrawable(local_ref< array< local_ref< android::graphics::drawable::Drawable >, 1> > const&);
		void startTransition(jint);
		void resetTransition();
		void reverseTransition(jint);
		void draw(local_ref< android::graphics::Canvas >  const&);
		void setCrossFadeEnabled(jboolean);
		jboolean isCrossFadeEnabled();
	}; //class TransitionDrawable

} //namespace drawable
} //namespace graphics
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE_HPP_IMPL

namespace j2cpp {



android::graphics::drawable::TransitionDrawable::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::graphics::drawable::TransitionDrawable::operator local_ref<android::graphics::drawable::LayerDrawable>() const
{
	return local_ref<android::graphics::drawable::LayerDrawable>(get_jobject());
}

android::graphics::drawable::TransitionDrawable::operator local_ref<android::graphics::drawable::Drawable>() const
{
	return local_ref<android::graphics::drawable::Drawable>(get_jobject());
}

android::graphics::drawable::TransitionDrawable::operator local_ref<android::graphics::drawable::Drawable_::Callback>() const
{
	return local_ref<android::graphics::drawable::Drawable_::Callback>(get_jobject());
}


android::graphics::drawable::TransitionDrawable::TransitionDrawable(local_ref< array< local_ref< android::graphics::drawable::Drawable >, 1> > const &a0)
: object<android::graphics::drawable::TransitionDrawable>(
	call_new_object<
		android::graphics::drawable::TransitionDrawable::J2CPP_CLASS_NAME,
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_NAME(0),
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


void android::graphics::drawable::TransitionDrawable::startTransition(jint a0)
{
	return call_method<
		android::graphics::drawable::TransitionDrawable::J2CPP_CLASS_NAME,
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_NAME(1),
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0);
}

void android::graphics::drawable::TransitionDrawable::resetTransition()
{
	return call_method<
		android::graphics::drawable::TransitionDrawable::J2CPP_CLASS_NAME,
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_NAME(2),
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject());
}

void android::graphics::drawable::TransitionDrawable::reverseTransition(jint a0)
{
	return call_method<
		android::graphics::drawable::TransitionDrawable::J2CPP_CLASS_NAME,
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_NAME(3),
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

void android::graphics::drawable::TransitionDrawable::draw(local_ref< android::graphics::Canvas > const &a0)
{
	return call_method<
		android::graphics::drawable::TransitionDrawable::J2CPP_CLASS_NAME,
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_NAME(4),
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0);
}

void android::graphics::drawable::TransitionDrawable::setCrossFadeEnabled(jboolean a0)
{
	return call_method<
		android::graphics::drawable::TransitionDrawable::J2CPP_CLASS_NAME,
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_NAME(5),
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

jboolean android::graphics::drawable::TransitionDrawable::isCrossFadeEnabled()
{
	return call_method<
		android::graphics::drawable::TransitionDrawable::J2CPP_CLASS_NAME,
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_NAME(6),
		android::graphics::drawable::TransitionDrawable::J2CPP_METHOD_SIGNATURE(6), 
		jboolean
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(android::graphics::drawable::TransitionDrawable,"android/graphics/drawable/TransitionDrawable")
J2CPP_DEFINE_METHOD(android::graphics::drawable::TransitionDrawable,0,"<init>","([android.graphics.drawable.Drawable)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::TransitionDrawable,1,"startTransition","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::TransitionDrawable,2,"resetTransition","()V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::TransitionDrawable,3,"reverseTransition","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::TransitionDrawable,4,"draw","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::TransitionDrawable,5,"setCrossFadeEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::TransitionDrawable,6,"isCrossFadeEnabled","()Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
