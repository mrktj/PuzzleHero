/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.graphics.Point
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_POINT_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_POINT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace graphics {

	class Point;
	class Point
		: public object<Point>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)

		explicit Point(jobject jobj)
		: object<Point>(jobj)
		, x(jobj)
		, y(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		Point();
		Point(jint, jint);
		Point(local_ref< android::graphics::Point > const&);
		void set(jint, jint);
		void negate();
		void offset(jint, jint);
		jboolean equals(jint, jint);
		jboolean equals(local_ref< java::lang::Object >  const&);
		jint hashCode();
		local_ref< java::lang::String > toString();

		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > x;
		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > y;
	}; //class Point

} //namespace graphics
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_POINT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_POINT_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_POINT_HPP_IMPL

namespace j2cpp {



android::graphics::Point::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::graphics::Point::Point()
: object<android::graphics::Point>(
	call_new_object<
		android::graphics::Point::J2CPP_CLASS_NAME,
		android::graphics::Point::J2CPP_METHOD_NAME(0),
		android::graphics::Point::J2CPP_METHOD_SIGNATURE(0)
	>()
)
, x(get_jobject())
, y(get_jobject())
{
}



android::graphics::Point::Point(jint a0, jint a1)
: object<android::graphics::Point>(
	call_new_object<
		android::graphics::Point::J2CPP_CLASS_NAME,
		android::graphics::Point::J2CPP_METHOD_NAME(1),
		android::graphics::Point::J2CPP_METHOD_SIGNATURE(1)
	>(a0, a1)
)
, x(get_jobject())
, y(get_jobject())
{
}



android::graphics::Point::Point(local_ref< android::graphics::Point > const &a0)
: object<android::graphics::Point>(
	call_new_object<
		android::graphics::Point::J2CPP_CLASS_NAME,
		android::graphics::Point::J2CPP_METHOD_NAME(2),
		android::graphics::Point::J2CPP_METHOD_SIGNATURE(2)
	>(a0)
)
, x(get_jobject())
, y(get_jobject())
{
}


void android::graphics::Point::set(jint a0, jint a1)
{
	return call_method<
		android::graphics::Point::J2CPP_CLASS_NAME,
		android::graphics::Point::J2CPP_METHOD_NAME(3),
		android::graphics::Point::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0, a1);
}

void android::graphics::Point::negate()
{
	return call_method<
		android::graphics::Point::J2CPP_CLASS_NAME,
		android::graphics::Point::J2CPP_METHOD_NAME(4),
		android::graphics::Point::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject());
}

void android::graphics::Point::offset(jint a0, jint a1)
{
	return call_method<
		android::graphics::Point::J2CPP_CLASS_NAME,
		android::graphics::Point::J2CPP_METHOD_NAME(5),
		android::graphics::Point::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0, a1);
}

jboolean android::graphics::Point::equals(jint a0, jint a1)
{
	return call_method<
		android::graphics::Point::J2CPP_CLASS_NAME,
		android::graphics::Point::J2CPP_METHOD_NAME(6),
		android::graphics::Point::J2CPP_METHOD_SIGNATURE(6), 
		jboolean
	>(get_jobject(), a0, a1);
}

jboolean android::graphics::Point::equals(local_ref< java::lang::Object > const &a0)
{
	return call_method<
		android::graphics::Point::J2CPP_CLASS_NAME,
		android::graphics::Point::J2CPP_METHOD_NAME(7),
		android::graphics::Point::J2CPP_METHOD_SIGNATURE(7), 
		jboolean
	>(get_jobject(), a0);
}

jint android::graphics::Point::hashCode()
{
	return call_method<
		android::graphics::Point::J2CPP_CLASS_NAME,
		android::graphics::Point::J2CPP_METHOD_NAME(8),
		android::graphics::Point::J2CPP_METHOD_SIGNATURE(8), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > android::graphics::Point::toString()
{
	return call_method<
		android::graphics::Point::J2CPP_CLASS_NAME,
		android::graphics::Point::J2CPP_METHOD_NAME(9),
		android::graphics::Point::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::lang::String >
	>(get_jobject());
}



J2CPP_DEFINE_CLASS(android::graphics::Point,"android/graphics/Point")
J2CPP_DEFINE_METHOD(android::graphics::Point,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::Point,1,"<init>","(II)V")
J2CPP_DEFINE_METHOD(android::graphics::Point,2,"<init>","(Landroid/graphics/Point;)V")
J2CPP_DEFINE_METHOD(android::graphics::Point,3,"set","(II)V")
J2CPP_DEFINE_METHOD(android::graphics::Point,4,"negate","()V")
J2CPP_DEFINE_METHOD(android::graphics::Point,5,"offset","(II)V")
J2CPP_DEFINE_METHOD(android::graphics::Point,6,"equals","(II)Z")
J2CPP_DEFINE_METHOD(android::graphics::Point,7,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Point,8,"hashCode","()I")
J2CPP_DEFINE_METHOD(android::graphics::Point,9,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::graphics::Point,0,"x","I")
J2CPP_DEFINE_FIELD(android::graphics::Point,1,"y","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_POINT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
