/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.net.sip.SipSession
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_SIP_SIPSESSION_HPP_DECL
#define J2CPP_ANDROID_NET_SIP_SIPSESSION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace net { namespace sip { namespace SipSession_ { class Listener; } } } } }
namespace j2cpp { namespace android { namespace net { namespace sip { class SipProfile; } } } }


#include <android/net/sip/SipProfile.hpp>
#include <android/net/sip/SipSession.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace net { namespace sip {

	class SipSession;
	namespace SipSession_ {

		class Listener;
		class Listener
			: public object<Listener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)
			J2CPP_DECLARE_METHOD(6)
			J2CPP_DECLARE_METHOD(7)
			J2CPP_DECLARE_METHOD(8)
			J2CPP_DECLARE_METHOD(9)
			J2CPP_DECLARE_METHOD(10)
			J2CPP_DECLARE_METHOD(11)
			J2CPP_DECLARE_METHOD(12)

			explicit Listener(jobject jobj)
			: object<Listener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			Listener();
			void onCalling(local_ref< android::net::sip::SipSession >  const&);
			void onRinging(local_ref< android::net::sip::SipSession >  const&, local_ref< android::net::sip::SipProfile >  const&, local_ref< java::lang::String >  const&);
			void onRingingBack(local_ref< android::net::sip::SipSession >  const&);
			void onCallEstablished(local_ref< android::net::sip::SipSession >  const&, local_ref< java::lang::String >  const&);
			void onCallEnded(local_ref< android::net::sip::SipSession >  const&);
			void onCallBusy(local_ref< android::net::sip::SipSession >  const&);
			void onError(local_ref< android::net::sip::SipSession >  const&, jint, local_ref< java::lang::String >  const&);
			void onCallChangeFailed(local_ref< android::net::sip::SipSession >  const&, jint, local_ref< java::lang::String >  const&);
			void onRegistering(local_ref< android::net::sip::SipSession >  const&);
			void onRegistrationDone(local_ref< android::net::sip::SipSession >  const&, jint);
			void onRegistrationFailed(local_ref< android::net::sip::SipSession >  const&, jint, local_ref< java::lang::String >  const&);
			void onRegistrationTimeout(local_ref< android::net::sip::SipSession >  const&);
		}; //class Listener

		class State;
		class State
			: public object<State>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)
			J2CPP_DECLARE_FIELD(5)
			J2CPP_DECLARE_FIELD(6)
			J2CPP_DECLARE_FIELD(7)
			J2CPP_DECLARE_FIELD(8)
			J2CPP_DECLARE_FIELD(9)
			J2CPP_DECLARE_FIELD(10)

			explicit State(jobject jobj)
			: object<State>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			static local_ref< java::lang::String > toString(jint);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > READY_TO_CALL;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > REGISTERING;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > DEREGISTERING;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > INCOMING_CALL;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > INCOMING_CALL_ANSWERING;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jint > OUTGOING_CALL;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), jint > OUTGOING_CALL_RING_BACK;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), jint > OUTGOING_CALL_CANCELING;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), jint > IN_CALL;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(9), J2CPP_FIELD_SIGNATURE(9), jint > PINGING;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(10), J2CPP_FIELD_SIGNATURE(10), jint > NOT_DEFINED;
		}; //class State

	} //namespace SipSession_

	class SipSession
		: public object<SipSession>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)

		typedef SipSession_::Listener Listener;
		typedef SipSession_::State State;

		explicit SipSession(jobject jobj)
		: object<SipSession>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		local_ref< java::lang::String > getLocalIp();
		local_ref< android::net::sip::SipProfile > getLocalProfile();
		local_ref< android::net::sip::SipProfile > getPeerProfile();
		jint getState();
		jboolean isInCall();
		local_ref< java::lang::String > getCallId();
		void setListener(local_ref< android::net::sip::SipSession_::Listener >  const&);
		void register_(jint);
		void unregister();
		void makeCall(local_ref< android::net::sip::SipProfile >  const&, local_ref< java::lang::String >  const&, jint);
		void answerCall(local_ref< java::lang::String >  const&, jint);
		void endCall();
		void changeCall(local_ref< java::lang::String >  const&, jint);
	}; //class SipSession

} //namespace sip
} //namespace net
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_SIP_SIPSESSION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_SIP_SIPSESSION_HPP_IMPL
#define J2CPP_ANDROID_NET_SIP_SIPSESSION_HPP_IMPL

namespace j2cpp {




android::net::sip::SipSession_::Listener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::net::sip::SipSession_::Listener::Listener()
: object<android::net::sip::SipSession_::Listener>(
	call_new_object<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(0),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


void android::net::sip::SipSession_::Listener::onCalling(local_ref< android::net::sip::SipSession > const &a0)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(1),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0);
}

void android::net::sip::SipSession_::Listener::onRinging(local_ref< android::net::sip::SipSession > const &a0, local_ref< android::net::sip::SipProfile > const &a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(2),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(2), 
		void
	>(get_jobject(), a0, a1, a2);
}

void android::net::sip::SipSession_::Listener::onRingingBack(local_ref< android::net::sip::SipSession > const &a0)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(3),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(get_jobject(), a0);
}

void android::net::sip::SipSession_::Listener::onCallEstablished(local_ref< android::net::sip::SipSession > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(4),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(4), 
		void
	>(get_jobject(), a0, a1);
}

void android::net::sip::SipSession_::Listener::onCallEnded(local_ref< android::net::sip::SipSession > const &a0)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(5),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(5), 
		void
	>(get_jobject(), a0);
}

void android::net::sip::SipSession_::Listener::onCallBusy(local_ref< android::net::sip::SipSession > const &a0)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(6),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(6), 
		void
	>(get_jobject(), a0);
}

void android::net::sip::SipSession_::Listener::onError(local_ref< android::net::sip::SipSession > const &a0, jint a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(7),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0, a1, a2);
}

void android::net::sip::SipSession_::Listener::onCallChangeFailed(local_ref< android::net::sip::SipSession > const &a0, jint a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(8),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0, a1, a2);
}

void android::net::sip::SipSession_::Listener::onRegistering(local_ref< android::net::sip::SipSession > const &a0)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(9),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject(), a0);
}

void android::net::sip::SipSession_::Listener::onRegistrationDone(local_ref< android::net::sip::SipSession > const &a0, jint a1)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(10),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(get_jobject(), a0, a1);
}

void android::net::sip::SipSession_::Listener::onRegistrationFailed(local_ref< android::net::sip::SipSession > const &a0, jint a1, local_ref< java::lang::String > const &a2)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(11),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0, a1, a2);
}

void android::net::sip::SipSession_::Listener::onRegistrationTimeout(local_ref< android::net::sip::SipSession > const &a0)
{
	return call_method<
		android::net::sip::SipSession_::Listener::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_NAME(12),
		android::net::sip::SipSession_::Listener::J2CPP_METHOD_SIGNATURE(12), 
		void
	>(get_jobject(), a0);
}


J2CPP_DEFINE_CLASS(android::net::sip::SipSession_::Listener,"android/net/sip/SipSession$Listener")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,1,"onCalling","(Landroid/net/sip/SipSession;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,2,"onRinging","(Landroid/net/sip/SipSession;Landroid/net/sip/SipProfile;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,3,"onRingingBack","(Landroid/net/sip/SipSession;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,4,"onCallEstablished","(Landroid/net/sip/SipSession;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,5,"onCallEnded","(Landroid/net/sip/SipSession;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,6,"onCallBusy","(Landroid/net/sip/SipSession;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,7,"onError","(Landroid/net/sip/SipSession;ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,8,"onCallChangeFailed","(Landroid/net/sip/SipSession;ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,9,"onRegistering","(Landroid/net/sip/SipSession;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,10,"onRegistrationDone","(Landroid/net/sip/SipSession;I)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,11,"onRegistrationFailed","(Landroid/net/sip/SipSession;ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::Listener,12,"onRegistrationTimeout","(Landroid/net/sip/SipSession;)V")


android::net::sip::SipSession_::State::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< java::lang::String > android::net::sip::SipSession_::State::toString(jint a0)
{
	return call_static_method<
		android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
		android::net::sip::SipSession_::State::J2CPP_METHOD_NAME(1),
		android::net::sip::SipSession_::State::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(a0);
}


static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(0),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(0),
	jint
> android::net::sip::SipSession_::State::READY_TO_CALL;

static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(1),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(1),
	jint
> android::net::sip::SipSession_::State::REGISTERING;

static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(2),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(2),
	jint
> android::net::sip::SipSession_::State::DEREGISTERING;

static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(3),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(3),
	jint
> android::net::sip::SipSession_::State::INCOMING_CALL;

static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(4),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(4),
	jint
> android::net::sip::SipSession_::State::INCOMING_CALL_ANSWERING;

static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(5),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(5),
	jint
> android::net::sip::SipSession_::State::OUTGOING_CALL;

static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(6),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(6),
	jint
> android::net::sip::SipSession_::State::OUTGOING_CALL_RING_BACK;

static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(7),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(7),
	jint
> android::net::sip::SipSession_::State::OUTGOING_CALL_CANCELING;

static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(8),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(8),
	jint
> android::net::sip::SipSession_::State::IN_CALL;

static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(9),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(9),
	jint
> android::net::sip::SipSession_::State::PINGING;

static_field<
	android::net::sip::SipSession_::State::J2CPP_CLASS_NAME,
	android::net::sip::SipSession_::State::J2CPP_FIELD_NAME(10),
	android::net::sip::SipSession_::State::J2CPP_FIELD_SIGNATURE(10),
	jint
> android::net::sip::SipSession_::State::NOT_DEFINED;


J2CPP_DEFINE_CLASS(android::net::sip::SipSession_::State,"android/net/sip/SipSession$State")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::State,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession_::State,1,"toString","(I)Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,0,"READY_TO_CALL","I")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,1,"REGISTERING","I")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,2,"DEREGISTERING","I")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,3,"INCOMING_CALL","I")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,4,"INCOMING_CALL_ANSWERING","I")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,5,"OUTGOING_CALL","I")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,6,"OUTGOING_CALL_RING_BACK","I")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,7,"OUTGOING_CALL_CANCELING","I")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,8,"IN_CALL","I")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,9,"PINGING","I")
J2CPP_DEFINE_FIELD(android::net::sip::SipSession_::State,10,"NOT_DEFINED","I")



android::net::sip::SipSession::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


local_ref< java::lang::String > android::net::sip::SipSession::getLocalIp()
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(1),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< android::net::sip::SipProfile > android::net::sip::SipSession::getLocalProfile()
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(2),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< android::net::sip::SipProfile >
	>(get_jobject());
}

local_ref< android::net::sip::SipProfile > android::net::sip::SipSession::getPeerProfile()
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(3),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< android::net::sip::SipProfile >
	>(get_jobject());
}

jint android::net::sip::SipSession::getState()
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(4),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(4), 
		jint
	>(get_jobject());
}

jboolean android::net::sip::SipSession::isInCall()
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(5),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(5), 
		jboolean
	>(get_jobject());
}

local_ref< java::lang::String > android::net::sip::SipSession::getCallId()
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(6),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::lang::String >
	>(get_jobject());
}

void android::net::sip::SipSession::setListener(local_ref< android::net::sip::SipSession_::Listener > const &a0)
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(7),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(7), 
		void
	>(get_jobject(), a0);
}

void android::net::sip::SipSession::register_(jint a0)
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(8),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(8), 
		void
	>(get_jobject(), a0);
}

void android::net::sip::SipSession::unregister()
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(9),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(9), 
		void
	>(get_jobject());
}

void android::net::sip::SipSession::makeCall(local_ref< android::net::sip::SipProfile > const &a0, local_ref< java::lang::String > const &a1, jint a2)
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(10),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(10), 
		void
	>(get_jobject(), a0, a1, a2);
}

void android::net::sip::SipSession::answerCall(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(11),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(11), 
		void
	>(get_jobject(), a0, a1);
}

void android::net::sip::SipSession::endCall()
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(12),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(12), 
		void
	>(get_jobject());
}

void android::net::sip::SipSession::changeCall(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::net::sip::SipSession::J2CPP_CLASS_NAME,
		android::net::sip::SipSession::J2CPP_METHOD_NAME(13),
		android::net::sip::SipSession::J2CPP_METHOD_SIGNATURE(13), 
		void
	>(get_jobject(), a0, a1);
}


J2CPP_DEFINE_CLASS(android::net::sip::SipSession,"android/net/sip/SipSession")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,1,"getLocalIp","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,2,"getLocalProfile","()Landroid/net/sip/SipProfile;")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,3,"getPeerProfile","()Landroid/net/sip/SipProfile;")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,4,"getState","()I")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,5,"isInCall","()Z")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,6,"getCallId","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,7,"setListener","(Landroid/net/sip/SipSession$Listener;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,8,"register","(I)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,9,"unregister","()V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,10,"makeCall","(Landroid/net/sip/SipProfile;Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,11,"answerCall","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,12,"endCall","()V")
J2CPP_DEFINE_METHOD(android::net::sip::SipSession,13,"changeCall","(Ljava/lang/String;I)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_SIP_SIPSESSION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
