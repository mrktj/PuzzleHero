/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.net.sip.SipProfile
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_DECL
#define J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Cloneable; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace io { class Serializable; } } }
namespace j2cpp { namespace android { namespace net { namespace sip { namespace SipProfile_ { class Builder; } } } } }
namespace j2cpp { namespace android { namespace os { class Parcelable; } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }


#include <android/net/sip/SipProfile.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <java/io/Serializable.hpp>
#include <java/lang/Cloneable.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace net { namespace sip {

	class SipProfile;
	namespace SipProfile_ {

		class Builder;
		class Builder
			: public object<Builder>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)
			J2CPP_DECLARE_METHOD(6)
			J2CPP_DECLARE_METHOD(7)
			J2CPP_DECLARE_METHOD(8)
			J2CPP_DECLARE_METHOD(9)
			J2CPP_DECLARE_METHOD(10)
			J2CPP_DECLARE_METHOD(11)

			explicit Builder(jobject jobj)
			: object<Builder>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			Builder(local_ref< android::net::sip::SipProfile > const&);
			Builder(local_ref< java::lang::String > const&);
			Builder(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
			local_ref< android::net::sip::SipProfile_::Builder > setProfileName(local_ref< java::lang::String >  const&);
			local_ref< android::net::sip::SipProfile_::Builder > setPassword(local_ref< java::lang::String >  const&);
			local_ref< android::net::sip::SipProfile_::Builder > setPort(jint);
			local_ref< android::net::sip::SipProfile_::Builder > setProtocol(local_ref< java::lang::String >  const&);
			local_ref< android::net::sip::SipProfile_::Builder > setOutboundProxy(local_ref< java::lang::String >  const&);
			local_ref< android::net::sip::SipProfile_::Builder > setDisplayName(local_ref< java::lang::String >  const&);
			local_ref< android::net::sip::SipProfile_::Builder > setSendKeepAlive(jboolean);
			local_ref< android::net::sip::SipProfile_::Builder > setAutoRegistration(jboolean);
			local_ref< android::net::sip::SipProfile > build();
		}; //class Builder

	} //namespace SipProfile_

	class SipProfile
		: public object<SipProfile>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_FIELD(0)

		typedef SipProfile_::Builder Builder;

		explicit SipProfile(jobject jobj)
		: object<SipProfile>(jobj)
		{
		}

		operator local_ref<java::lang::Cloneable>() const;
		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::io::Serializable>() const;
		operator local_ref<android::os::Parcelable>() const;


		void writeToParcel(local_ref< android::os::Parcel >  const&, jint);
		jint describeContents();
		local_ref< java::lang::String > getUriString();
		local_ref< java::lang::String > getDisplayName();
		local_ref< java::lang::String > getUserName();
		local_ref< java::lang::String > getPassword();
		local_ref< java::lang::String > getSipDomain();
		jint getPort();
		local_ref< java::lang::String > getProtocol();
		local_ref< java::lang::String > getProxyAddress();
		local_ref< java::lang::String > getProfileName();
		jboolean getSendKeepAlive();
		jboolean getAutoRegistration();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class SipProfile

} //namespace sip
} //namespace net
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_IMPL
#define J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_IMPL

namespace j2cpp {




android::net::sip::SipProfile_::Builder::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::net::sip::SipProfile_::Builder::Builder(local_ref< android::net::sip::SipProfile > const &a0)
: object<android::net::sip::SipProfile_::Builder>(
	call_new_object<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(0),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}



android::net::sip::SipProfile_::Builder::Builder(local_ref< java::lang::String > const &a0)
: object<android::net::sip::SipProfile_::Builder>(
	call_new_object<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(1),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(1)
	>(a0)
)
{
}



android::net::sip::SipProfile_::Builder::Builder(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
: object<android::net::sip::SipProfile_::Builder>(
	call_new_object<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(2),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(2)
	>(a0, a1)
)
{
}


local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setProfileName(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(3),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< android::net::sip::SipProfile_::Builder >
	>(get_jobject(), a0);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setPassword(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(4),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< android::net::sip::SipProfile_::Builder >
	>(get_jobject(), a0);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setPort(jint a0)
{
	return call_method<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(5),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< android::net::sip::SipProfile_::Builder >
	>(get_jobject(), a0);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setProtocol(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(6),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< android::net::sip::SipProfile_::Builder >
	>(get_jobject(), a0);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setOutboundProxy(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(7),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< android::net::sip::SipProfile_::Builder >
	>(get_jobject(), a0);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setDisplayName(local_ref< java::lang::String > const &a0)
{
	return call_method<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(8),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< android::net::sip::SipProfile_::Builder >
	>(get_jobject(), a0);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setSendKeepAlive(jboolean a0)
{
	return call_method<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(9),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< android::net::sip::SipProfile_::Builder >
	>(get_jobject(), a0);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setAutoRegistration(jboolean a0)
{
	return call_method<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(10),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< android::net::sip::SipProfile_::Builder >
	>(get_jobject(), a0);
}

local_ref< android::net::sip::SipProfile > android::net::sip::SipProfile_::Builder::build()
{
	return call_method<
		android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(11),
		android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< android::net::sip::SipProfile >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(android::net::sip::SipProfile_::Builder,"android/net/sip/SipProfile$Builder")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,0,"<init>","(Landroid/net/sip/SipProfile;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,1,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,2,"<init>","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,3,"setProfileName","(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,4,"setPassword","(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,5,"setPort","(I)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,6,"setProtocol","(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,7,"setOutboundProxy","(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,8,"setDisplayName","(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,9,"setSendKeepAlive","(Z)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,10,"setAutoRegistration","(Z)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,11,"build","()Landroid/net/sip/SipProfile;")



android::net::sip::SipProfile::operator local_ref<java::lang::Cloneable>() const
{
	return local_ref<java::lang::Cloneable>(get_jobject());
}

android::net::sip::SipProfile::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::net::sip::SipProfile::operator local_ref<java::io::Serializable>() const
{
	return local_ref<java::io::Serializable>(get_jobject());
}

android::net::sip::SipProfile::operator local_ref<android::os::Parcelable>() const
{
	return local_ref<android::os::Parcelable>(get_jobject());
}


void android::net::sip::SipProfile::writeToParcel(local_ref< android::os::Parcel > const &a0, jint a1)
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(1),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0, a1);
}

jint android::net::sip::SipProfile::describeContents()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(2),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > android::net::sip::SipProfile::getUriString()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(3),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > android::net::sip::SipProfile::getDisplayName()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(4),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > android::net::sip::SipProfile::getUserName()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(5),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > android::net::sip::SipProfile::getPassword()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(6),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > android::net::sip::SipProfile::getSipDomain()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(7),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jint android::net::sip::SipProfile::getPort()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(8),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(8), 
		jint
	>(get_jobject());
}

local_ref< java::lang::String > android::net::sip::SipProfile::getProtocol()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(9),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > android::net::sip::SipProfile::getProxyAddress()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(10),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::lang::String >
	>(get_jobject());
}

local_ref< java::lang::String > android::net::sip::SipProfile::getProfileName()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(11),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< java::lang::String >
	>(get_jobject());
}

jboolean android::net::sip::SipProfile::getSendKeepAlive()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(12),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(12), 
		jboolean
	>(get_jobject());
}

jboolean android::net::sip::SipProfile::getAutoRegistration()
{
	return call_method<
		android::net::sip::SipProfile::J2CPP_CLASS_NAME,
		android::net::sip::SipProfile::J2CPP_METHOD_NAME(13),
		android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(13), 
		jboolean
	>(get_jobject());
}



static_field<
	android::net::sip::SipProfile::J2CPP_CLASS_NAME,
	android::net::sip::SipProfile::J2CPP_FIELD_NAME(0),
	android::net::sip::SipProfile::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::os::Parcelable_::Creator >
> android::net::sip::SipProfile::CREATOR;


J2CPP_DEFINE_CLASS(android::net::sip::SipProfile,"android/net/sip/SipProfile")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,1,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,2,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,3,"getUriString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,4,"getDisplayName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,5,"getUserName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,6,"getPassword","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,7,"getSipDomain","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,8,"getPort","()I")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,9,"getProtocol","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,10,"getProxyAddress","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,11,"getProfileName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,12,"getSendKeepAlive","()Z")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,13,"getAutoRegistration","()Z")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,14,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::net::sip::SipProfile,0,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
