/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.net.SSLCertificateSocketFactory
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_SSLCERTIFICATESOCKETFACTORY_HPP_DECL
#define J2CPP_ANDROID_NET_SSLCERTIFICATESOCKETFACTORY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace javax { namespace net { namespace ssl { class SSLSocketFactory; } } } }
namespace j2cpp { namespace javax { namespace net { class SocketFactory; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace net { class InetAddress; } } }
namespace j2cpp { namespace java { namespace net { class Socket; } } }
namespace j2cpp { namespace android { namespace net { class SSLSessionCache; } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { namespace ssl { class SSLSocketFactory; } } } } } }


#include <android/net/SSLSessionCache.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/net/InetAddress.hpp>
#include <java/net/Socket.hpp>
#include <javax/net/SocketFactory.hpp>
#include <javax/net/ssl/SSLSocketFactory.hpp>
#include <org/apache/http/conn/ssl/SSLSocketFactory.hpp>


namespace j2cpp {

namespace android { namespace net {

	class SSLCertificateSocketFactory;
	class SSLCertificateSocketFactory
		: public object<SSLCertificateSocketFactory>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)

		explicit SSLCertificateSocketFactory(jobject jobj)
		: object<SSLCertificateSocketFactory>(jobj)
		{
		}

		operator local_ref<javax::net::ssl::SSLSocketFactory>() const;
		operator local_ref<javax::net::SocketFactory>() const;
		operator local_ref<java::lang::Object>() const;


		SSLCertificateSocketFactory(jint);
		static local_ref< javax::net::SocketFactory > getDefault(jint);
		static local_ref< javax::net::ssl::SSLSocketFactory > getDefault(jint, local_ref< android::net::SSLSessionCache >  const&);
		static local_ref< javax::net::ssl::SSLSocketFactory > getInsecure(jint, local_ref< android::net::SSLSessionCache >  const&);
		static local_ref< org::apache::http::conn::ssl::SSLSocketFactory > getHttpSocketFactory(jint, local_ref< android::net::SSLSessionCache >  const&);
		local_ref< java::net::Socket > createSocket(local_ref< java::net::Socket >  const&, local_ref< java::lang::String >  const&, jint, jboolean);
		local_ref< java::net::Socket > createSocket();
		local_ref< java::net::Socket > createSocket(local_ref< java::net::InetAddress >  const&, jint, local_ref< java::net::InetAddress >  const&, jint);
		local_ref< java::net::Socket > createSocket(local_ref< java::net::InetAddress >  const&, jint);
		local_ref< java::net::Socket > createSocket(local_ref< java::lang::String >  const&, jint, local_ref< java::net::InetAddress >  const&, jint);
		local_ref< java::net::Socket > createSocket(local_ref< java::lang::String >  const&, jint);
		local_ref< array< local_ref< java::lang::String >, 1> > getDefaultCipherSuites();
		local_ref< array< local_ref< java::lang::String >, 1> > getSupportedCipherSuites();
	}; //class SSLCertificateSocketFactory

} //namespace net
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_SSLCERTIFICATESOCKETFACTORY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_SSLCERTIFICATESOCKETFACTORY_HPP_IMPL
#define J2CPP_ANDROID_NET_SSLCERTIFICATESOCKETFACTORY_HPP_IMPL

namespace j2cpp {



android::net::SSLCertificateSocketFactory::operator local_ref<javax::net::ssl::SSLSocketFactory>() const
{
	return local_ref<javax::net::ssl::SSLSocketFactory>(get_jobject());
}

android::net::SSLCertificateSocketFactory::operator local_ref<javax::net::SocketFactory>() const
{
	return local_ref<javax::net::SocketFactory>(get_jobject());
}

android::net::SSLCertificateSocketFactory::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::net::SSLCertificateSocketFactory::SSLCertificateSocketFactory(jint a0)
: object<android::net::SSLCertificateSocketFactory>(
	call_new_object<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(0),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(0)
	>(a0)
)
{
}


local_ref< javax::net::SocketFactory > android::net::SSLCertificateSocketFactory::getDefault(jint a0)
{
	return call_static_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(1),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< javax::net::SocketFactory >
	>(a0);
}

local_ref< javax::net::ssl::SSLSocketFactory > android::net::SSLCertificateSocketFactory::getDefault(jint a0, local_ref< android::net::SSLSessionCache > const &a1)
{
	return call_static_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(2),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(2), 
		local_ref< javax::net::ssl::SSLSocketFactory >
	>(a0, a1);
}

local_ref< javax::net::ssl::SSLSocketFactory > android::net::SSLCertificateSocketFactory::getInsecure(jint a0, local_ref< android::net::SSLSessionCache > const &a1)
{
	return call_static_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(3),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(3), 
		local_ref< javax::net::ssl::SSLSocketFactory >
	>(a0, a1);
}

local_ref< org::apache::http::conn::ssl::SSLSocketFactory > android::net::SSLCertificateSocketFactory::getHttpSocketFactory(jint a0, local_ref< android::net::SSLSessionCache > const &a1)
{
	return call_static_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(4),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(4), 
		local_ref< org::apache::http::conn::ssl::SSLSocketFactory >
	>(a0, a1);
}

local_ref< java::net::Socket > android::net::SSLCertificateSocketFactory::createSocket(local_ref< java::net::Socket > const &a0, local_ref< java::lang::String > const &a1, jint a2, jboolean a3)
{
	return call_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(5),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(5), 
		local_ref< java::net::Socket >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::net::Socket > android::net::SSLCertificateSocketFactory::createSocket()
{
	return call_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(6),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(6), 
		local_ref< java::net::Socket >
	>(get_jobject());
}

local_ref< java::net::Socket > android::net::SSLCertificateSocketFactory::createSocket(local_ref< java::net::InetAddress > const &a0, jint a1, local_ref< java::net::InetAddress > const &a2, jint a3)
{
	return call_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(7),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(7), 
		local_ref< java::net::Socket >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::net::Socket > android::net::SSLCertificateSocketFactory::createSocket(local_ref< java::net::InetAddress > const &a0, jint a1)
{
	return call_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(8),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(8), 
		local_ref< java::net::Socket >
	>(get_jobject(), a0, a1);
}

local_ref< java::net::Socket > android::net::SSLCertificateSocketFactory::createSocket(local_ref< java::lang::String > const &a0, jint a1, local_ref< java::net::InetAddress > const &a2, jint a3)
{
	return call_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(9),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(9), 
		local_ref< java::net::Socket >
	>(get_jobject(), a0, a1, a2, a3);
}

local_ref< java::net::Socket > android::net::SSLCertificateSocketFactory::createSocket(local_ref< java::lang::String > const &a0, jint a1)
{
	return call_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(10),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(10), 
		local_ref< java::net::Socket >
	>(get_jobject(), a0, a1);
}

local_ref< array< local_ref< java::lang::String >, 1> > android::net::SSLCertificateSocketFactory::getDefaultCipherSuites()
{
	return call_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(11),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(11), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject());
}

local_ref< array< local_ref< java::lang::String >, 1> > android::net::SSLCertificateSocketFactory::getSupportedCipherSuites()
{
	return call_method<
		android::net::SSLCertificateSocketFactory::J2CPP_CLASS_NAME,
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_NAME(12),
		android::net::SSLCertificateSocketFactory::J2CPP_METHOD_SIGNATURE(12), 
		local_ref< array< local_ref< java::lang::String >, 1> >
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(android::net::SSLCertificateSocketFactory,"android/net/SSLCertificateSocketFactory")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,0,"<init>","(I)V")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,1,"getDefault","(I)Ljavax/net/SocketFactory;")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,2,"getDefault","(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,3,"getInsecure","(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,4,"getHttpSocketFactory","(ILandroid/net/SSLSessionCache;)Lorg/apache/http/conn/ssl/SSLSocketFactory;")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,5,"createSocket","(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,6,"createSocket","()Ljava/net/Socket;")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,7,"createSocket","(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,8,"createSocket","(Ljava/net/InetAddress;I)Ljava/net/Socket;")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,9,"createSocket","(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,10,"createSocket","(Ljava/lang/String;I)Ljava/net/Socket;")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,11,"getDefaultCipherSuites","()[java.lang.String")
J2CPP_DEFINE_METHOD(android::net::SSLCertificateSocketFactory,12,"getSupportedCipherSuites","()[java.lang.String")

} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_SSLCERTIFICATESOCKETFACTORY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
