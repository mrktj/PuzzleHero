/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.text.AndroidCharacter
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_DECL
#define J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace text {

	class AndroidCharacter;
	class AndroidCharacter
		: public object<AndroidCharacter>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)

		explicit AndroidCharacter(jobject jobj)
		: object<AndroidCharacter>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		AndroidCharacter();
		static void getDirectionalities(local_ref< array<jchar,1> >  const&, local_ref< array<jbyte,1> >  const&, jint);
		static jint getEastAsianWidth(jchar);
		static void getEastAsianWidths(local_ref< array<jchar,1> >  const&, jint, jint, local_ref< array<jbyte,1> >  const&);
		static jboolean mirror(local_ref< array<jchar,1> >  const&, jint, jint);
		static jchar getMirror(jchar);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > EAST_ASIAN_WIDTH_NEUTRAL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > EAST_ASIAN_WIDTH_AMBIGUOUS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > EAST_ASIAN_WIDTH_HALF_WIDTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > EAST_ASIAN_WIDTH_FULL_WIDTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > EAST_ASIAN_WIDTH_NARROW;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jint > EAST_ASIAN_WIDTH_WIDE;
	}; //class AndroidCharacter

} //namespace text
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_IMPL
#define J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_IMPL

namespace j2cpp {



android::text::AndroidCharacter::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::text::AndroidCharacter::AndroidCharacter()
: object<android::text::AndroidCharacter>(
	call_new_object<
		android::text::AndroidCharacter::J2CPP_CLASS_NAME,
		android::text::AndroidCharacter::J2CPP_METHOD_NAME(0),
		android::text::AndroidCharacter::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


void android::text::AndroidCharacter::getDirectionalities(local_ref< array<jchar,1> > const &a0, local_ref< array<jbyte,1> > const &a1, jint a2)
{
	return call_static_method<
		android::text::AndroidCharacter::J2CPP_CLASS_NAME,
		android::text::AndroidCharacter::J2CPP_METHOD_NAME(1),
		android::text::AndroidCharacter::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(a0, a1, a2);
}

jint android::text::AndroidCharacter::getEastAsianWidth(jchar a0)
{
	return call_static_method<
		android::text::AndroidCharacter::J2CPP_CLASS_NAME,
		android::text::AndroidCharacter::J2CPP_METHOD_NAME(2),
		android::text::AndroidCharacter::J2CPP_METHOD_SIGNATURE(2), 
		jint
	>(a0);
}

void android::text::AndroidCharacter::getEastAsianWidths(local_ref< array<jchar,1> > const &a0, jint a1, jint a2, local_ref< array<jbyte,1> > const &a3)
{
	return call_static_method<
		android::text::AndroidCharacter::J2CPP_CLASS_NAME,
		android::text::AndroidCharacter::J2CPP_METHOD_NAME(3),
		android::text::AndroidCharacter::J2CPP_METHOD_SIGNATURE(3), 
		void
	>(a0, a1, a2, a3);
}

jboolean android::text::AndroidCharacter::mirror(local_ref< array<jchar,1> > const &a0, jint a1, jint a2)
{
	return call_static_method<
		android::text::AndroidCharacter::J2CPP_CLASS_NAME,
		android::text::AndroidCharacter::J2CPP_METHOD_NAME(4),
		android::text::AndroidCharacter::J2CPP_METHOD_SIGNATURE(4), 
		jboolean
	>(a0, a1, a2);
}

jchar android::text::AndroidCharacter::getMirror(jchar a0)
{
	return call_static_method<
		android::text::AndroidCharacter::J2CPP_CLASS_NAME,
		android::text::AndroidCharacter::J2CPP_METHOD_NAME(5),
		android::text::AndroidCharacter::J2CPP_METHOD_SIGNATURE(5), 
		jchar
	>(a0);
}


static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(0),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(0),
	jint
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_NEUTRAL;

static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(1),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(1),
	jint
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_AMBIGUOUS;

static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(2),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(2),
	jint
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_HALF_WIDTH;

static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(3),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(3),
	jint
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_FULL_WIDTH;

static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(4),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(4),
	jint
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_NARROW;

static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(5),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(5),
	jint
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_WIDE;


J2CPP_DEFINE_CLASS(android::text::AndroidCharacter,"android/text/AndroidCharacter")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,1,"getDirectionalities","([C[BI)V")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,2,"getEastAsianWidth","(C)I")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,3,"getEastAsianWidths","([CII[B)V")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,4,"mirror","([CII)Z")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,5,"getMirror","(C)C")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,0,"EAST_ASIAN_WIDTH_NEUTRAL","I")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,1,"EAST_ASIAN_WIDTH_AMBIGUOUS","I")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,2,"EAST_ASIAN_WIDTH_HALF_WIDTH","I")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,3,"EAST_ASIAN_WIDTH_FULL_WIDTH","I")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,4,"EAST_ASIAN_WIDTH_NARROW","I")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,5,"EAST_ASIAN_WIDTH_WIDE","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
