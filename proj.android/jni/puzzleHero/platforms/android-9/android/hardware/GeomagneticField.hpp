/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.hardware.GeomagneticField
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_HARDWARE_GEOMAGNETICFIELD_HPP_DECL
#define J2CPP_ANDROID_HARDWARE_GEOMAGNETICFIELD_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace hardware {

	class GeomagneticField;
	class GeomagneticField
		: public object<GeomagneticField>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)

		explicit GeomagneticField(jobject jobj)
		: object<GeomagneticField>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		GeomagneticField(jfloat, jfloat, jfloat, jlong);
		jfloat getX();
		jfloat getY();
		jfloat getZ();
		jfloat getDeclination();
		jfloat getInclination();
		jfloat getHorizontalStrength();
		jfloat getFieldStrength();
	}; //class GeomagneticField

} //namespace hardware
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_HARDWARE_GEOMAGNETICFIELD_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_HARDWARE_GEOMAGNETICFIELD_HPP_IMPL
#define J2CPP_ANDROID_HARDWARE_GEOMAGNETICFIELD_HPP_IMPL

namespace j2cpp {



android::hardware::GeomagneticField::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::hardware::GeomagneticField::GeomagneticField(jfloat a0, jfloat a1, jfloat a2, jlong a3)
: object<android::hardware::GeomagneticField>(
	call_new_object<
		android::hardware::GeomagneticField::J2CPP_CLASS_NAME,
		android::hardware::GeomagneticField::J2CPP_METHOD_NAME(0),
		android::hardware::GeomagneticField::J2CPP_METHOD_SIGNATURE(0)
	>(a0, a1, a2, a3)
)
{
}


jfloat android::hardware::GeomagneticField::getX()
{
	return call_method<
		android::hardware::GeomagneticField::J2CPP_CLASS_NAME,
		android::hardware::GeomagneticField::J2CPP_METHOD_NAME(1),
		android::hardware::GeomagneticField::J2CPP_METHOD_SIGNATURE(1), 
		jfloat
	>(get_jobject());
}

jfloat android::hardware::GeomagneticField::getY()
{
	return call_method<
		android::hardware::GeomagneticField::J2CPP_CLASS_NAME,
		android::hardware::GeomagneticField::J2CPP_METHOD_NAME(2),
		android::hardware::GeomagneticField::J2CPP_METHOD_SIGNATURE(2), 
		jfloat
	>(get_jobject());
}

jfloat android::hardware::GeomagneticField::getZ()
{
	return call_method<
		android::hardware::GeomagneticField::J2CPP_CLASS_NAME,
		android::hardware::GeomagneticField::J2CPP_METHOD_NAME(3),
		android::hardware::GeomagneticField::J2CPP_METHOD_SIGNATURE(3), 
		jfloat
	>(get_jobject());
}

jfloat android::hardware::GeomagneticField::getDeclination()
{
	return call_method<
		android::hardware::GeomagneticField::J2CPP_CLASS_NAME,
		android::hardware::GeomagneticField::J2CPP_METHOD_NAME(4),
		android::hardware::GeomagneticField::J2CPP_METHOD_SIGNATURE(4), 
		jfloat
	>(get_jobject());
}

jfloat android::hardware::GeomagneticField::getInclination()
{
	return call_method<
		android::hardware::GeomagneticField::J2CPP_CLASS_NAME,
		android::hardware::GeomagneticField::J2CPP_METHOD_NAME(5),
		android::hardware::GeomagneticField::J2CPP_METHOD_SIGNATURE(5), 
		jfloat
	>(get_jobject());
}

jfloat android::hardware::GeomagneticField::getHorizontalStrength()
{
	return call_method<
		android::hardware::GeomagneticField::J2CPP_CLASS_NAME,
		android::hardware::GeomagneticField::J2CPP_METHOD_NAME(6),
		android::hardware::GeomagneticField::J2CPP_METHOD_SIGNATURE(6), 
		jfloat
	>(get_jobject());
}

jfloat android::hardware::GeomagneticField::getFieldStrength()
{
	return call_method<
		android::hardware::GeomagneticField::J2CPP_CLASS_NAME,
		android::hardware::GeomagneticField::J2CPP_METHOD_NAME(7),
		android::hardware::GeomagneticField::J2CPP_METHOD_SIGNATURE(7), 
		jfloat
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(android::hardware::GeomagneticField,"android/hardware/GeomagneticField")
J2CPP_DEFINE_METHOD(android::hardware::GeomagneticField,0,"<init>","(FFFJ)V")
J2CPP_DEFINE_METHOD(android::hardware::GeomagneticField,1,"getX","()F")
J2CPP_DEFINE_METHOD(android::hardware::GeomagneticField,2,"getY","()F")
J2CPP_DEFINE_METHOD(android::hardware::GeomagneticField,3,"getZ","()F")
J2CPP_DEFINE_METHOD(android::hardware::GeomagneticField,4,"getDeclination","()F")
J2CPP_DEFINE_METHOD(android::hardware::GeomagneticField,5,"getInclination","()F")
J2CPP_DEFINE_METHOD(android::hardware::GeomagneticField,6,"getHorizontalStrength","()F")
J2CPP_DEFINE_METHOD(android::hardware::GeomagneticField,7,"getFieldStrength","()F")

} //namespace j2cpp

#endif //J2CPP_ANDROID_HARDWARE_GEOMAGNETICFIELD_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
