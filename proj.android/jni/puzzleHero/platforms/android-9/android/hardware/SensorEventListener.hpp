/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.hardware.SensorEventListener
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_HARDWARE_SENSOREVENTLISTENER_HPP_DECL
#define J2CPP_ANDROID_HARDWARE_SENSOREVENTLISTENER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace hardware { class Sensor; } } }
namespace j2cpp { namespace android { namespace hardware { class SensorEvent; } } }


#include <android/hardware/Sensor.hpp>
#include <android/hardware/SensorEvent.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace hardware {

	class SensorEventListener;
	class SensorEventListener
		: public object<SensorEventListener>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit SensorEventListener(jobject jobj)
		: object<SensorEventListener>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void onSensorChanged(local_ref< android::hardware::SensorEvent >  const&);
		void onAccuracyChanged(local_ref< android::hardware::Sensor >  const&, jint);
	}; //class SensorEventListener

} //namespace hardware
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_HARDWARE_SENSOREVENTLISTENER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_HARDWARE_SENSOREVENTLISTENER_HPP_IMPL
#define J2CPP_ANDROID_HARDWARE_SENSOREVENTLISTENER_HPP_IMPL

namespace j2cpp {



android::hardware::SensorEventListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void android::hardware::SensorEventListener::onSensorChanged(local_ref< android::hardware::SensorEvent > const &a0)
{
	return call_method<
		android::hardware::SensorEventListener::J2CPP_CLASS_NAME,
		android::hardware::SensorEventListener::J2CPP_METHOD_NAME(0),
		android::hardware::SensorEventListener::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject(), a0);
}

void android::hardware::SensorEventListener::onAccuracyChanged(local_ref< android::hardware::Sensor > const &a0, jint a1)
{
	return call_method<
		android::hardware::SensorEventListener::J2CPP_CLASS_NAME,
		android::hardware::SensorEventListener::J2CPP_METHOD_NAME(1),
		android::hardware::SensorEventListener::J2CPP_METHOD_SIGNATURE(1), 
		void
	>(get_jobject(), a0, a1);
}


J2CPP_DEFINE_CLASS(android::hardware::SensorEventListener,"android/hardware/SensorEventListener")
J2CPP_DEFINE_METHOD(android::hardware::SensorEventListener,0,"onSensorChanged","(Landroid/hardware/SensorEvent;)V")
J2CPP_DEFINE_METHOD(android::hardware::SensorEventListener,1,"onAccuracyChanged","(Landroid/hardware/Sensor;I)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_HARDWARE_SENSOREVENTLISTENER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
