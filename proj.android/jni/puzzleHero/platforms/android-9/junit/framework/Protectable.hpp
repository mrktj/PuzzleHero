/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: junit.framework.Protectable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_DECL
#define J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace junit { namespace framework {

	class Protectable;
	class Protectable
		: public object<Protectable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		explicit Protectable(jobject jobj)
		: object<Protectable>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void protect();
	}; //class Protectable

} //namespace framework
} //namespace junit

} //namespace j2cpp

#endif //J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_IMPL
#define J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_IMPL

namespace j2cpp {



junit::framework::Protectable::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

void junit::framework::Protectable::protect()
{
	return call_method<
		junit::framework::Protectable::J2CPP_CLASS_NAME,
		junit::framework::Protectable::J2CPP_METHOD_NAME(0),
		junit::framework::Protectable::J2CPP_METHOD_SIGNATURE(0), 
		void
	>(get_jobject());
}


J2CPP_DEFINE_CLASS(junit::framework::Protectable,"junit/framework/Protectable")
J2CPP_DEFINE_METHOD(junit::framework::Protectable,0,"protect","()V")

} //namespace j2cpp

#endif //J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
