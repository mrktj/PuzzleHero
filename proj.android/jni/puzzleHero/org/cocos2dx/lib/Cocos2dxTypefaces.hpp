/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: org.cocos2dx.lib.Cocos2dxTypefaces
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_COCOS2DX_LIB_COCOS2DXTYPEFACES_HPP_DECL
#define J2CPP_ORG_COCOS2DX_LIB_COCOS2DXTYPEFACES_HPP_DECL


namespace j2cpp { namespace android { namespace graphics { class Typeface; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <android/content/Context.hpp>
#include <android/graphics/Typeface.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace org { namespace cocos2dx { namespace lib {

	class Cocos2dxTypefaces;
	class Cocos2dxTypefaces
		: public object<Cocos2dxTypefaces>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_FIELD(0)

		explicit Cocos2dxTypefaces(jobject jobj)
		: object<Cocos2dxTypefaces>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		Cocos2dxTypefaces();
		static local_ref< android::graphics::Typeface > get(local_ref< android::content::Context >  const&, local_ref< java::lang::String >  const&);

	}; //class Cocos2dxTypefaces

} //namespace lib
} //namespace cocos2dx
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_COCOS2DX_LIB_COCOS2DXTYPEFACES_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_COCOS2DX_LIB_COCOS2DXTYPEFACES_HPP_IMPL
#define J2CPP_ORG_COCOS2DX_LIB_COCOS2DXTYPEFACES_HPP_IMPL

namespace j2cpp {



org::cocos2dx::lib::Cocos2dxTypefaces::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


org::cocos2dx::lib::Cocos2dxTypefaces::Cocos2dxTypefaces()
: object<org::cocos2dx::lib::Cocos2dxTypefaces>(
	call_new_object<
		org::cocos2dx::lib::Cocos2dxTypefaces::J2CPP_CLASS_NAME,
		org::cocos2dx::lib::Cocos2dxTypefaces::J2CPP_METHOD_NAME(0),
		org::cocos2dx::lib::Cocos2dxTypefaces::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}


local_ref< android::graphics::Typeface > org::cocos2dx::lib::Cocos2dxTypefaces::get(local_ref< android::content::Context > const &a0, local_ref< java::lang::String > const &a1)
{
	return call_static_method<
		org::cocos2dx::lib::Cocos2dxTypefaces::J2CPP_CLASS_NAME,
		org::cocos2dx::lib::Cocos2dxTypefaces::J2CPP_METHOD_NAME(1),
		org::cocos2dx::lib::Cocos2dxTypefaces::J2CPP_METHOD_SIGNATURE(1), 
		local_ref< android::graphics::Typeface >
	>(a0, a1);
}




J2CPP_DEFINE_CLASS(org::cocos2dx::lib::Cocos2dxTypefaces,"org/cocos2dx/lib/Cocos2dxTypefaces")
J2CPP_DEFINE_METHOD(org::cocos2dx::lib::Cocos2dxTypefaces,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::cocos2dx::lib::Cocos2dxTypefaces,1,"get","(Landroid/content/Context;Ljava/lang/String;)Landroid/graphics/Typeface;")
J2CPP_DEFINE_METHOD(org::cocos2dx::lib::Cocos2dxTypefaces,2,"<clinit>","()V")
J2CPP_DEFINE_FIELD(org::cocos2dx::lib::Cocos2dxTypefaces,0,"sTypefaceCache","Ljava/util/HashMap;")

} //namespace j2cpp

#endif //J2CPP_ORG_COCOS2DX_LIB_COCOS2DXTYPEFACES_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
